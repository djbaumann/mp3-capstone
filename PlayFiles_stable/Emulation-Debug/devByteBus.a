
//_____________________________________________________________
//
	.sect code,DevByteBusIdentify	// 2 words
	.export _DevByteBusIdentify
_DevByteBusIdentify:
// 	return "Bytewide Bus";
	jr
	ldc bytewideb_1,A0	// ET0
// jumped away

//_____________________________________________________________
//
	.sect code,DevByteBusCreate	// 72 words
	.export _DevByteBusCreate
_DevByteBusCreate:
	ldc 33,A0	// 33 -> A0
	ldx (I6)+1,NULL	// I6 += 1
	stx LR0,(I6)+1
	stx I6,(I6) ; sty I4,(I6)
	ldx (I6)+1,I4
	stx A1,(I6) ; sty C0,(I6)+1
	stx C1,(I6) ; sty I1,(I6)+1
	ldc _devByteBusDefaults,I1	// I1
	stx I2,(I6) ; sty I3,(I6)
	mv I0,I3	// I0 -> 'dev'
	mv I3,I0	// 'dev' -> I0
	mv I3,I2	// 'dev' -> 'hw'
// hw
// (dev, &devByteBusDefaults, sizeof(*dev));
	ldx (I2)+7,NULL	// 'hw' += 11
	call _memcpy
	ldx (I2)+4,NULL	// ...
// jumped away
	ldc ___nextDeviceInstance,I0	// ET6
	ldx (I0),A0/*V*/ ; ldy (I4)-2,NULL	// I4 += -2
// 	dev->deviceInstance = __nextDeviceInstance++;
	sub A0,ONES,A1	// ET7 - (-1) -> ET9
	stx A1,(I0)/*V*/	// ET9 ==> ET6
	mv I3,I0	// 'dev' -> ETb
	ldx (I0)+7,NULL	// ETb += 10
	ldx (I0)+3,NULL	// ...
	stx A0,(I0)	// ET7 ==> ETb
	mv I2,I0	// 'hw' -> I0
	ldc 4,A0	// 4 -> A0
// 	memcpy(hw, name, sizeof(devByteBusHwInfo));
	call _memcpy
	ldx (I4)+2,I1	// unspill 'name' from #0
// jumped away
	mv I2,I0	// 'hw' -> ETf
	ldc 2047,A1	// 2047 -> 1 -> ET12
	ldc 15,C0	// 15 -> C0
// 	hw->regs->conf = hw->clockDivider;
	ldx (I0)+3,NULL ; ldy (I6)+1,NULL	// ETf += 3
	ldx (I0),A0	// ETf ==> 3 -> ET10
	ldx (I2),I0	// 'hw' ==> ET11
	sty A0,(I0)/*V*/	// ET10 ==> ET11
// (*(__y volatile u_int16 *)(u_int16)(0xFC30)) |= 0x07ff;
	ldc 64560,I0	// 64560 -> ET13
	ldy (I0),A0/*V*/	// ET13 ==> ET14
	or A0,A1,A0	// ET14 or ET12 -> ET15
// 	GpioSetPin(0x0f, 0);
	call _GpioSetPin
	sty A0,(I0)/*V*/ ; and NULL,NULL,C1	// ET15 ==> ET13
// jumped away
// 	GpioSetPin(0x0e, 0);
	ldc 14,C0	// 14 -> C0
	call _GpioSetPin
	ldx (I6)+1,NULL ; and NULL,NULL,C1	// 0 -> C1
// jumped away
// 	if (hw->csPin == 0xffffU)
	ldc 65535,A0	// 65535 -> 1 -> ET1b
	ldx (I2)+1,NULL	// 'hw' += 1
	ldx (I2)-1,A1	// 'hw' ==> 1 -> ET1a
	sub A1,A0,A0	// ET1a == ET1b -> AT20
	ldc 31,C0
	jzs F1B7	// unsigned compare
	nop
// jumped away
// 	}
// else {
// 		GpioSetPin(hw->csPin, 1);
	ldx (I2)+1,NULL ; ldy (I6)+1,NULL	// 'hw' += 1
	call _GpioSetPin
	ldx (I2),C0 ; sub NULL,ONES,C1	// 'hw' ==> 1 -> ET1a
// jumped away
F1B9:
// 	dev->flags =(1 << 0) |(1 << 1) |(1 << 5) |(1 << 6);
	ldc 99,A0	// 99 -> 1 -> ET1e
	stx A0,(I3) ; ldy (I6),I3	// ET1e ==> 'dev'
// 	return 0;
	ldx (I6)-1,I2 ; and NULL,NULL,A0	// 0 -> 0 -> ET1f
	ldy (I6),I1 ; ldx (I6)-1,C1
	ldy (I6),C0 ; ldx (I6)-1,A1
	ldx (I4),I6 ; ldy (I4),I4
	ldx (I6)-1,NULL	// I6 += -1
	ldx (I6)-1,LR0
	jr
	nop
// jumped away
// ;
// 	}

// {
// {GpioSetPin(0x1f,1);
	ldc 31,C0	// 31 -> C0
F1B7:
	call _GpioSetPin
	ldx (I6)+1,NULL ; sub NULL,ONES,C1	// 1 -> C1
// jumped away
// GpioSetPin(0x0b, 1);
	ldc 11,C0	// 11 -> C0
	call _GpioSetPin
	ldx (I6)+1,NULL ; sub NULL,ONES,C1	// 1 -> C1
// jumped away
// GpioSetPin(0x10, 1);
	ldc 16,C0	// 16 -> C0
	ldx (I6)+1,NULL ; sub NULL,ONES,C1	// 1 -> C1
	call _GpioSetPin
	ldc F1B9,LR0
// jumped away

//_____________________________________________________________
//
	.sect code,DevByteBusDelete	// 4 words
	.export _DevByteBusDelete
_DevByteBusDelete:
// hw
// ->flags = 0;
	and NULL,NULL,A0	// 0 -> 1 -> ET3
	stx A0,(I0)	// ET3 ==> 'dev'
// 	return 0;
	jr
	nop
// jumped away

//_____________________________________________________________
//
	.sect code,DevByteBusRead	// 73 words
	.export _DevByteBusRead
_DevByteBusRead:
	ldc 64616,I0	// 64616 -> ET14
	ldx (I6)+2,NULL	// I6 += 2
	stx I6,(I6) ; sty I4,(I6)
	ldx (I6)+2,I4
	stx A1,(I6) ; sty B0,(I6)+1
	ldc 65533,B0	// 65533 -> 1 -> ET13
	ldc 8192,A1	// 8192 -> 1 -> ET6
	stx B1,(I6) ; sty C0,(I6)+1
	ldc 512,C0	// 512 -> 1 -> ET3
	stx C1,(I6) ; sty D0,(I6)+1
	stx D1,(I6) ; sty I1,(I6)+1
	stx I2,(I6) ; sty I3,(I6)+1
	ldc 64619,I2	// 64619 -> ET1a
	stx LC,(I6) ; sty LS,(I6)+1
	stx LE,(I6) ; ldy (I4)-2,NULL
// hw
// (!buf)
	ldx (I4)-2,D1 ; sub NULL,ONES,C1	// unspill 'buf' from #-2
	mv D1,I1	// 1 -> 1 -> ETb
	j F3B16
	ldx (I4)+4,A0	// unspill AT2f from #-4
// jumped away
F3B12:	// (loop lvl 2)
	ldx (I4)+1,NULL ; ldy (I0),D0/*V*/	// I4 += 1
	stx I1,(I4) ; and D0,B0,D0	// AT31 spills to #1
// ;
// (*(__y volatile u_int16 *)(u_int16)(0xFC68)) &= ~(1<< 1);
	ldc 64617,I1	// 64617 -> ET19
	sty D0,(I0)/*V*/ ; and NULL,NULL,D1	// ET16 ==> ET14
// (*(__y volatile u_int16 *)(u_int16)(0xFC68)) |=(1<< 0);
	ldy (I0),D0/*V*/	// ET14 ==> ET17
	or D0,C1,D0	// ET17 or ETb -> ET18
	sty D0,(I0)/*V*/ ; sub D1,B1,D0	// ET18 ==> ET14
// (*(__y volatile u_int16 *)(u_int16)(0xFC69)) =(0x0100*(1UL<< 5));
	sty A1,(I1)/*V*/ ; ldx (I4)-1,I1	// ET6 ==> ET19
// #pragma msg 92 off
// (*(__y volatile u_int16 *)(u_int16)(0xFC6B));
	ldy (I2),I7/*V*/
// (*(__y volatile u_int16 *)(u_int16)(0xFC6B));
// 		}
// wbuf
// (i=0; i<j; i++)
	jcs F3B16	// unsigned compare
	ldy (I2),I7/*V*/
// jumped away
	sub ONES,D0,D0	// (-1) - AT26 -> AT26
	loop D0,F3B16-1
	nop
//loop resumes
// 			}
// {
// 				*wbuf++ =(*(__y volatile u_int16 *)(u_int16)(0xFC6B));
	ldy (I2),D0/*V*/	// ET1a ==> ET1e
	stx D0,(I1)+1	// ET1e ==> AT2d
//	(0 nop's needed)
// loop end
F3B16:	// loop exit
// 			buf = wbuf;
	sub A0,NULL,A0	// AT2f == (0) -> (0)
	ldc 64632,I3	// 64632 -> ET9
	jzs F3B6	// unsigned compare
	sub C0,A0,D1	// ET3 > AT2f -> AT28
// jumped away
// 	}

	ldc 512,B1	// 512 -> 'j'
	jcc F3B10	// unsigned compare
	ldc 7,D0
// jumped away
	mv A0,B1	// AT2f -> 'j'
F3B10:	// (loop lvl 2)
	ldx (I4)+1,NULL ; sub A0,B1,A0	// I4 += 1
	stx I0,(I4)	// AT30 spills to #1
// *(__y volatile u_int16 *)(u_int16)(0xFC7A)) = j;
	ldc 64634,I0	// 64634 -> ET5
	sty B1,(I0)-1/*V*/ ; sub B1,ONES,B1	// 'j' ==> ET5
// (*(__y volatile u_int16 *)(u_int16)(0xFC79)) =(0x0100*(1UL<< 5));
	sty A1,(I0)/*V*/ ; ldx (I4)-1,I0	// ET6 ==> ET7
// (*(__y volatile u_int16 *)(u_int16)(0xFC78)) =(1<<2) |(1<<0) |(1<<1);
	sty D0,(I3)/*V*/ ; or NULL,ONES,D0	// ET8 ==> ET9
// 		bytes -= j;
// 		j = (j+1) / 2;
	ashl B1,D0,B1	// ETc << ATe -> 'j'
// ;}
// {while((*(__y volatile u_int16 *)(u_int16)(0xFC78)) &(1<<1))
	ldc 2,D0	// 2 -> 1 -> ETd
F3B14:	// (loop lvl 3)
	ldc 64632,I3	// 64632 -> ET9
	ldy (I3),D1/*V*/	// ET9 ==> ET10
	and D1,D0,D0	// ET10 and ETd -> ET12
	ldc 2,D0
	jzc F3B14	// compare against zero
	nop
// jumped away
	j F3B12
	nop
// jumped away
F3B6:
// (*(__y volatile u_int16 *)(u_int16)(0xFC68)) &= ~(1<< 1);
	ldc 64616,I0	// 64616 -> ET14
	ldc 65533,A0	// 65533 -> 1 -> ET13
	ldy (I0),A1/*V*/ ; ldx (I6)-1,LE	// ET14 ==> ET24
	and A1,A0,A0	// ET24 and ET13 -> ET25
	sty A0,(I0)/*V*/ ; and NULL,NULL,A0	// ET25 ==> ET14
// 	return 0;
	ldy (I6),LS ; ldx (I6)-1,LC	// 0 -> 1 -> ET1d
	ldy (I6),I3 ; ldx (I6)-1,I2
	ldy (I6),I1 ; ldx (I6)-1,D1
	ldy (I6),D0 ; ldx (I6)-1,C1
	ldy (I6),C0 ; ldx (I6)-1,B1
	ldy (I6),B0 ; ldx (I6)-1,A1
	ldx (I4),I6 ; ldy (I4),I4
	jr
	ldx (I6)-2,NULL
// jumped away

//_____________________________________________________________
//
	.sect code,DevByteBusWrite	// 137 words
	.export _DevByteBusWrite
_DevByteBusWrite:
	ldx (I6)+2,NULL	// I6 += 2
	stx I6,(I6) ; sty I4,(I6)
	ldx (I6)+1,I4
	stx A1,(I6) ; sty B0,(I6)+1
	stx B1,(I6) ; sty C0,(I6)+1
	stx C1,(I6) ; sty I2,(I6)+1
	stx LC,(I6) ; sty LS,(I6)+1
	stx LE,(I6) ; ldy (I4)-2,NULL
	ldx (I4)-2,A0	// unspill 'buf' from #0
	ldx (I4)+1,A1	// unspill AT56 from #-4
	j F4B6
	ldx (I4)+3,B1	// unspill 'sourceIndex' from #-3
// jumped away
F4B33:	// (loop lvl 2)
	mv A0,I0 ; sub A0,NULL,A0	// 'buf' -> AT48
// ;
// (*(__y volatile u_int16 *)(u_int16)(0xFC6A)) = buf ? *(u_int16 *)buf : sourceIndex;
	ldx (I0),B0	// AT48 ==> AT29
	jzc F4B37	// signed compare
	ldc 64618,I0
// jumped away
	mv B1,B0	// 'sourceIndex' -> AT29
F4B37:	// (loop lvl 2)
	sty B0,(I0)/*V*/	// AT29 ==> ET15
// (*(__y volatile u_int16 *)(u_int16)(0xFC78)) =(1<<1);
	ldc 64632,I0	// 64632 -> ET1b
	ldc 2,B0	// 2 -> 1 -> ET0
	sty B0,(I0)/*V*/	// ET0 ==> ET1b
	mv A0,I0	// 'buf' -> AT54
// 			}
// wbuf
// ++;
// 				buf = wbuf;
	ldx (I0)+1,NULL	// AT54 += 1
F4B58:	// (loop lvl 2)
	mv I0,A0	// AT54 -> 'buf'
F4B6:	// (loop lvl 2)
	sub A1,NULL,A1	// AT56 == (0) -> (0)
	ldc 64632,I0	// 64632 -> ET1b
	jzs F4B50	// unsigned compare
	nop
// jumped away
// 	}
// {
// 		if (bytes > 2)
	ldc 2,B0	// 2 -> 1 -> ET0
	sub B0,A1,B0	// ET0 > AT56 -> AT36
	ldc 1,B0
	jcc F4B7	// unsigned compare
	sub B0,A1,B0	// ET17 <= AT56 -> AT39
// jumped away
// else if (bytes > 1)
	ldc 2,B0	// 2 -> 1 -> ET0
	jcs F4B28	// unsigned compare
	nop
// jumped away
// 		}
// {
// 			bytes-=2;
	sub A1,B0,A1 ; mv A0,I0	// AT56 - ET0 -> AT56
// (*(__y volatile u_int16 *)(u_int16)(0xFC6A)) = buf ? *(u_int16 *)buf>>8 : sourceIndex>>8;
	ldc -8,B0	// -8 -> 0 -> ET22
	ldx (I0),C0 ; and C1,NULL,C1	// AT46 ==> ET20
	ashl C,B0,C	// AT3c <- ET22 -> AT3d
	sub A0,NULL,A0	// 'buf' != (0) -> (0)
	ldc 64618,I0
	jzc F4B31	// signed compare
	nop	// 64618 -> ET15
// jumped away
	mv B1,C0	// 'sourceIndex' msw AT40
	ldc 0,C1
	ashl C,B0,C	// AT40 <- ET22 -> AT41
F4B31:	// (loop lvl 2)
	ldc 2,B0	// 2 -> 1 -> ET0
	sty C0,(I0)/*V*/	// ET25 ==> ET15
// (*(__y volatile u_int16 *)(u_int16)(0xFC78)) =(1<<1);
	ldc 64632,I0	// 64632 -> ET1b
	sty B0,(I0)/*V*/	// ET0 ==> ET1b
// ;}
// {while((*(__y volatile u_int16 *)(u_int16)(0xFC78)) &(1<<1))
F4B35:	// (loop lvl 3)
	ldy (I0),C0/*V*/	// ET1b ==> ET26
	and C0,B0,B0	// ET26 and ET0 -> ET28
	ldc 2,B0
	jzc F4B35	// compare against zero
	ldc 64632,I0
// jumped away
	j F4B33
	nop
// jumped away
F4B28:	// (loop lvl 2)
// 		}
// else {
// 			bytes--;
	add A1,ONES,A1 ; mv A0,I0	// AT56 + (-1) -> AT56
// (*(__y volatile u_int16 *)(u_int16)(0xFC6A)) = buf ? *(u_int16 *)buf : sourceIndex;
	ldx (I0),B0 ; sub A0,NULL,A0	// AT47 ==> ET2f
	ldc 64618,I0
	jzc F4B39	// signed compare
	nop	// 64618 -> ET15
// jumped away
	mv B1,B0	// 'sourceIndex' -> ET2f
F4B39:	// (loop lvl 2)
	sty B0,(I0)/*V*/	// ET2f ==> ET15
// (*(__y volatile u_int16 *)(u_int16)(0xFC78)) =(1<<1);
	ldc 64632,I0	// 64632 -> ET1b
	ldc 2,B0	// 2 -> 1 -> ET0
	sty B0,(I0)/*V*/	// ET0 ==> ET1b
	j F4B58
	mv A0,I0	// 'buf' -> AT54
// jumped away
F4B7:	// (loop lvl 2)
// ;
// 		}

	ldc 512,C0	// 512 -> 1 -> ET1
	sub C0,A1,C0 ; ldx (I0)+2,NULL	// ET1 > AT56 -> AT38
	ldc 512,B0	// 512 -> 'j'
	jcc F4B11	// unsigned compare
	ldc 65534,C0
// jumped away
	mv A1,B0	// AT56 -> 'j'
	ldc 64634,I0	// 64634 -> ET5
// &= ~1;
F4B11:	// (loop lvl 2)
	and B0,C0,B0	// 'j' and ET3 -> 'j'
// (*(__y volatile u_int16 *)(u_int16)(0xFC7A)) = j;
	sty B0,(I0)/*V*/	// 'j' ==> ET5
// 			bytes -= j;
	ldc 64616,I0	// 64616 -> ETa
	sub A1,B0,A1 ; ldy (I0),C1/*V*/	// AT56 - 'j' -> AT56
// 			j >>= 1;
// (*(__y volatile u_int16 *)(u_int16)(0xFC68)) &= ~(1<< 0);
	and C1,C0,C0	// ETb and ET3 -> ETc
	sty C0,(I0)/*V*/ ; lsr B0,B0	// ETc ==> ETa
// (*(__y volatile u_int16 *)(u_int16)(0xFC68)) |=(1<< 1);
	ldc 2,C0	// 2 -> 1 -> ET0
	ldy (I0),C1/*V*/	// ETa ==> ETd
	or C1,C0,C0	// ETd or ET0 -> ETe
	sty C0,(I0)+1/*V*/ ; sub A0,NULL,A0	// ETe ==> ETa
// (*(__y volatile u_int16 *)(u_int16)(0xFC69)) =(0x0100*(1UL<< 5));
	ldc 8192,C0	// 8192 -> 1 -> ETf
// 			if (buf)
	jzs F4B13	// signed compare
	sty C0,(I0)/*V*/	// ETf ==> ET10
// jumped away
// 			}
// wbuf
// (i=0; i<j; i++)
	and NULL,NULL,C0 ; mv A0,I0	// 0 -> 'i'
	sub C0,B0,A0	// AT4c <= 'j' -> AT34
	ldc 64618,I2	// 64618 -> ET15
	jcs F4B16	// unsigned compare
	sub ONES,A0,A0	// (-1) - AT34 -> AT34
// jumped away
	loop A0,L1-1
	ldx (I0)+1,A0	// AT54 ==> ET14
//loop resumes
// 				}
// {
// (*(__y volatile u_int16 *)(u_int16)(0xFC6A)) = *wbuf++;
	sty A0,(I2)/*V*/ ; ldx (I0)+1,A0	// ET14 ==> ET15
//	(0 nop's needed)
// loop end
L1:
	ldx (I0)-1,NULL
F4B16:	// loop exit
// 				buf = wbuf;
// (*(__y volatile u_int16 *)(u_int16)(0xFC79)) =(0x0100*(1UL<< 5));
	ldc 64633,I2	// 64633 -> ET19
	ldc 8192,A0	// 8192 -> 1 -> ETf
	sty A0,(I2)-1/*V*/	// ETf ==> ET19
// (*(__y volatile u_int16 *)(u_int16)(0xFC78)) =(1<<0) |(1<<1);
	ldc 3,A0	// 3 -> 1 -> ET1a
	sty A0,(I2)/*V*/ ; add A0,ONES,A0	// ET1a ==> ET1b
// ;}
// {while((*(__y volatile u_int16 *)(u_int16)(0xFC78)) &(1<<1))
F4B26:	// (loop lvl 3)
	ldc 64632,I2	// 64632 -> ET1b
	ldy (I2),B0/*V*/	// ET1b ==> ET1c
	and B0,A0,A0	// ET1c and ET0 -> ET1e
	ldc 2,A0
	jzc F4B26	// compare against zero
	nop
// jumped away
	j F4B58
	nop
// jumped away
F4B13:	// (loop lvl 2)
// 			}
// else {
// 				for (i=0; i<j; i++)
	ldc 0,C1	// 0 -> 'i'
	sub C1,B0,C0	// AT4d <= 'j' -> AT35
	nop
	jcs F4B20	// unsigned compare
	nop
// jumped away
	sub ONES,C0,C0	// (-1) - AT35 -> AT35
	loop C0,F4B20-1
	ldc 64618,I0	// 64618 -> ET15
//loop resumes
// 				}
// {
// (*(__y volatile u_int16 *)(u_int16)(0xFC6A)) = sourceIndex;
	sty B1,(I0)/*V*/	// 'sourceIndex' ==> ET15
//	(0 nop's needed)
// loop end
F4B20:	// loop exit
	j F4B16
	mv A0,I0	// 'buf' -> AT54
// jumped away
F4B50:
	ldc 2,A0	// 2 -> 1 -> ET0
F4B43:	// (loop lvl 2)
	ldy (I0),A1/*V*/	// ET1b ==> ET31
	and A1,A0,A1	// ET31 and ET0 -> ET33
	nop
	jzc F4B43	// compare against zero
	nop
// jumped away
// ;
// 	return 0;
	and NULL,NULL,A0 ; ldx (I6)-1,LE	// 0 -> 1 -> ET11
	ldy (I6),LS ; ldx (I6)-1,LC
	ldy (I6),I2 ; ldx (I6)-1,C1
	ldy (I6),C0 ; ldx (I6)-1,B1
	ldy (I6),B0 ; ldx (I6)-1,A1
	ldx (I4),I6 ; ldy (I4),I4
	jr
	ldx (I6)-2,NULL
// jumped away

//_____________________________________________________________
//
	.sect code,DevByteBusIoctl	// 147 words
	.export _DevByteBusIoctl
_DevByteBusIoctl:
	ldc 512,A0	// 512 -> 1 -> ET4
	ldx (I6)+1,NULL	// I6 += 1
	stx LR0,(I6)+1
	stx I6,(I6) ; sty I4,(I6)
	ldx (I6)+1,I4
	stx A1,(I6) ; sty B0,(I6)+1
	stx B1,(I6) ; sty C0,(I6)+1
	stx C1,(I6) ; sty D0,(I6)+1
	stx D1,(I6) ; sty I1,(I6)+1
	stx I2,(I6) ; ldy (I4)-2,NULL
	mv I0,I2	// I0 -> 'dev'
// hw
// (((dev)->flags &(1 << 9)))
	ldx (I0),A1	// 'dev' ==> ET3
	and A1,A0,A0 ; mv I2,I0	// ET3 and ET4 -> ET5
	ldx (I0)+7,NULL ; sub A0,NULL,A0	// 'hw' += 11
	ldc 2,A0	// 2 -> 1 -> ET9
	jzc F5B46	// unsigned compare
	ldx (I4)+2,A1 ; ldy (I0)+4,NULL	// unspill 'request' from #-2
// jumped away
F5B4:
// 	switch (request)
	ldc 3,A0	// 3 -> 0 -> ETf
	add A1,ONES,A1	// 'request' + (-1) -> ETe
	sub A0,A1,A0	// ETf <= ETe -> AT36
	ldc JumpTable_2,A0
	jcs F5B15	// unsigned compare
	nop
// jumped away
// 			return -1;
	or NULL,ONES,A0	// -1 -> 0 -> ET33
F5B1:
	ldx (I6)-1,I2
	ldy (I6),I1 ; ldx (I6)-1,D1
	ldy (I6),D0 ; ldx (I6)-1,C1
	ldy (I6),C0 ; ldx (I6)-1,B1
	ldy (I6),B0 ; ldx (I6)-1,A1
	ldx (I4),I6 ; ldy (I4),I4
	ldx (I6)-1,NULL	// I6 += -1
	ldx (I6)-1,LR0
	jr
	nop
// jumped away
	ldc JumpTable_2,A0	// ET10
F5B15:
	add A1,A0,A0	// ETe + ET10 -> AT40
	mv A0,I2	// AT40 -> ET11
	ldx (I2),A0	// ET11 ==> ET12
	mv A0,LR0
	jr
	nop
// jumped away
F5B10:
// 			if (hw->csPin == 0xffffU)
	ldc 65535,A0	// 65535 -> 1 -> ET16
	ldx (I0)+1,NULL ; sub NULL,ONES,A1	// 1 -> 1 -> ET13
	ldx (I0)-1,B0	// 'hw' ==> 1 -> ET15
	sub B0,A0,A0	// ET15 == ET16 -> AT39
	ldc 16384,D1	// 16384 -> D1
	jzs F5B16	// unsigned compare
	ldc 16,D0	// 16 -> D0
// jumped away
// 			}
// else {
// 				ObtainHwLocksBIP((1UL<< 5),(1UL<< 0),(1UL<< 4)|(1UL<< 30));
	and NULL,NULL,B1 ; ldx (I6)+1,NULL	// 0 -> B1
	sub NULL,ONES,C0	// 1 -> C0
	add D0,D0,B0
	call _ObtainHwLocksBIP
	and NULL,NULL,C1	// 0 -> C1
// jumped away
// 				GpioSetPin(hw->csPin, 0);
	ldx (I0)+1,NULL ; ldy (I6)+1,NULL	// 'hw' += 1
	call _GpioSetPin
	ldx (I0),C0 ; and NULL,NULL,C1	// 'hw' ==> 1 -> ET15
// jumped away
F5B9:
// 	return 0;
	j F5B1
	and NULL,NULL,A0	// 0 -> 0 -> ET34
// jumped away
F5B16:
// ;
// 			}
// {
// 				ObtainHwLocksBIP((1UL<< 5),(1UL<< 0)|((1UL<< 1)|(1UL<< 12)|(1UL<< 5)),(1UL<< 4)|(1UL<< 30));
	ldc 0,B1	// 0 -> B1
	ldc 4131,C0	// 4131 -> C0
	add D0,D0,B0 ; ldx (I6)+1,NULL
	call _ObtainHwLocksBIP
	and NULL,NULL,C1	// 0 -> C1
// jumped away


// {{(*(__y volatile u_int16 *)(u_int16)(0xFCC6))=(1 << 15) | (1 << 0);
	ldc 64710,I2	// 64710 -> ET1c
	ldc 32769,A0	// 32769 -> 1 -> ET1b
	sty A0,(I2)/*V*/ ; ldx (I0)+2,NULL	// ET1b ==> ET1c
// (*(__y volatile u_int16 *)(u_int16)(0xFCA6))=(1 << 11);
	ldc 64678,I2	// 64678 -> ET1e
	ldc 2048,A0	// 2048 -> 1 -> ET1d
	sty A0,(I2)/*V*/ ; ldx (I0),A0	// ET1d ==> ET1e
// ; if (!(hw->ioChannel &1))
	and A0,A1,A0	// ET20 and ET13 -> ET21
	sub A0,NULL,A0	// ET21 != (0) -> (0)
	ldc 2,A1
	jzc F5B21	// unsigned compare
	ldc 32768,A0	// 32768 -> 1 -> ET22
// jumped away

// {(*(__y volatile u_int16 *)(u_int16)(0xFCC7)) = (1 << 15);
	ldc 64711,I2	// 64711 -> ET23
	sty A0,(I2)/*V*/	// ET22 ==> ET23
// if (!(hw->ioChannel &2))
F5B21:
	ldx (I0),A0	// 'hw' ==> 2 -> ET20
	and A0,A1,A0	// ET20 and ET9 -> ET24
	sub A0,NULL,A0	// ET24 != (0) -> (0)
	ldc 4,A1
	jzc F5B23	// unsigned compare
	ldc 2048,A0	// 2048 -> 1 -> ET1d
// jumped away

// {(*(__y volatile u_int16 *)(u_int16)(0xFCA7)) = (1 << 11);
	ldc 64679,I2	// 64679 -> ET25
	sty A0,(I2)/*V*/	// ET1d ==> ET25
// if (!(hw->ioChannel &4))
F5B23:
	ldx (I0),A0	// 'hw' ==> 2 -> ET20
	and A0,A1,A0	// ET20 and ET26 -> ET27
	nop
	jzc F5B9	// compare against zero
	nop
// jumped away

// {(*(__y volatile u_int16 *)(u_int16)(0xFCC7)) = (1 << 0);
	ldc 64711,I0	// 64711 -> ET23
	sub NULL,ONES,A0	// 1 -> 1 -> ET13
	j F5B9
	sty A0,(I0)/*V*/	// ET13 ==> ET23
// jumped away
F5B11:
// 			if (hw->csPin == 0xffffU)
	ldc 65535,A0	// 65535 -> 1 -> ET16
	ldx (I0)+1,NULL	// 'hw' += 1
	ldx (I0)-1,A1	// 'hw' ==> 1 -> ET15
	sub A1,A0,A1	// ET15 == ET16 -> AT3a
	ldc 16384,D1	// 16384 -> D1
	jzs F5B28	// unsigned compare
	ldc 16,D0	// 16 -> D0
// jumped away
// 			}
// else {
// 				ReleaseHwLocksBIP((1UL<< 5),(1UL<< 0),(1UL<< 4)|(1UL<< 30));
	and NULL,NULL,B1 ; ldx (I6)+1,NULL	// 0 -> B1
	sub NULL,ONES,C0	// 1 -> C0
	add D0,D0,B0
	call _ReleaseHwLocksBIP
	and NULL,NULL,C1	// 0 -> C1
// jumped away
// 				GpioSetPin(hw->csPin, 1);
	ldx (I0)+1,NULL ; ldy (I6)+1,NULL	// 'hw' += 1
	call _GpioSetPin
	ldx (I0),C0 ; sub NULL,ONES,C1	// 'hw' ==> 1 -> ET15
// jumped away
F5B12:
// 			break;
	j F5B9
	nop
// jumped away
F5B28:
// 			}

// {
// {(*(__y volatile u_int16 *)(u_int16)(0xFCC6))=(1 << 15) | (1 << 0);
	ldc 64710,I0	// 64710 -> ET1c
	ldc 32769,A0	// 32769 -> 1 -> ET1b
	ldc 4131,C0	// 4131 -> C0
	sty A0,(I0)/*V*/ ; add D0,D0,B0
// (*(__y volatile u_int16 *)(u_int16)(0xFCA6))=(1 << 11);
	ldc 64678,I0	// 64678 -> ET1e
	ldc 2048,A0	// 2048 -> 1 -> ET1d
	sty A0,(I0)/*V*/ ; and NULL,NULL,B1	// ET1d ==> ET1e
// ;
// 				ReleaseHwLocksBIP((1UL<< 5),(1UL<< 0)|((1UL<< 1)|(1UL<< 12)|(1UL<< 5)),(1UL<< 4)|(1UL<< 30));
	ldx (I6)+1,NULL ; and NULL,NULL,C1	// 0 -> C1
	call _ReleaseHwLocksBIP
	ldc F5B9,LR0
// jumped away
F5B13:
// 			GpioSetPin(0x16, 1);
	ldc 22,C0	// 22 -> C0
	call _GpioSetPin
	ldx (I6)+1,NULL ; sub NULL,ONES,C1	// 1 -> C1
// jumped away
F5B38:
	ldc 64632,I0	// 64632 -> ET6
	ldc 2,A0	// 2 -> 1 -> ET9
F5B42:
	ldy (I0),A1/*V*/	// ET6 ==> ET2e
	and A1,A0,A0	// ET2e and ET9 -> ET30
	ldc 2,A0
	jzc F5B42	// compare against zero
	ldc 64632,I0
// jumped away
// 				  ;
// (*(__y volatile u_int16 *)(u_int16)(0xFC6A)) = 0x55aa;
	ldc 64618,I0	// 64618 -> ET32
	ldc 21930,A0	// 21930 -> 1 -> ET31
	sty A0,(I0)/*V*/	// ET31 ==> ET32
// (*(__y volatile u_int16 *)(u_int16)(0xFC78)) =(1<<1);
	ldc 64632,I0	// 64632 -> ET6
	ldc 2,A0	// 2 -> 1 -> ET9
	j F5B38
	sty A0,(I0)/*V*/	// ET9 ==> ET6
// jumped away
F5B46:
	ldc 64632,I1	// 64632 -> ET6
F5B8:	// (loop lvl 2)
	ldy (I1),B0/*V*/	// ET6 ==> ET7
	and B0,A0,B0	// ET7 and ET9 -> ETa
	ldc 65023,B0	// 65023 -> 1 -> ETb
	jzc F5B8	// compare against zero
	nop
// jumped away
// ;
// 		dev->flags &= ~((1 << 9));
	ldx (I2),A0	// 'dev' ==> ET3
	and A0,B0,A0	// ET3 and ETb -> ETc
	j F5B4
	stx A0,(I2)	// ETc ==> 'dev'
// jumped away

//_____________________________________________________________
//
	.sect data_x,const_x	// 50 words
	.export _devByteBusDefaults
_devByteBusDefaults:
	.word 0, _DevByteBusIdentify, _DevByteBusCreate, _DevByteBusDelete, _DevByteBusIoctl, _DevByteBusRead, _DevByteBusWrite, 0
	.word 0
	.zero 1
	.zero 1
	.zero 1
	.zero 1
	.zero 1
	.zero 1
	.zero 1
	.zero 1
	.zero 1
	.zero 1
	.zero 1
	.zero 1
	.zero 1
	.zero 1
	.zero 1
	.zero 1
	.zero 1
	.zero 1
	.zero 1
	.zero 1
	.zero 1
	.zero 1
	.zero 1
	.zero 1
bytewideb_1:
	.word "Bytewide Bus"

	.zero 1
JumpTable_2:
	.word F5B10, F5B11, F5B12, F5B13

	.end
