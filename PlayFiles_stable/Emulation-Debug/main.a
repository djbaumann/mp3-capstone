
//_____________________________________________________________
//
	.sect code,main	// 520 words
	.export _main
_main:
	ldc 256,A0	// 256 -> 1 -> ET1
	ldx (I6)+1,NULL	// I6 += 1
	stx LR0,(I6)+1
	stx I6,(I6) ; sty I4,(I6)
	ldx (I6)+2,I4
	stx A1,(I6) ; sty B0,(I6)+1
	stx B1,(I6) ; sty C0,(I6)+1
	stx C1,(I6) ; sty D0,(I6)+1
	stx D1,(I6) ; sty I0,(I6)+1
	ldc 65227,I0	// 65227 -> ET2
	stx I1,(I6) ; sty I2,(I6)+1
	stx I3,(I6)+1 ; ldy (I0),A1/*V*/
// counter
// *(__y volatile u_int16 *)(u_int16)(0xfecb)) |=(1<<8);
	or A1,A0,A0	// ET3 or ET1 -> ET4
	sty A0,(I0)/*V*/	// ET4 ==> ET2
//     ioctl(stdaudioout,228, (void *)(volume+256));
	ldc 256,A0	// 256 -> 0 -> ET5
	ldc _volume,I0	// ET6
	ldx (I0),A1/*V*/	// ET6 ==> 'volume'
	ldc _stdaudioout,I0	// ETa
	add A1,A0,A0 ; ldx (I0),I2/*V*/	// 'volume' + ET5 -> ET7
	mv A0,I0 ; and NULL,NULL,A1	// ET7 -> ET8
	mv I0,I1	// ET8 -> I1
	call _ioctl
	ldc 228,C0	// 228 -> C0
// jumped away
	ldx (I6)+1,NULL ; and NULL,NULL,A0	// I6 += 1
// 	LcdInit(0);
	call _LcdInit
	stx A0,(I6)	// ET0
// jumped away
	ldc _vo_pdevices+5,I0	// ETf
	ldx (I0),D0 ; ldy (I6)-1,NULL	// I6 += -1
// 	if (!(vo_pdevices[5] && vo_pdevices[5]->fs == vo_filesystems[0]))
	sub D0,NULL,D0	// ET10 == (0) -> (0)
	nop
	callzs _loadNoDriveMenu
	ldc F0B5,LR0
// jumped away
	ldc 9,A0	// 9 -> 1 -> ET11
	add D0,A0,A0	// ET10 + ET11 -> ATc7
	mv A0,I0	// ATc7 -> ET12
	ldx (I0),B0	// ET12 ==> ET13
	ldc _vo_filesystems,I0	// ET14
	ldx (I0),A0	// ET14 ==> ET15
	sub B0,A0,D0	// ET13 == ET15 -> AT9a
	nop
	callzs _loadScanningMenu
	ldc F0B6,LR0
// jumped away
// 	}
// 	{
// 		loadNoDriveMenu();
	call _loadNoDriveMenu
	nop
// jumped away
F0B5:
// 		return -1;
	or NULL,ONES,A0	// -1 -> 0 -> ET16
F0B1:
	ldx (I6)-1,I3
	ldy (I6),I2 ; ldx (I6)-1,I1
	ldy (I6),I0 ; ldx (I6)-1,D1
	ldy (I6),D0 ; ldx (I6)-1,C1
	ldy (I6),C0 ; ldx (I6)-1,B1
	ldy (I6),B0 ; ldx (I6)-1,A1
	ldx (I4),I6 ; ldy (I4),I4
	ldx (I6)-1,NULL	// I6 += -1
	ldx (I6)-1,LR0
	jr
	nop
// jumped away
//     loadScanningMenu();
	call _loadScanningMenu
	nop
// jumped away
F0B6:
	ldc loadedsca_1,A0	// ET17
	ldx (I6)+1,NULL	// I6 += 1
//  vo_printf("loaded scan \n");
	call _vo_printf
	stx A0,(I6)	// ET17
// jumped away
	ldc 134,A0	// 134 -> 1 -> ET19
//     metadata = malloc((sizeof(unsigned char)*132)+(sizeof(struct file_descriptor *)) + (sizeof(struct file_descriptor *)%4));
	call _malloc
	stx A0,(I6)	// I6 += 1
// jumped away
	ldc _metadata,I1	// ET1b
	stx A0,(I1)/*V*/	// I6 += 1
//  vo_printf("alloc \n");
	ldc alloc_2,A0	// ET1c
	call _vo_printf
	stx A0,(I6)	// ET1c
// jumped away
	ldx (I1),A0/*V*/	// I6 += -1
//     if (!metadata)
	sub A0,NULL,A0	// 'metadata' != (0) -> (0)
	ldc errorchec_4,A0	// ET20
	jzc F0B14	// signed compare
	nop	// I6 += 1
// jumped away
	ldc metadatas_3,A0	// ET1e
//     }
//     {
//  vo_printf("Metadata space not allocated! \n");
	call _vo_printf
	stx A0,(I6)	// ET1e
// jumped away
//         loadCriticalErrorMenu();
	call _loadCriticalErrorMenu
	ldx (I6)-1,NULL	// I6 += -1
// jumped away
//         return -1;
	j F0B1
	or NULL,ONES,A0	// -1 -> 0 -> ET16
// jumped away
F0B14:
//  vo_printf("error check \n");
	call _vo_printf
	stx A0,(I6)	// ET20
// jumped away
	ldc w_5,A0	// ET22
	stx A0,(I6)+1	// I6 += 1
//    openedFile = vo_fopen("S:lookup/songs.txt", "w");
	ldc slookups_6,A0	// ET23
	call _vo_fopen
	stx A0,(I6)	// ET23
// jumped away
	ldc _openedFile,I0	// ET25
	stx A0,(I0)/*V*/ ; ldy (I6)-1,NULL	// I6 += -2
	sub A0,NULL,A0	// ET24 != (0) -> (0)
//    if (!openedFile)
	ldc file_8,A0	// ET28
	jzc F0B20	// signed compare
	nop	// I6 += 1
// jumped away
	ldc masterson_7,A0	// ET26
// 	}
//    {
//  vo_printf("Master Song list not created! \n");
	call _vo_printf
	stx A0,(I6)	// ET26
// jumped away
//         loadCriticalErrorMenu();
	call _loadCriticalErrorMenu
	ldx (I6)-1,NULL	// I6 += -1
// jumped away
//         return -1;
	j F0B1
	or NULL,ONES,A0	// -1 -> 0 -> ET16
// jumped away
F0B20:
//  vo_printf("file \n");
	call _vo_printf
	stx A0,(I6)	// ET28
// jumped away
	ldc f_9,A0	// ET2a
	stx A0,(I6)+1	// I6 += 1
//     sprintf(directory, "F:");
	ldc _directory,A0	// ET2b
	call _sprintf
	stx A0,(I6)	// ET2b
// jumped away
	ldc f_9,A0	// ET2a
	ldc _currentDirectory,I0	// ET2d
	ldx (I6)-1,NULL	// I6 += 1
//     sprintf(currentDirectory, "F:");
	stx A0,(I6)+1	// ET2a
	ldx (I0),A0/*V*/	// ET2d ==> 'currentDirectory'
	call _sprintf
	stx A0,(I6)	// 'currentDirectory'
// jumped away
	ldc beforesca_10,A0	// ET2f
	ldx (I6)-1,NULL	// I6 += 1
//  vo_printf("before scan \n");
	call _vo_printf
	stx A0,(I6)	// ET2f
// jumped away
	sub NULL,ONES,A0	// I6 += 1
//     scanDirectoryForMP3(1);
	stx A0,(I6)	// ET31
	call _scanDirectoryForMP3
// while (strcmp(nextDir, "no"));
	ldc F0B28,LR0
// jumped away
F0B32:	// (loop lvl 2)
	ldc fs_12,A0	// ET36
	ldx (I6)+1,NULL	// I6 += 1
//         }
//         {
//             sprintf(directory, "F:%s", nextDir);
	stx I3,(I6)+1	// 'nextDir'
	stx A0,(I6)+1	// ET36
	ldc _directory,A0	// ET2b
	call _sprintf
	stx A0,(I6)	// ET2b
// jumped away
	ldx (I6)-2,NULL ; and NULL,NULL,A0	// I6 += 1
//             scanDirectoryForMP3(0);
	call _scanDirectoryForMP3
	stx A0,(I6)	// ET0
// jumped away
	ldx (I6)-1,NULL ; sub A1,ONES,A1	// I6 += -1
//             counter++;
F0B33:	// (loop lvl 2)
	mv I3,I0	// 'nextDir' -> I0
	call _strcmp
	ldc no_11,I1	// I1
// jumped away
	sub A0,NULL,A0 ; ldx (I6)+1,NULL	// ET3b == (0) -> (0)
	ldc endofsca_13,A0	// ET3c
	jzs F0B29	// signed compare
	nop	// I6 += 1
// jumped away
F0B28:	// (loop lvl 2)
	ldc f_9,A0	// ET2a
	stx A1,(I6)+1
//     }
//     do
//     {
//         nextDir = scanDirectoryForDirectory("F:", counter);
	call _scanDirectoryForDirectory
	stx A0,(I6)	// ET2a
// jumped away
	mv A0,I3	// A0 -> 'nextDir'
	mv I3,I0	// 'nextDir' -> I0
	ldc no_11,I1	// I1
//         if (strcmp(nextDir, "no"))
	call _strcmp
	ldx (I6)-2,NULL	// I6 += -2
// jumped away
	sub A0,NULL,A0	// ET35 != (0) -> (0)
	nop
	jzc F0B32	// signed compare
	nop
// jumped away
	j F0B33
	nop
// jumped away
F0B29:
//  vo_printf("end of scan \n");
	call _vo_printf
	stx A0,(I6)	// ET3c
// jumped away
	ldc _openedFile,I0	// ET25
//  vo_fclose(openedFile);
	call _vo_fclose
	ldy (I6)-1,NULL ; ldx (I0),I0/*V*/	// I6 += -1
// jumped away
//    voltageTask = CreateTaskAndStack(cyclicVoltage, "cyclicVoltage", 128, 5);
	ldc 5,C1	// 5 -> C1
	ldc 128,C0	// 128 -> C0
	ldc cyclicvolt_14,I1	// I1
	call _CreateTaskAndStack
	ldc _cyclicVoltage,I2	// I2
// jumped away
	ldc 5,C1	// 5 -> C1
	ldc 128,C0	// 128 -> C0
	ldc idlecheck_15,I1	// I1
	ldc _idleCheck,I2	// I2
	ldc _voltageTask,I0	// ET43
//    powerSavingTask = CreateTaskAndStack(idleCheck, "idleCheck", 128, 5);
	call _CreateTaskAndStack
	stx A0,(I0)/*V*/	// ET42 ==> ET43
// jumped away
	ldc _powerSavingTask,I0	// ET47
	ldy (I6)+1,NULL ; stx A0,(I0)/*V*/	// I6 += 1
//     decoderLibrary = LoadLibrary("audiodec");
	ldc audiodec_16,A0	// ET48
	call _LoadLibrary
	stx A0,(I6)	// ET48
// jumped away
	ldc _decoderLibrary,I0	// ET4a
	stx A0,(I0)/*V*/ ; ldy (I6)-1,NULL	// I6 += -1
	sub A0,NULL,A0	// ET49 != (0) -> (0)
//     if (!decoderLibrary)
	nop
	jzc F0B44	// signed compare
	nop
// jumped away
//     }
//     {
//         loadCriticalErrorMenu();
	call _loadCriticalErrorMenu
	nop
// jumped away
//         return -1;
	j F0B1
	or NULL,ONES,A0	// -1 -> 0 -> ET16
// jumped away
F0B44:
//     fileNum = 0;
	ldc _fileNum,I0	// ET4b
	and NULL,NULL,A0	// 0 -> 1 -> ET0
//     loadMainMenu();
	call _loadMainMenu
	stx A0,(I0)/*V*/	// ET0 ==> ET4b
// jumped away
//     monitorVoltage();
	call _monitorVoltage
	nop
// jumped away
	ldc _fnumMode67fb28,D0	// ET56
	ldc _newSongSelected,I1	// ET64
	ldc _audioDecoder,I2	// ET66
	ldc _metadata,I0	// ET1b
	ldc _fileNum,I3	// ET4b
	ldx (I4)+1,NULL ; sub NULL,ONES,C1	// I4 += 1
	stx I0,(I4)-1 ; and NULL,NULL,D1	// I0 spills to #0
F0B51:	// (loop lvl 2)
//     }
//     {
//         powerSavingDelay();
	call _powerSavingDelay
	nop
// jumped away
//         navigateMenus();
	call _navigateMenus
	nop
// jumped away
//             checkUART();
	call _checkUART
	nop
// jumped away
//         if (running)
	ldc _running,I0	// ET4f
	ldx (I0),A0/*V*/	// ET4f ==> 'running'
	sub A0,NULL,A0	// 'running' == (0) -> (0)
	nop
	jzs F0B51	// unsigned compare
	nop
// jumped away
	ldc _index,I0	// ET50
	ldx (I0),A0/*V*/ ; ldy (I6)+1,NULL	// I6 += 1
//         }
//         {
//             fileNum = index;
	ldc _path,I0	// ET51
	stx A0,(I3)/*V*/	// 'index' ==> ET4b
//             sprintf(filespec, "%s*.mp3", path);
	ldx (I0),A0/*V*/	// ET51 ==> 'path'
	ldc _filespec,I0	// ET53
	stx A0,(I6)+1	// 'path'
	ldc smp3_17,A0	// ET52
	stx A0,(I6)+1	// ET52
	ldx (I0),A0/*V*/	// ET53 ==> 'filespec'
	call _sprintf
	stx A0,(I6)	// 'filespec'
// jumped away
	ldy (I6)-2,NULL ; ldx (I3),A0/*V*/	// I6 += 1
//             sprintf(fnumMode, "rb#%d", fileNum);
	stx A0,(I6)+1	// 'fileNum'
	ldc rbd_18,A0	// ET55
	stx A0,(I6)+1	// ET55
	call _sprintf
	stx D0,(I6)	// ET56
// jumped away
	ldc _appFlags,I0	// ET58
	ldx (I0),A0/*V*/ ; ldy (I6)-3,NULL	// I6 += -3
//             if (appFlags &(1<<0))
	and A0,C1,A0	// 'appFlags' and ET31 -> ET59
	nop
	jzs F0B67	// compare against zero
	nop
// jumped away
//             }
//             {
//                 loadCriticalErrorMenu();
	call _loadCriticalErrorMenu
	nop
// jumped away
	ldc _decoderLibrary,I0	// ET4a
	ldy (I6)+1,NULL ; ldx (I0),A0/*V*/	// I6 += 1
//                 DropLibrary(decoderLibrary);
	call _DropLibrary
	stx A0,(I6)	// 'decoderLibrary'
// jumped away
	ldc _metadata,I0	// ET1b
	ldx (I0),A0/*V*/	// I6 += 1
//                 free(metadata);
	call _free
	stx A0,(I6)	// 'metadata'
// jumped away
	ldc _decoderLibrary,I0	// ET4a
	ldx (I0),A0/*V*/	// I6 += -1
//                 break;
//     DropLibrary(decoderLibrary);
	call _DropLibrary
	stx A0,(I6)	// 'decoderLibrary'
// jumped away
	ldc _metadata,I0	// ET1b
	ldx (I0),A0/*V*/	// I6 += 1
//     free(metadata);
	call _free
	stx A0,(I6)	// 'metadata'
// jumped away
//     return -1;
	j F0B1
	ldx (I6)-1,NULL ; or NULL,ONES,A0	// I6 += -1
// jumped away
F0B72:	// (loop lvl 3)
	ldx (I4)+1,NULL	// I4 += 1
// ( ((int (*)(register AUDIO_DECODER *))(*((u_int16 *)(decoderLibrary)+2+(3))))(audioDecoder) );
	ldy (I4)-1,I0	// unspill ET66 from #0
	ldx (I0),I2/*V*/	// ET66 ==> 'audioDecoder'
	ldc _decoderLibrary,I0	// ET4a
	ldx (I0),I0/*V*/	// ET4a ==> ET88
	ldx (I0)+5,NULL	// ET88 += 5
	ldx (I0),A0	// ET88 ==> 5 -> ET89
	mv A0,LR0
	jr
	ldc lo(F0B139),LR0	// (return address)
// jumped away
F0B139:	// (loop lvl 3)
//  vo_fclose(fp);
	ldc _fp,I0	// ET5c
	call _vo_fclose
	ldx (I0),I0/*V*/	// ET5c ==> 'fp'
// jumped away
//                 if (newSongSelected)
	ldx (I1),A0/*V*/ ; ldy (I6)+1,NULL	// ET64 ==> 'newSongSelected'
	sub A0,NULL,A0	// 'newSongSelected' != (0) -> (0)
	ldc _offset,I0	// ET8e
	jzc F0B141	// unsigned compare
	and NULL,NULL,A0	// I6 += 1
// jumped away
	ldc _shuffle,I0	// ET91
	ldx (I0),A0/*V*/ ; ldy (I6)-1,NULL
//                 else if (shuffle)
	sub A0,NULL,A0	// 'shuffle' != (0) -> (0)
	ldc _repeatSongStatus,I0	// ET96
	jzc F0B149	// unsigned compare
	nop
// jumped away
//                 else if (!repeatSongStatus)
	ldx (I0),A0/*V*/	// ET96 ==> 'repeatSongStatus'
	sub A0,NULL,A0	// 'repeatSongStatus' != (0) -> (0)
	nop
	jzc F0B176	// unsigned compare
	nop
// jumped away
//                 }
//                 {
//                     fileNum++;
	ldx (I3),A0/*V*/	// ET4b ==> 'fileNum'
	sub A0,ONES,A0	// 'fileNum' - (-1) -> ET82
	stx A0,(I3)/*V*/	// ET82 ==> ET4b
F0B176:	// (loop lvl 3)
	ldx (I4)+1,NULL	// I4 += 1
	ldy (I4)-1,I2	// unspill ET66 from #0
F0B67:	// (loop lvl 3)
	ldc _running,I0	// ET4f
	ldx (I0),A0/*V*/	// ET4f ==> 'running'
	sub A0,NULL,A0	// 'running' == (0) -> (0)
	nop
	jzs F0B51	// unsigned compare
	nop
// jumped away
	ldy (I6)+1,NULL ; ldx (I3),A0/*V*/	// I6 += 1
//             }
//             {
//                 sprintf(fnumMode,"rb#%d",fileNum);
	stx A0,(I6)+1	// 'fileNum'
	ldc rbd_18,A0	// ET55
	stx A0,(I6)+1	// ET55
	call _sprintf
	stx D0,(I6)	// ET56
// jumped away
	ldc _filespec,I0	// ET53
	ldx (I6)-2,NULL	// I6 += 1
//                 fp = vo_fopen(filespec,fnumMode);
	stx D0,(I6)+1	// ET56
	ldx (I0),A0/*V*/	// ET53 ==> 'filespec'
	call _vo_fopen
	stx A0,(I6)	// 'filespec'
// jumped away
	ldc _fp,I0	// ET5c
	stx A0,(I0)/*V*/ ; ldy (I6)-2,NULL	// I6 += -2
	sub A0,NULL,A0	// ET5b == (0) -> (0)
//                 if (fp)
	nop
	jzs F0B71	// signed compare
	nop
// jumped away
	ldc _metadata,I0	// ET1b
	ldx (I0),I0/*V*/ ; ldy (I4)+1,NULL	// I4 += 1
//                 }
//                 {
//                     metadata->fp = fp;
	stx A0,(I0)/*V*/ ; ldy (I6)+1,NULL	// ET5b ==> 'metadata'
//                     RunLibraryFunction("MYMETA",2,(int) &metadata);
	ldx (I4)-1,A0	// unspill ET5d from #0
	stx A0,(I6)+1	// ET5d
	ldc 2,A0	// 2 -> ET5e
	stx A0,(I6)+1	// ET5e
	ldc mymeta_19,A0	// ET5f
	call _RunLibraryFunction
	stx A0,(I6)	// ET5f
// jumped away
	ldc _fp,I0	// ET5c
	ldy (I6)-2,NULL ; ldx (I0),A0/*V*/	// I6 += 1
//                     PlayFile(fp);
	call _PlayFile
	stx A0,(I6)	// 'fp'
// jumped away
	ldy (I4)+1,NULL ; ldx (I6)-1,NULL	// I6 += -1
//                     while (decoderTaskRunning())
	j F0B78
	sty I2,(I4)-1	// ET66 spills to #0
// jumped away
F0B75:	// (loop lvl 4)
//                     }
//                     {
//                         powerSavingDelay();
//                         if      (checkFlags())
	call _checkFlags
	nop
// jumped away
	sub A0,NULL,A0 ; ldx (I4)+1,NULL	// ET63 != (0) -> (0)
	mv I1,I2	// ET64 -> ET64
	jzc F0B181	// unsigned compare
	nop	// I4 += 1
// jumped away
	ldc _newSongSelected,I2	// ET64
	ldx (I2),A0/*V*/ ; ldy (I4)-1,NULL
//                         else if (newSongSelected)
	sub A0,NULL,A0	// 'newSongSelected' == (0) -> (0)
	nop
	callzs _checkUART
	ldc F0B86,LR0
// jumped away

// {audioDecoder->cs.cancel = 1;
	ldc _audioDecoder,I0	// ET66
	ldx (I0),I1/*V*/ ; sub NULL,ONES,A0	// ET66 ==> 'audioDecoder'
	ldx (I1)+7,NULL	// ET67 += 13
	ldx (I1)+6,NULL	// ...
	stx A0,(I1)/*V*/	// ET4c ==> ET67
F0B180:	// (loop lvl 4)
	mv I2,I1	// ET64 -> ET64
	ldx (I4)+1,NULL	// I4 += 1
	sty I0,(I4)-1	// ET66 spills to #0
F0B78:	// (loop lvl 4)
	call _decoderTaskRunning
	nop
// jumped away
	sub A0,NULL,A0	// ET62 != (0) -> (0)
	nop
	callzc _powerSavingDelay
	ldc F0B75,LR0
// jumped away
	j F0B72
	nop
// jumped away
F0B86:	// (loop lvl 4)
// 								else if (checkUART())
	sub A0,NULL,A0	// ET68 != (0) -> (0)
	nop
	jzc F0B184	// unsigned compare
	nop
// jumped away
//                         else if (navigateMenus())
	call _navigateMenus
	nop
// jumped away
	sub A0,NULL,A0	// ET69 != (0) -> (0)
	nop
	jzc F0B184	// unsigned compare
	nop
// jumped away
	ldc 30,C0	// 30 -> C0
	ldx (I6)+1,NULL ; sub NULL,ONES,C1	// I6 += 1
//                         else if (playPause((0x1E),(1)))
	call _playPause
	stx C1,(I6)	// ET31
// jumped away
	ldx (I6)-1,NULL ; sub A0,NULL,A0	// I6 += -1
	nop
	jzc F0B184	// unsigned compare
	nop
// jumped away
	ldc 37,C0	// 37 -> C0
	ldx (I6)+1,NULL ; sub NULL,ONES,C1	// I6 += 1
//                         else if (nextSong((0x25),(1)))
	call _nextSong
	stx C1,(I6)	// ET31
// jumped away
	ldx (I6)-1,NULL ; sub A0,NULL,A0	// I6 += -1
	nop
	jzc F0B184	// unsigned compare
	nop
// jumped away
	ldc 39,C0	// 39 -> C0
	ldx (I6)+1,NULL ; sub NULL,ONES,C1	// I6 += 1
//                         else if (previousSong((0x27),(1)))
	call _previousSong
	stx C1,(I6)	// ET31
// jumped away
	ldx (I6)-1,NULL ; sub A0,NULL,A0	// I6 += -1
	nop
	jzc F0B184	// unsigned compare
	nop
// jumped away
	ldc 13,C0	// 13 -> C0
	ldx (I6)+1,NULL ; sub NULL,ONES,C1	// I6 += 1
//                         else if (volumeUp((0x0D),(1)))
	call _volumeUp
	stx C1,(I6)	// ET31
// jumped away
	ldx (I6)-1,NULL ; sub A0,NULL,A0	// I6 += -1
	nop
	jzc F0B184	// unsigned compare
	nop
// jumped away
	ldc 32,C0	// 32 -> C0
	ldx (I6)+1,NULL ; sub NULL,ONES,C1	// I6 += 1
//                         else if (volumeDown((0x20),(1)))
	call _volumeDown
	stx C1,(I6)	// ET31
// jumped away
	ldx (I6)-1,NULL ; sub A0,NULL,A0	// I6 += -1
	nop
	jzc F0B184	// unsigned compare
	nop
// jumped away
	ldc 33,C0	// 33 -> C0
	ldx (I6)+1,NULL ; sub NULL,ONES,C1	// I6 += 1
//                         else if (volumeMute((0x21),(1)))
	call _volumeMute
	stx C1,(I6)	// ET31
// jumped away
	ldx (I6)-1,NULL ; sub A0,NULL,A0	// I6 += -1
	nop
	jzc F0B184	// unsigned compare
	nop
// jumped away
	ldc 34,C0	// 34 -> C0
	ldx (I6)+1,NULL ; sub NULL,ONES,C1	// I6 += 1
//                         else if (repeatSong((0x22),(1)))
	call _repeatSong
	stx C1,(I6)	// ET31
// jumped away
	ldx (I6)-1,NULL ; sub A0,NULL,A0	// I6 += -1
	nop
	jzc F0B184	// unsigned compare
	nop
// jumped away
	ldc 35,C0	// 35 -> C0
	ldx (I6)+1,NULL ; sub NULL,ONES,C1	// I6 += 1
//                         else if (stopSong((0x23),(1)))
	call _stopSong
	stx C1,(I6)	// ET31
// jumped away
	ldx (I6)-1,NULL ; sub A0,NULL,A0	// I6 += -1
	nop
	jzc F0B126	// unsigned compare
	nop
// jumped away
	ldc 36,C0	// 36 -> C0
	ldx (I6)+1,NULL ; sub NULL,ONES,A1	// I6 += 1
//                         else if (shuffleSong((0x24),(1)))
	call _shuffleSong
	stx A1,(I6)	// ET31
// jumped away
	ldx (I6)-1,NULL ; sub A0,NULL,A0	// I6 += -1
	nop
	jzc F0B126	// unsigned compare
	nop
// jumped away
//                             else if (!(GpioReadPinDelay(((0x14)),15,0)) && cbut)
	ldc 15,B0	// 15 -> B0
	ldc 20,C0	// 20 -> C0
	ldc 0,B1	// 0 -> B1
	and NULL,NULL,C1 ; ldx (I6)+1,NULL	// 0 -> C1
	call _GpioReadPinDelay
	and NULL,NULL,D1	// 0 -> 1 -> ET0
// jumped away
	sub A0,NULL,A0	// ET7d != (0) -> (0)
	ldc _cbut,I0	// ET7e
	jzc F0B126	// unsigned compare
	nop
// jumped away
	ldx (I0),A0/*V*/ ; ldy (I6)+1,NULL	// ET7e ==> 'cbut'
	sub A0,NULL,A0	// 'cbut' != (0) -> (0)
	ldc cap3butto_20,A0	// ET7f
	jzc F0B132	// unsigned compare
	nop	// I6 += 1
// jumped away
	ldx (I6)-1,NULL
F0B126:	// (loop lvl 4)
	sub NULL,ONES,C1	// 1 -> ET31
F0B184:	// (loop lvl 4)
	ldx (I4)+1,NULL	// I4 += 1
	j F0B180
	ldy (I4)-1,I0	// unspill ET66 from #0
// jumped away
F0B132:	// (loop lvl 4)

// {vo_printf("cap3 button pressed! \n");
	call _vo_printf
	stx A0,(I6)	// ET7f
// jumped away
	ldc 1000,A0	// 1000 -> 1 -> ET81
// Delay(1000);
	call _Delay
	stx A0,(I6)	// I6 += 1
// jumped away
	j F0B126
	ldx (I6)-1,NULL	// I6 += -1
// jumped away
F0B181:	// (loop lvl 4)
	j F0B180
	ldy (I4)-1,I0	// unspill ET66 from #0
// jumped away
F0B71:	// (loop lvl 3)
	ldx (I3),A0/*V*/ ; ldy (I6)+1,NULL	// I6 += 1
//                 }
//                 else
//                 {
//  vo_printf("File %d not found, finished playing.\n",fileNum+1);
	sub A0,ONES,A0	// 'fileNum' - (-1) -> ET82
	stx A0,(I6)+1	// ET82
	ldc filedno_21,A0	// ET83
	call _vo_printf
	stx A0,(I6)	// ET83
// jumped away
//                     fileNum = 0;
//                     continue;
	j F0B67
	ldy (I6)-2,NULL ; stx D1,(I3)/*V*/	// I6 += -2
// jumped away
F0B149:	// (loop lvl 4)
	ldc _seed,I0	// ET92
	ldy (I6)+1,NULL ; ldx (I0),A0/*V*/	// I6 += 1
//                     }
//                 {
//                     do
//                     {
//                         seed = randLFSR(seed);
	call _randLFSR
	stx A0,(I6)	// 'seed'
// jumped away
	stx A0,(I0)/*V*/ ; ldy (I6)-1,NULL	// I6 += -1
	ldc _numSongsDirectory,I0	// ET94
	ldx (I0),B1/*V*/ ; add A0,NULL,B0	// A0 -> ET93
	call divide16unsigned
	add B1,NULL,A0	// 'numSongsDirectory' -> A0
// jumped away
	ldx (I3),A0/*V*/	// ET4b ==> 'fileNum'
	sub A0,A1,A0	// 'fileNum' == ET95 -> ATc5
	ldc _seed,I0	// ET92
	jzs F0B149	// unsigned compare
	nop
// jumped away
//                     fileNum = seed % numSongsDirectory;
	ldx (I0),B0/*V*/	// ET92 ==> 'seed'
	ldc _numSongsDirectory,I0	// ET94
	ldx (I0),B1/*V*/	// ET94 ==> 'numSongsDirectory'
	call divide16unsigned
	add B1,NULL,A0	// 'numSongsDirectory' -> A0
// jumped away
	j F0B176
	stx A1,(I3)/*V*/	// ET95 ==> ET4b
// jumped away
F0B141:	// (loop lvl 3)
//                 }
//                 {
//                 	  offset = 0;
	stx A0,(I0)/*V*/	// ET8d ==> ET8e
//                     fileNum = index;
	ldc _index,I0	// ET50
	ldx (I0),A0/*V*/	// ET50 ==> 'index'
	ldc _path,I0	// ET51
	stx A0,(I3)/*V*/	// 'index' ==> ET4b
//                     sprintf(filespec, "%s*.mp3", path);
	ldx (I0),A0/*V*/	// ET51 ==> 'path'
	ldc _filespec,I0	// ET53
	stx A0,(I6)+1	// 'path'
	ldc smp3_17,A0	// ET52
	stx A0,(I6)+1	// ET52
	ldx (I0),A0/*V*/	// ET53 ==> 'filespec'
	call _sprintf
	stx A0,(I6)	// 'filespec'
// jumped away
	ldy (I6)-2,NULL ; ldx (I3),A0/*V*/	// I6 += 1
//                     sprintf(fnumMode, "rb#%d", fileNum);
	stx A0,(I6)+1	// 'fileNum'
	ldc rbd_18,A0	// ET55
	stx A0,(I6)+1	// ET55
	call _sprintf
	stx D0,(I6)	// ET56
// jumped away
//                     newSongSelected = 0;
	j F0B176
	ldy (I6)-3,NULL ; stx D1,(I1)/*V*/	// I6 += -3
// jumped away

//_____________________________________________________________
//
	.sect code,randLFSR	// 17 words
	.export _randLFSR
_randLFSR:
	ldx (I6)+2,NULL	// I6 += 2
	stx I6,(I6) ; sty I4,(I6)
	ldx (I6)+1,I4
	stx A1,(I6) ; sty B0,(I6) ; sub NULL,ONES,A1
	ldx (I4)-2,NULL	// I4 += -2
// lsb
	ldx (I4)+2,A0	// 1 -> 1 -> ET0
	and A0,A1,B0	// 'seed' and ET0 -> 'lsb'
	lsr A0,A0	// 'seed' << (-1) -> ATa
// >>= 1;
//     if (lsb == 1)
	sub B0,A1,A1	// 'lsb' != ET0 -> AT7
	ldc 46080,A1	// 46080 -> 1 -> ET5
	jzc F1B1	// unsigned compare
	nop
// jumped away
//     }
//     {
//         seed ^= 0xB400u;
	xor A0,A1,A0	// ATa xor ET5 -> ATa
F1B1:
	ldy (I6),B0 ; ldx (I6)-1,A1
	ldx (I4),I6 ; ldy (I4),I4
	jr
	ldx (I6)-2,NULL
// jumped away

//_____________________________________________________________
//
	.sect code,PlayerThread	// 21 words
	.export _PlayerThread
_PlayerThread:
	ldx (I6)+1,NULL	// I6 += 1
	stx LR0,(I6)+1
	stx A0,(I6) ; sty I0,(I6)+1
	ldc _audioDecoder,I0	// ET1
	stx I1,(I6) ; sty I2,(I6)
	ldc _errorString,I1	// I1
//     eCode =( ((u_int16 (*)(register AUDIO_DECODER *, register const char **))(*((u_int16 *)(decoderLibrary)+2+(4))))(audioDecoder,&errorString) );
	ldx (I0),I2/*V*/	// ET1 ==> 'audioDecoder'
	ldc _decoderLibrary,I0	// ET3
	ldx (I0),I0/*V*/	// ET3 ==> ET6
	ldx (I0)+6,NULL	// ET6 += 6
	ldx (I0),A0	// ET6 ==> 6 -> ET7
	mv A0,LR0
	jr
	ldc lo(F2B3),LR0	// (return address)
// jumped away
F2B3:
	ldc _eCode,I0	// ETa
	stx A0,(I0)/*V*/ ; ldy (I6),I2	// ET9 ==> ETa
	ldx (I6)-1,I1
	ldy (I6),I0 ; ldx (I6)-1,A0
	ldx (I6)-1,LR0
	jr
	nop
// jumped away

//_____________________________________________________________
//
	.sect code,PlayFile	// 50 words
	.export _PlayFile
_PlayFile:
	ldx (I6)+1,NULL	// I6 += 1
	stx LR0,(I6)+1
	stx I6,(I6) ; sty I4,(I6)
	ldx (I6)+1,I4
	stx C0,(I6) ; sty I0,(I6)+1
	ldc _stdaudioout,I0	// ET1
	stx I1,(I6) ; sty I2,(I6)+1
	stx I3,(I6) ; ldy (I4)-2,NULL
	ldc _decoderLibrary,I3	// ET3
	ldx (I4)+2,I2 ; and NULL,NULL,C0	// unspill 'fp' from #-2
//     audioDecoder =( ((AUDIO_DECODER *(*)(register struct file_descriptor *, register struct file_descriptor *, register void (*)(AUDIO_DECODER *, u_int16), register enum AuDecFormat))(*((u_int16 *)(decoderLibrary)+2+(2))))(fp,stdaudioout,0,auDecFGuess) );
	ldx (I0),I1/*V*/	// ET1 ==> 'stdaudioout'
	ldc 0,I0	// 0 -> I0
	ldx (I3),I3/*V*/	// 0 -> C0
	ldx (I3)+4,NULL	// ET5 += 4
	ldx (I3),A0	// ET5 ==> 4 -> ET6
	mv A0,LR0
	jr
	ldc lo(F3B3),LR0	// (return address)
// jumped away
F3B3:
	ldc _audioDecoder,I0	// ET9
	stx A0,(I0)/*V*/ ; sub A0,NULL,A0	// ET8 ==> ET9
//     if (!audioDecoder)
	nop
	jzc F3B5	// signed compare
	nop
// jumped away
//     }
//     {
//         loadCriticalErrorMenu();
	call _loadCriticalErrorMenu
	nop
// jumped away
	ldc couldntc_22,A0	// ETa
	ldx (I6)+1,NULL	// I6 += 1
//  vo_printf("Couldn't create audio decoder\n");
	call _vo_printf
	stx A0,(I6)	// ETa
// jumped away
	ldx (I6)-1,NULL ; or NULL,ONES,A0	// I6 += -1
//         return -1;
F3B1:
	ldx (I6)-1,I3
	ldy (I6),I2 ; ldx (I6)-1,I1
	ldy (I6),I0 ; ldx (I6)-1,C0
	ldx (I4),I6 ; ldy (I4),I4
	ldx (I6)-1,NULL	// I6 += -1
	ldx (I6)-1,LR0
	jr
	nop
// jumped away
F3B5:
	ldc _PlayerThread,A0	// ETd
	ldx (I6)+1,NULL	// I6 += 1
//     StartTask(4, PlayerThread);
	stx A0,(I6)+1	// ETd
	ldc 4,A0	// 4 -> 0 -> ETe
	call _StartTask
	stx A0,(I6)	// ETe
// jumped away
	ldc 100,A0	// 100 -> 1 -> ET10
	ldx (I6)-1,NULL	// I6 += 1
//     Delay(100);
	call _Delay
	stx A0,(I6)	// ET10
// jumped away
//     return 0;
	j F3B1
	ldx (I6)-1,NULL ; and NULL,NULL,A0	// I6 += -1
// jumped away

//_____________________________________________________________
//
	.sect code,decoderTaskRunning	// 31 words
	.export _decoderTaskRunning
_decoderTaskRunning:
	ldx (I6)+1,NULL	// I6 += 1
	stx LR0,(I6)+1
	stx I6,(I6) ; sty I4,(I6)
	ldx (I6)+1,I4
	stx A1,(I6) ; sty I0,(I6)
//     if (pSysTasks[4].task.tc_State && pSysTasks[4].task.tc_State != 6)
	ldc _pSysTasks,I0	// ET1
	ldx (I0),A1/*V*/	// ET1 ==> 'pSysTasks'
	ldc 64,I0	// 64 -> ETa
	mv I0,A0	// ETa -> AT10
	add A1,A0,A0	// 'pSysTasks' + AT10 -> ATf
	mv A0,I0	// ATf -> ET4
	ldx (I0),A0	// ET4 ==> 64 -> ET5
	sub A0,NULL,A0	// ET5 == (0) -> (0)
	ldc 6,A1	// 6 -> 0 -> ET6
	jzs F4B4	// signed compare
	sub A0,A1,A0	// ET5 == ET6 -> ATd
// jumped away
	ldc 100,A0	// 100 -> 1 -> ET7
	jzs F4B4	// signed compare
	nop
// jumped away
	ldx (I6)+1,NULL	// I6 += 1
//     }
//     {
//         Delay(100);
	call _Delay
	stx A0,(I6)	// ET7
// jumped away
	ldx (I6)-1,NULL ; sub NULL,ONES,A0	// I6 += -1
//         return 1;
F4B1:
	ldy (I6),I0 ; ldx (I6)-1,A1
	ldx (I4),I6 ; ldy (I4),I4
	ldx (I6)-1,NULL	// I6 += -1
	ldx (I6)-1,LR0
	jr
	nop
// jumped away
F4B4:
//     return 0;
	j F4B1
	and NULL,NULL,A0	// 0 -> 1 -> ET9
// jumped away

//_____________________________________________________________
//
	.sect code,checkFlags	// 39 words
	.export _checkFlags
_checkFlags:
	ldx (I6)+1,NULL	// I6 += 1
	stx LR0,(I6)+1
	stx I6,(I6) ; sty I4,(I6)
	ldx (I6)+1,I4
	stx A1,(I6) ; sty I0,(I6)+1
	ldc _appFlags,I0	// ET1
	stx I2,(I6) ; sub NULL,ONES,A1
//     if (appFlags &(1<<0))
	ldx (I0),A0/*V*/	// ET1 ==> 'appFlags'
	and A0,A1,A0	// 'appFlags' and ET0 -> ET2
	ldc _audioDecoder,I0	// ET5
	jzs F5B4	// compare against zero
	nop
// jumped away
	ldx (I0),I2/*V*/ ; ldy (I6)+1,NULL	// I6 += 1
//     }
//     {
//         audioDecoder->cs.cancel = 1;
	ldx (I2)+7,NULL ; sub NULL,ONES,A0	// ET6 += 13
	ldx (I2)+6,NULL	// ...
	stx A0,(I2)/*V*/ ; and NULL,NULL,A0	// ET3 ==> ET6
//         running = 0;
	ldc _running,I2	// ET8
	stx A0,(I2)/*V*/	// ET7 ==> ET8
//         Delay(100);
	ldc 100,A0	// 100 -> 1 -> ET9
	call _Delay
	stx A0,(I6)	// ET9
// jumped away
	ldx (I0),I2/*V*/ ; ldy (I6)-1,NULL	// I6 += -1
// ( ((int (*)(register AUDIO_DECODER *))(*((u_int16 *)(decoderLibrary)+2+(3))))(audioDecoder) );
	ldc _decoderLibrary,I0	// ETb
	ldx (I0),I0/*V*/	// ETb ==> ETe
	ldx (I0)+5,NULL	// ETe += 5
	ldx (I0),A0	// ETe ==> 5 -> ETf
	mv A0,LR0
	jr
	ldc lo(F5B6),LR0	// (return address)
// jumped away
F5B6:
//         return 1;
	add A1,NULL,A0	// ET0 returns via A0
F5B1:
	ldx (I6)-1,I2
	ldy (I6),I0 ; ldx (I6)-1,A1
	ldx (I4),I6 ; ldy (I4),I4
	ldx (I6)-1,NULL	// I6 += -1
	ldx (I6)-1,LR0
	jr
	nop
// jumped away
F5B4:
//     return 0;
	j F5B1
	and NULL,NULL,A0	// 0 -> 1 -> ET7
// jumped away

//_____________________________________________________________
//
	.sect code,scanDirectoryForMP3	// 182 words
	.export _scanDirectoryForMP3
_scanDirectoryForMP3:
	ldc 34,I7
	ldc s_23,A0	// ET2
	ldx (I6)+1,NULL	// I6 += 1
	stx LR0,(I6)+1
	stx I6,(I6) ; sty I4,(I6)
	ldx (I6)*,I4
	stx A1,(I6) ; sty B0,(I6)+1
	stx B1,(I6) ; sty C0,(I6)+1
	stx C1,(I6) ; sty D0,(I6)+1
	stx D1,(I6) ; sty I0,(I6)+1
	stx I1,(I6) ; sty I2,(I6)+1
	stx I3,(I6)+1 ; and NULL,NULL,A1
// dirFile
// metaFile
// songsInDirectory
// = vo_fopen(directory, "s");
	stx A0,(I6)+1	// ET2
	ldc _directory,A0	// ET3
	call _vo_fopen
	stx A0,(I6)	// ET3
// jumped away
	ldx (I6)-2,NULL ; sub A0,NULL,C0	// I6 += -2
//     if (dirFile)
	mv C0,I0
	jzc F6B4	// signed compare
	nop
// jumped away
F6B1:
	ldx (I6)-1,I3
	ldy (I6),I2 ; ldx (I6)-1,I1
	ldy (I6),I0 ; ldx (I6)-1,D1
	ldy (I6),D0 ; ldx (I6)-1,C1
	ldy (I6),C0 ; ldx (I6)-1,B1
	ldy (I6),B0 ; ldx (I6)-1,A1
	ldx (I4),I6 ; ldy (I4),I4
	ldx (I6)-1,NULL	// I6 += -1
	ldx (I6)-1,LR0
	jr
	nop
// jumped away
	mv C0,I0	// 'dirFile' -> I0
F6B4:
	ldc 128,A0	// 128 -> 1 -> ET5
	ldx (I6)+1,NULL	// I6 += 1
//     }
//     {
//         if (FatFindFirst(dirFile,directory,fileName,128) == 0)
	stx A0,(I6)+1	// ET5
	ldc _fileName,A0	// ET6
	stx A0,(I6)+1	// ET6
	ldc _directory,A0	// ET3
	call _FatFindFirst
	stx A0,(I6)	// ET3
// jumped away
	ldx (I6)-2,NULL ; sub A0,NULL,A0	// I6 += -3
	ldc pathnotf_31,A0	// ET34
	jzs F6B43	// signed compare
	nop	// I6 += 1
// jumped away
//         }
//         else
//         {
//  vo_printf("Path not found\n");
	call _vo_printf
	stx A0,(I6)	// ET34
// jumped away
	ldx (I6)-1,NULL	// I6 += -1
F6B8:
//  vo_fclose(dirFile);
	call _vo_fclose
	mv C0,I0	// 'dirFile' -> I0
// jumped away
//         return songsInDirectory;
	j F6B1
	add A1,NULL,A0	// 'songsInDirectory' returns via A0
// jumped away
F6B43:
	ldc _directory,D1	// ET3
	ldc _metadata,I2	// ET1c
	ldc _openedFile,I3	// ET2c
	ldy (I4)+1,NULL ; ldx (I6)-1,NULL
	stx I2,(I4)+1	// I2 spills to #0
	mv I4,C1	// I4 -> [] -> ET14
	ldx (I4)-4,NULL	// I4 += -2
	j F6B10
	ldx (I4)+2,B0	// unspill 'root' from #-2
// jumped away
F6B13:	// (loop lvl 2)
	ldc rbd_18,A0	// ET10
	ldx (I6)+1,NULL	// I6 += 1
//                 }
//                 {
//                     sprintf(filenum,"rb#%d", songsInDirectory);
	stx A1,(I6)+1	// 'songsInDirectory'
	stx A0,(I6)+1	// ET10
	ldc _filenum6d0408,A0	// ET11
	call _sprintf
	stx A0,(I6)	// ET11
// jumped away
	ldx (I6)-2,NULL ; sub B0,NULL,B0	// I6 += -3
//                     if (root)
	ldc smp3_17,A0	// ET13
	jzs F6B18	// unsigned compare
	nop	// I6 += 1
// jumped away
//                     }
//                     {
//                         sprintf(filestring, "%s*.mp3", directory);
	stx D1,(I6)+1	// ET3
	stx A0,(I6)+1	// ET13
	call _sprintf
	stx C1,(I6)	// ET14
// jumped away
	ldx (I6)-3,NULL	// I6 += -3
F6B19:	// (loop lvl 2)
	ldc _filenum6d0408,A0	// ET11
	ldx (I6)+1,NULL	// I6 += 1
//  vo_printf("fopen(%s, %s) \n", filestring, filenum);
	stx A0,(I6)+1	// ET11
	ldc fopens_26,A0	// ET19
	stx C1,(I6)+1	// ET14
	call _vo_printf
	stx A0,(I6)	// ET19
// jumped away
	ldc _filenum6d0408,A0	// ET11
	ldx (I6)-2,NULL	// I6 += 1
//                     metaFile = vo_fopen(filestring, filenum);
	stx A0,(I6)+1	// ET11
	call _vo_fopen
	stx C1,(I6)	// ET14
// jumped away
	sub A0,NULL,B1 ; ldy (I6)-1,NULL	// I6 += -2
//                     if (metaFile)
	ldx (I4)+1,NULL	// I4 += 1
	jzc F6B24	// signed compare
	ldc failedto_30,A0	// ET31
// jumped away
//                     }
//                     else
//                     {
//  vo_printf("failed to open metafile pointer \n");
	call _vo_printf
	ldy (I4)-1,NULL ; stx A0,(I6)
// jumped away
	ldx (I6)-1,NULL	// I6 += -1
F6B14:	// (loop lvl 2)
	mv C0,I0	// 'dirFile' -> I0
	ldc 128,A0	// 128 -> ET5
	ldx (I6)+1,NULL	// I6 += 1
	stx A0,(I6)+1	// ET5
	ldc _fileName,A0	// ET6
	call _FatFindNext
	stx A0,(I6)	// ET6
// jumped away
	ldx (I6)-2,NULL ; sub NULL,A0,A0	// I6 += -2
	nop
	jzc F6B8	// signed compare
	nop
// jumped away
F6B10:	// (loop lvl 2)
//             }
//         {
//             do
//             {
//                 if (!strcmp( (char *) &dirFile->extraInfo[13], "MP3"))
	ldc mp3_24,I1	// I1
	ldc 9,A0	// 9 -> ETa
	add C0,A0,A0	// 'dirFile' + ETa -> AT41
	mv A0,I0	// AT41 -> ETb
	ldx (I0),I0	// ETb ==> 9 -> ETc
	ldx (I0)+7,NULL	// ETc += 13
	call _strcmp
	ldx (I0)+6,NULL	// ...
// jumped away
	sub A0,NULL,A0	// ETf != (0) -> (0)
	nop
	jzc F6B14	// signed compare
	nop
// jumped away
	j F6B13
	nop
// jumped away
F6B24:	// (loop lvl 2)
//                     }
//                     {
//                         metadata->fp = metaFile;
	ldx (I2),I0/*V*/	// ET1c ==> 'metadata'
	stx B1,(I0)/*V*/	// 'metaFile' ==> 'metadata'
//                         RunLibraryFunction("MYMETA",2,(int) &metadata);
	ldx (I4)-1,A0	// unspill ET1d from #0
	stx A0,(I6)+1	// ET1d
	ldc 2,A0	// 2 -> ET1e
	stx A0,(I6)+1	// ET1e
	ldc mymeta_19,A0	// ET1f
	call _RunLibraryFunction
	stx A0,(I6)	// ET1f
// jumped away
	ldc unknown_27,I1	// I1
	ldx (I2),I0/*V*/ ; ldy (I6)-3,NULL	// I6 += -3
//                         if (!strcmp(metadata->title, "UNKNOWN"))
	call _strcmp
	ldx (I0)+1,NULL	// ET23 += 1
// jumped away
	sub A0,NULL,A0	// ET24 != (0) -> (0)
	ldc 30,A0	// 30 -> A0
	jzc F6B29	// signed compare
	nop
// jumped away
//                         }
//                         {
//                             strncpy(metadata->title, fileName, 30);
	ldc _fileName,I1	// I1
	ldx (I2),I0/*V*/	// ET1c ==> 'metadata'
	call _strncpy
	ldx (I0)+1,NULL	// ET23 += 1
// jumped away
//                             metadata->title[30] = '\0';
	ldc 31,A0	// 31 -> AT37
	ldx (I2),D0/*V*/	// ET1c ==> 'metadata'
	add D0,A0,A0	// ET23 + AT37 -> AT42
	mv A0,I0 ; and NULL,NULL,A0	// AT42 -> ET28
	stx A0,(I0)	// ET1 ==> ET28
F6B29:	// (loop lvl 2)
//                         if (root)
	sub B0,NULL,B0 ; ldx (I6)+1,NULL	// 'root' != (0) -> (0)
	ldc sis_28,A0	// ET2b
	jzc F6B32	// unsigned compare
	stx D1,(I6)+1 ; sub A1,ONES,D0	// ET3
// jumped away
	ldc sis_29,A0	// ET2e
//                         }
//                         else
//                         {
//  vo_fprintf(openedFile, "%s|%i|%s/| \r\n", metadata->title, songsInDirectory++, directory);
	stx A1,(I6)+1	// 'songsInDirectory' - (-1) -> AT44
	ldx (I2),I0/*V*/	// ET1c ==> 'metadata'
	ldx (I0)+1,NULL	// ET23 += 1
	stx I0,(I6)+1	// ET23
	stx A0,(I6)+1	// ET2e
	ldx (I3),A0/*V*/	// ET2c ==> 'openedFile'
	call _vo_fprintf
	stx A0,(I6)	// 'openedFile'
// jumped away
F6B34:	// (loop lvl 2)
	mv B1,I0 ; add D0,NULL,A1	// 'metaFile' -> I0
	ldx (I6)-5,NULL	// I6 += -5
//  vo_fclose(metaFile);
	call _vo_fclose
	ldc F6B14,LR0
// jumped away
F6B32:	// (loop lvl 2)
//                         }
//                         {
//  vo_fprintf(openedFile, "%s|%i|%s| \r\n", metadata->title, songsInDirectory++, directory);
	stx A1,(I6)+1	// 'songsInDirectory' - (-1) -> AT43
	ldx (I2),I0/*V*/	// ET1c ==> 'metadata'
	ldx (I0)+1,NULL	// ET23 += 1
	stx I0,(I6)+1	// ET23
	stx A0,(I6)+1	// ET2b
	ldx (I3),A0/*V*/	// ET2c ==> 'openedFile'
	stx A0,(I6)	// 'openedFile'
	call _vo_fprintf
	ldc F6B34,LR0
// jumped away
F6B18:	// (loop lvl 2)
	ldc _extension,I0	// ET16
	ldx (I0),A0/*V*/	// I6 += 1
//                     }
//                     else
//                     {
//                         sprintf(filestring, "%s/%s", directory, extension);
	stx A0,(I6)+1	// 'extension'
	ldc ss_25,A0	// ET17
	stx D1,(I6)+1	// ET3
	stx A0,(I6)+1	// ET17
	call _sprintf
	stx C1,(I6)	// ET14
// jumped away
	j F6B19
	ldx (I6)-4,NULL	// I6 += -4
// jumped away

//_____________________________________________________________
//
	.sect code,scanDirectoryForDirectory	// 94 words
	.export _scanDirectoryForDirectory
_scanDirectoryForDirectory:
	ldc s_23,A0	// ET2
	ldx (I6)+1,NULL	// I6 += 1
	stx LR0,(I6)+1
	stx I6,(I6) ; sty I4,(I6)
	ldx (I6)+1,I4
	stx A1,(I6) ; sty B0,(I6)+1
	stx B1,(I6) ; sty C0,(I6)+1
	stx C1,(I6) ; sty D0,(I6)+1
	stx D1,(I6) ; sty I0,(I6)+1
	stx I1,(I6)+1 ; sty I2,(I6)
	ldy (I4)-2,NULL ; stx A0,(I6)+1	// I4 += -2
// dirFile
// counter
// = vo_fopen(directory, "s");
	ldx (I4)+2,A1 ; and NULL,NULL,B1	// unspill 'directory' from #-2
	call _vo_fopen
	stx A1,(I6)	// 'directory'
// jumped away
	ldx (I6)-1,NULL ; sub A0,NULL,B0	// I6 += -2
//     if (dirFile)
	ldc failedto_33,A0	// ET1b
	jzc F7B4	// signed compare
	nop	// I6 += 1
// jumped away
//     }
//     else
//     {
//  vo_printf("failed to open dirFile for some reason \n");
	call _vo_printf
	stx A0,(I6)	// ET1b
// jumped away
	ldx (I6)-1,NULL	// I6 += -1
F7B1:
	ldy (I6),I2 ; ldx (I6)-1,I1
	ldy (I6),I0 ; ldx (I6)-1,D1
	ldy (I6),D0 ; ldx (I6)-1,C1
	ldy (I6),C0 ; ldx (I6)-1,B1
	ldy (I6),B0 ; ldx (I6)-1,A1
	ldx (I4),I6 ; ldy (I4),I4
	ldx (I6)-1,NULL	// I6 += -1
	ldx (I6)-1,LR0
	jr
	nop
// jumped away
	ldx (I6)+1,NULL
F7B4:
	mv B0,I0	// 'dirFile' -> I0
	ldc 128,A0	// 128 -> 1 -> ET4
//     }
//     {
//         if (FatFindFirst(dirFile,directory,fileName,128) == 0)
	stx A0,(I6)+1	// ET4
	ldc _fileName,A0	// ET5
	stx A0,(I6)+1	// ET5
	call _FatFindFirst
	stx A1,(I6)	// 'directory'
// jumped away
	ldx (I6)-2,NULL ; sub A0,NULL,A0	// I6 += -3
	ldc pathnotf_31,A0	// ET17
	jzc F7B8	// signed compare
	nop	// I6 += 1
// jumped away
	ldc 128,C0	// 128 -> 1 -> ET4
	ldc _fileName,C1	// ET5
	ldc 16,D1	// 16 -> 1 -> ETb
	ldc 9,D0	// 9 -> 1 -> ETe
	ldy (I4)-3,NULL ; ldx (I6)-1,NULL
	j F7B11
	ldx (I4)+3,A1	// unspill 'dirIndex' from #-3
// jumped away
F7B14:	// (loop lvl 2)
//                 }
//                 {
//                     if (strcmp(dirFile->extraInfo, "SYSTEM~1"))
	ldc system1_32,I1	// I1
	add B0,D0,A0	// 'dirFile' + ETe -> AT26
	mv A0,I2	// AT26 -> ETf
	call _strcmp
	ldx (I2),I0	// ETf ==> 9 -> ET10
// jumped away
	sub A0,NULL,A0	// ET11 == (0) -> (0)
	nop
	jzs F7B15	// signed compare
	nop
// jumped away
//                     }
//                     {
//                         if (counter == dirIndex)
	sub B1,A1,A0	// 'counter' == 'dirIndex' -> AT20
	nop
	jzs F7B19	// unsigned compare
	nop
// jumped away
//                         counter++;
	sub B1,ONES,B1	// 'counter' - (-1) -> 'counter'
F7B15:	// (loop lvl 2)
	mv B0,I0	// 'dirFile' -> I0
	ldx (I6)+1,NULL	// I6 += 1
	stx C0,(I6)+1	// ET4
	call _FatFindNext
	stx C1,(I6)	// ET5
// jumped away
	ldx (I6)-2,NULL ; sub NULL,A0,A0	// I6 += -2
	nop
	jzc F7B9	// signed compare
	nop
// jumped away
F7B11:	// (loop lvl 2)
//             }
//         {
//             do
//             {
//                 if (dirFile->ungetc_buffer & 0x10)
	ldc 5,A0	// 5 -> ET8
	add B0,A0,A0	// 'dirFile' + ET8 -> AT25
	mv A0,I0	// AT25 -> ET9
	ldx (I0),A0	// ET9 ==> 5 -> ETa
	and A0,D1,A0	// ETa and ETb -> ETc
	nop
	jzc F7B14	// compare against zero
	nop
// jumped away
	j F7B15
	nop
// jumped away
F7B8:
//         }
//         else
//         {
//  vo_printf("Path not found\n");
	call _vo_printf
	stx A0,(I6)	// ET17
// jumped away
	ldx (I6)-1,NULL	// I6 += -1
F7B9:
//  vo_fclose(dirFile);
	call _vo_fclose
	mv B0,I0	// 'dirFile' -> I0
// jumped away
//         return "no";
	j F7B1
	ldc no_11,A0	// ET1a
// jumped away
F7B19:
//                         }
//                         {
//  vo_fclose(dirFile);
	call _vo_fclose
	mv B0,I0	// 'dirFile' -> I0
// jumped away
//                             return dirFile->extraInfo;
	j F7B1
	ldx (I2),A0	// ETf ==> 9 -> ET10
// jumped away

//_____________________________________________________________
//
	.sect code,recursiveFindMP3	// 279 words
	.export _recursiveFindMP3
_recursiveFindMP3:
	ldc 130,I7
	ldc s_23,A0	// ET2
	ldx (I6)+1,NULL	// I6 += 1
	stx LR0,(I6)+1
	stx I6,(I6) ; sty I4,(I6)
	ldx (I6)*,I4
	stx A1,(I6) ; sty B0,(I6)+1
	stx B1,(I6) ; sty C0,(I6)+1
	stx C1,(I6) ; sty D0,(I6)+1
	stx D1,(I6) ; sty I0,(I6)+1
	stx I1,(I6) ; sty I2,(I6)+1
	stx I3,(I6)+1 ; ldy (I4)-2,NULL
// dirFile
// metaFile
// totalNumSongs
// songsInDirectory
// = vo_fopen(path, "s");
	stx A0,(I6)+1 ; and NULL,NULL,C0	// ET2
	ldx (I4)+3,I2 ; and NULL,NULL,A0	// unspill AT6c from #-2
	call _vo_fopen
	stx I2,(I6) ; sty A0,(I4)-1	// AT6c
// jumped away
	ldx (I6)-2,NULL ; sub A0,NULL,B1	// I6 += -2
//     if (dirFile)
	mv B1,I0
	jzc F8B4	// signed compare
	nop
// jumped away
F8B1:
	ldx (I6)-1,I3
	ldy (I6),I2 ; ldx (I6)-1,I1
	ldy (I6),I0 ; ldx (I6)-1,D1
	ldy (I6),D0 ; ldx (I6)-1,C1
	ldy (I6),C0 ; ldx (I6)-1,B1
	ldy (I6),B0 ; ldx (I6)-1,A1
	ldx (I4),I6 ; ldy (I4),I4
	ldx (I6)-1,NULL	// I6 += -1
	ldx (I6)-1,LR0
	jr
	nop
// jumped away
	mv B1,I0	// 'dirFile' -> I0
F8B4:
	ldc 128,A0	// 128 -> 1 -> ET6
	ldx (I6)+1,NULL ; ldy (I2)+2,NULL	// I6 += 1
//     }
//     {
//     	 path += 2;
//         if (FatFindFirst(dirFile,path,fileName,128) == 0)
	stx A0,(I6)+1	// ET6
	ldc _fileName,A0	// ET7
	stx A0,(I6)+1	// ET7
	call _FatFindFirst
	stx I2,(I6)	// AT6c
// jumped away
	ldx (I6)-2,NULL ; sub A0,NULL,A0	// I6 += -3
	ldc pathnotf_31,A0	// ET51
	jzs F8B64	// signed compare
	nop	// I6 += 1
// jumped away
//         }
//         else
//         {
//  vo_printf("Path not found\n");
	call _vo_printf
	stx A0,(I6)	// ET51
// jumped away
	ldy (I4)-3,NULL ; ldx (I6)-1,NULL	// I6 += -1
	ldx (I4)+3,B0	// unspill 'root' from #-3
F8B8:
//  vo_fclose(dirFile);
	call _vo_fclose
	mv B1,I0	// 'dirFile' -> I0
// jumped away
//         if (!root)
	sub B0,NULL,B0 ; ldx (I4)+1,NULL	// 'root' != (0) -> (0)
	ldc String_36,A0	// ET54
	jzc F8B61	// unsigned compare
	nop
// jumped away
	ldy (I6)+1,NULL ; ldx (I4)-1,NULL
//         }
//         {
// (RunLibraryFunction(("cd"),0,(int)("..")));
	stx A0,(I6)+1 ; and NULL,NULL,A0	// ET54
	stx A0,(I6)+1	// ET1
	ldc cd_38,A0	// ET1d
	call _RunLibraryFunction
	stx A0,(I6)	// ET1d
// jumped away
	ldx (I6)-3,NULL ; ldy (I4)+1,NULL	// I6 += -3
F8B61:
//         return (totalNumSongs + songsInDirectory);
	ldy (I4)-1,A0	// unspill 'totalNumSongs' from #0
	j F8B1
	add A0,C0,A0	// 'totalNumSongs' + 'songsInDirectory' -> ET56
// jumped away
F8B64:
	ldc _metadata,I3	// ET32
	ldc 9,D0	// 9 -> 1 -> ETf
	ldy (I4)+1,NULL ; ldx (I6)-1,NULL
	stx I3,(I4)+1	// I3 spills to #0
	mv I4,C1	// I4 -> [] -> ET2c
	ldx (I4)-5,NULL	// I4 += -2
	j F8B10
	ldx (I4)+3,B0	// unspill 'root' from #-3
// jumped away
F8B13:	// (loop lvl 2)
//                 }
//                 {
//  vo_printf("[%s] [%s] \n", dirFile->extraInfo, fileName);
	stx A0,(I6)+1 ; add B1,D0,A0	// ET7
	mv A0,I2	// AT67 -> ET10
	ldx (I2),A0	// ET10 ==> 9 -> ET11
	stx A0,(I6)+1	// ET11
	ldc ss_34,A0	// ET12
	call _vo_printf
	stx A0,(I6)	// ET12
// jumped away
	ldc system1_32,I1	// I1
//                     if (!strcmp(dirFile->extraInfo, "SYSTEM~1") || !strcmp(dirFile->extraInfo, ".") || !strcmp(dirFile->extraInfo, ".."))
	call _strcmp
	ldy (I6)-3,NULL ; ldx (I2),I0	// I6 += -3
// jumped away
	sub A0,NULL,A0	// ET15 == (0) -> (0)
	nop
	jzs F8B16	// signed compare
	nop
// jumped away
	ldc String_35,I1	// I1
	call _strcmp
	ldx (I2),I0	// ET10 ==> 9 -> ET11
// jumped away
	sub A0,NULL,A0	// ET17 == (0) -> (0)
	nop
	jzs F8B16	// signed compare
	nop
// jumped away
	ldc String_36,I1	// I1
	call _strcmp
	ldx (I2),I0	// ET10 ==> 9 -> ET11
// jumped away
	sub A0,NULL,A0	// ET19 == (0) -> (0)
	nop
	jzs F8B16	// signed compare
	nop
// jumped away
	add B1,D0,A0 ; ldy (I6)+1,NULL	// I6 += 1
	mv A0,I0	// AT6a -> ET10
//                     }
//                     else
//                     {
// (RunLibraryFunction(("cd"),0,(int)(dirFile->extraInfo)));
	ldx (I0),A0	// ET10 ==> 9 -> ET1c
	stx A0,(I6)+1 ; and NULL,NULL,A0	// ET1c
	stx A0,(I6)+1	// ET1
	ldc cd_38,A0	// ET1d
	call _RunLibraryFunction
	stx A0,(I6)	// ET1d
// jumped away
	ldc _currentDirectory,I0	// ET1f
	ldy (I6)-2,NULL ; ldx (I0),A0/*V*/	// I6 += 1
//  vo_printf("currentDirectory - %s \n", currentDirectory);
	stx A0,(I6)+1	// 'currentDirectory'
	ldc currentdir_39,A0	// ET20
	call _vo_printf
	stx A0,(I6)	// ET20
// jumped away
	ldc _currentDirectory,I0	// ET1f
	ldx (I6)-1,NULL ; and NULL,NULL,A0	// I6 += 1
//                         totalNumSongs += recursiveFindMP3(currentDirectory, 0);
	stx A0,(I6)+1	// ET1
	ldx (I0),A0/*V*/	// ET1f ==> 'currentDirectory'
	call _recursiveFindMP3
	stx A0,(I6)	// 'currentDirectory'
// jumped away
	ldx (I4)+1,NULL ; ldy (I6)-2,NULL	// I4 += 1
	ldy (I4),A0 ; add A0,NULL,A1	// A0 -> ET22
	add A0,A1,A0	// 'totalNumSongs' + ET22 -> 'totalNumSongs'
	sty A0,(I4)-1	// 'totalNumSongs' spills to #0
F8B14:	// (loop lvl 2)
//                 if (!strcmp( (char *) &dirFile->extraInfo[13], "MP3"))
	ldc mp3_24,I1	// I1
	add B1,D0,A0	// 'dirFile' + ETf -> AT68
	mv A0,I0	// AT68 -> ET10
	ldx (I0),I0	// ET10 ==> 9 -> ET26
	ldx (I0)+7,NULL	// ET26 += 13
	call _strcmp
	ldx (I0)+6,NULL	// ...
// jumped away
	sub A0,NULL,A0	// ET27 != (0) -> (0)
	ldc rbd_18,A0	// ET28
	jzc F8B29	// signed compare
	nop
// jumped away
	ldx (I6)+1,NULL	// I6 += 1
//                 }
//                 {
//                     sprintf(filenum,"rb#%d", songsInDirectory);
	stx C0,(I6)+1	// 'songsInDirectory'
	stx A0,(I6)+1	// ET28
	ldc _filenumcab9b8,A0	// ET29
	call _sprintf
	stx A0,(I6)	// ET29
// jumped away
	ldx (I6)-2,NULL ; sub B0,NULL,B0	// I6 += -3
//                     if (root)
	ldc fmp3_40,A0	// ET2b
	jzs F8B33	// unsigned compare
	stx A0,(I6)+1	// ET2b
// jumped away
//                     }
//                     {
//                         sprintf(filestring, "F:*.mp3");
	call _sprintf
	stx C1,(I6)	// ET2c
// jumped away
F8B34:	// (loop lvl 2)
	ldc _filenumcab9b8,A0	// ET29
	ldx (I6)-1,NULL	// I6 += -2
//  vo_printf("fopen(%s, %s) \n", filestring, filenum);
	stx A0,(I6)+1	// ET29
	ldc fopens_26,A0	// ET2f
	stx C1,(I6)+1	// ET2c
	call _vo_printf
	stx A0,(I6)	// ET2f
// jumped away
	ldc _filenumcab9b8,A0	// ET29
	ldx (I6)-2,NULL	// I6 += 1
//                     metaFile = vo_fopen(filestring, filenum);
	stx A0,(I6)+1	// ET29
	call _vo_fopen
	stx C1,(I6)	// ET2c
// jumped away
	sub A0,NULL,A1 ; ldy (I6)-1,NULL	// I6 += -2
//                     if (metaFile)
	ldx (I4)+1,NULL	// I4 += 1
	jzc F8B39	// signed compare
	ldc failedto_43,A0	// ET4e
// jumped away
//                     }
//                     else
//                     {
//  vo_printf("failed to open metafile pointer\n");
	call _vo_printf
	ldy (I4)-1,NULL ; stx A0,(I6)
// jumped away
	ldx (I6)-1,NULL	// I6 += -1
F8B29:	// (loop lvl 2)
	mv B1,I0	// 'dirFile' -> I0
	ldc 128,A0	// 128 -> ET6
	ldx (I6)+1,NULL	// I6 += 1
	stx A0,(I6)+1	// ET6
	ldc _fileName,A0	// ET7
	call _FatFindNext
	stx A0,(I6)	// ET7
// jumped away
	ldx (I6)-2,NULL ; sub NULL,A0,A0	// I6 += -2
	nop
	jzc F8B8	// signed compare
	nop
// jumped away
F8B10:	// (loop lvl 2)
//             }
//         {
//             do
//             {
//                 if (dirFile->ungetc_buffer & 0x10)
	ldc 5,A0	// 5 -> ETa
	add B1,A0,A0 ; ldy (I6)+1,NULL	// 'dirFile' + ETa -> AT66
	mv A0,I0	// AT66 -> ETb
	ldc 16,A0	// 16 -> ETd
	ldx (I0),A1	// ETb ==> 5 -> ETc
	and A1,A0,A0	// ETc and ETd -> ETe
	ldc _fileName,A0	// ET7
	jzc F8B13	// compare against zero
	nop	// I6 += 1
// jumped away
	j F8B14
	ldx (I6)-1,NULL
// jumped away
F8B39:	// (loop lvl 2)
//                     }
//                     {
//                         metadata->fp = metaFile;
	ldx (I3),I0/*V*/	// ET32 ==> 'metadata'
	stx A1,(I0)/*V*/	// 'metaFile' ==> 'metadata'
//                         RunLibraryFunction("MYMETA",2,(int) &metadata);
	ldx (I4)-1,A0	// unspill ET33 from #0
	stx A0,(I6)+1	// ET33
	ldc 2,A0	// 2 -> ET34
	stx A0,(I6)+1	// ET34
	ldc mymeta_19,A0	// ET35
	call _RunLibraryFunction
	stx A0,(I6)	// ET35
// jumped away
	ldc unknown_27,I1	// I1
	ldx (I3),I0/*V*/ ; ldy (I6)-3,NULL	// I6 += -3
//                         if (!strcmp(metadata->title, "UNKNOWN"))
	call _strcmp
	ldx (I0)+1,NULL	// ET39 += 1
// jumped away
	sub A0,NULL,A0	// ET3a != (0) -> (0)
	ldc 30,A0	// 30 -> A0
	jzc F8B44	// signed compare
	nop
// jumped away
//                         }
//                         {
//                             strncpy(metadata->title, fileName, 30);
	ldc _fileName,I1	// I1
	ldx (I3),I0/*V*/	// ET32 ==> 'metadata'
	call _strncpy
	ldx (I0)+1,NULL	// ET39 += 1
// jumped away
	ldc 31,D1	// 31 -> AT57
	ldx (I3),A0/*V*/ ; ldy (I6)+1,NULL	// I6 += 1
//                             metadata->title[30] = '\0';
	add A0,D1,A0	// ET39 + AT57 -> AT6b
	mv A0,I0 ; and NULL,NULL,A0	// AT6b -> ET3e
	stx A0,(I0)	// ET1 ==> ET3e
//  vo_printf("%s \n", metadata->title);
	ldc s_41,A0	// ET3f
	ldx (I3),I0/*V*/	// ET32 ==> 'metadata'
	ldx (I0)+1,NULL	// ET39 += 1
	stx I0,(I6)+1	// ET39
	call _vo_printf
	stx A0,(I6)	// ET3f
// jumped away
	ldx (I6)-2,NULL	// I6 += -2
F8B44:	// (loop lvl 2)
//                         if (root)
	sub B0,NULL,B0 ; ldx (I6)+1,NULL	// 'root' == (0) -> (0)
	ldc _nextDirectory,A0	// ET41
	jzs F8B49	// unsigned compare
	stx A0,(I6)+1	// ET41
// jumped away
//                         }
//                         {
//  vo_fprintf(openedFile, "%s|%i|%s| \r\n", metadata->title, songsInDirectory, nextDirectory);
	ldc sis_28,A0	// ET42
	stx C0,(I6)+1	// 'songsInDirectory'
	ldx (I3),I0/*V*/	// ET32 ==> 'metadata'
	ldx (I0)+1,NULL	// ET39 += 1
	stx I0,(I6)+1	// ET39
	ldc _openedFile,I0	// ET43
	stx A0,(I6)+1	// ET42
	ldx (I0),A0/*V*/	// ET43 ==> 'openedFile'
	call _vo_fprintf
	stx A0,(I6)	// 'openedFile'
// jumped away
F8B50:	// (loop lvl 2)
	ldc 32,A0	// 32 -> ET47
	ldx (I3),D1/*V*/ ; ldy (I6)-4,NULL	// I6 += -5
//                         sprintf(filestring, "S:lookup/artists/%s.txt", metadata->artist);
	add D1,A0,A0	// 'metadata' + ET47 -> ET48
	stx A0,(I6)+1	// ET48
	ldc slookupa_42,A0	// ET49
	stx A0,(I6)+1	// ET49
	call _sprintf
	stx C1,(I6)	// ET2c
// jumped away
	ldx (I3),I0/*V*/ ; ldy (I6)-2,NULL	// I6 += 1
//                         writeToFile(filestring, songsInDirectory++, currentDirectory, metadata->title);
	ldx (I0)+1,NULL ; sub C0,ONES,D1	// ET39 += 1
	stx I0,(I6)+1	// ET39
	ldc _currentDirectory,I0	// ET1f
	ldx (I0),A0/*V*/	// ET1f ==> 'currentDirectory'
	stx A0,(I6)+1	// 'currentDirectory'
	stx C0,(I6)+1	// 'songsInDirectory' - (-1) -> AT6d
	call _writeToFile
	stx C1,(I6)	// ET2c
// jumped away
	mv A1,I0	// 'metaFile' -> I0
//  vo_fclose(metaFile);
	call _vo_fclose
	ldx (I6)-4,NULL	// I6 += -4
// jumped away
	j F8B29
	add D1,NULL,C0	// AT6d -> 'songsInDirectory'
// jumped away
F8B49:	// (loop lvl 2)
//                         }
//                         else
//                         {
//  vo_fprintf(openedFile, "%s|%i|%s/| \r\n", metadata->title, songsInDirectory, nextDirectory);
	ldc sis_29,A0	// ET45
	stx C0,(I6)+1	// 'songsInDirectory'
	ldx (I3),I0/*V*/	// ET32 ==> 'metadata'
	ldx (I0)+1,NULL	// ET39 += 1
	stx I0,(I6)+1	// ET39
	ldc _openedFile,I0	// ET43
	stx A0,(I6)+1	// ET45
	ldx (I0),A0/*V*/	// ET43 ==> 'openedFile'
	stx A0,(I6)	// 'openedFile'
	call _vo_fprintf
	ldc F8B50,LR0
// jumped away
F8B33:	// (loop lvl 2)
//                     }
//                     else
//                     {
// 	                     sprintf(filestring, "F:*.mp3");
	stx C1,(I6)	// ET2c
	call _sprintf
	ldc F8B34,LR0
// jumped away
F8B16:	// (loop lvl 2)
	add B1,D0,A0 ; ldy (I6)+1,NULL	// I6 += 1
	mv A0,I0	// AT69 -> ET10
//                     }
//                     {
//  vo_printf("We want to skip [%s] \n", dirFile->extraInfo);
	ldx (I0),A0	// ET10 ==> 9 -> ET11
	stx A0,(I6)+1	// ET11
	ldc wewantto_37,A0	// ET1a
	call _vo_printf
	stx A0,(I6)	// ET1a
// jumped away
	j F8B14
	ldx (I6)-2,NULL	// I6 += -2
// jumped away

//_____________________________________________________________
//
	.sect code,writeToFile	// 75 words
	.export _writeToFile
_writeToFile:
	ldx (I6)+1,NULL	// I6 += 1
	stx LR0,(I6)+1
	stx I6,(I6) ; sty I4,(I6)
	ldx (I6)+1,I4
	stx A0,(I6) ; sty A1,(I6)+1
	ldc rb_44,A0	// ET0
	stx B0,(I6)+1 ; sty I0,(I6)
	ldy (I4)-2,NULL ; stx A0,(I6)+1	// I4 += -2
// = vo_fopen(FileName, "rb");
	ldx (I4)+2,A1	// unspill 'FileName' from #-2
	call _vo_fopen
	stx A1,(I6)	// 'FileName'
// jumped away
	ldx (I6)-1,NULL ; sub A0,NULL,B0	// I6 += -2
//     if (openedFile)
	ldc fileexist_45,A0	// ET2
	jzc F9B4	// signed compare
	nop	// I6 += 1
// jumped away
	ldc w_5,A0	// ETc
//     }
//     else
//     {
//         openedFile = vo_fopen(("%s", FileName), "w");
	stx A0,(I6)+1	// ETc
	call _vo_fopen
	stx A1,(I6)	// 'FileName'
// jumped away
	ldx (I6)-2,NULL ; sub A0,NULL,A0	// I6 += -2
//         if (!openedFile)
	nop
	jzs F9B16	// signed compare
	nop
// jumped away
	mv A0,I0	// 'openedFile' -> 'openedFile'
F9B6:
	ldx (I4)-4,NULL ; ldy (I6)+1,NULL	// I4 += -4
//  vo_fprintf(openedFile, "%s|%i|%s|\n", songName, fileIndex, mp3Location);
	ldx (I4)+1,A0	// unspill 'mp3Location' from #0
	stx A0,(I6)+1	// 'mp3Location'
	ldx (I4)-2,A0	// unspill 'fileIndex' from #0
	stx A0,(I6)+1	// 'fileIndex'
	ldx (I4)+5,A0	// unspill 'songName' from #0
	stx A0,(I6)+1	// 'songName'
	ldc sis_51,A0	// ET10
	stx A0,(I6)+1	// ET10
	call _vo_fprintf
	stx I0,(I6)	// 'openedFile'
// jumped away
//  vo_fclose(openedFile);
	call _vo_fclose
	ldx (I6)-5,NULL	// I6 += -5
// jumped away
F9B1:
	ldy (I6),I0 ; ldx (I6)-1,B0
	ldy (I6),A1 ; ldx (I6)-1,A0
	ldx (I4),I6 ; ldy (I4),I4
	ldx (I6)-1,NULL	// I6 += -1
	ldx (I6)-1,LR0
	jr
	nop
// jumped away
F9B16:
	ldc couldnot_50,A0	// ETe
	ldx (I6)+1,NULL	// I6 += 1
//         }
//         {
//  vo_printf("could not find path to create : %s \n", FileName);
	stx A1,(I6)+1	// 'FileName'
	call _vo_printf
	stx A0,(I6)	// ETe
// jumped away
//             return;
	j F9B1
	ldx (I6)-2,NULL	// I6 += -2
// jumped away
F9B4:
//     }
//     {
//  vo_printf("file exists! \n");
	call _vo_printf
	stx A0,(I6)	// ET2
// jumped away
	mv B0,I0	// 'openedFile' -> I0
//  vo_fclose(openedFile);
	call _vo_fclose
	ldx (I6)-1,NULL	// I6 += -1
// jumped away
	ldc a_46,A0	// ET5
	ldx (I6)+1,NULL	// I6 += 1
//         openedFile = vo_fopen(("%s", FileName), "a");
	stx A0,(I6)+1	// ET5
	call _vo_fopen
	stx A1,(I6)	// 'FileName'
// jumped away
	ldx (I6)-1,NULL ; sub A0,NULL,A1	// I6 += -2
//         if (openedFile)
	ldc didnotop_49,A0	// ETa
	jzs F9B11	// signed compare
	nop	// I6 += 1
// jumped away
	ldc openedin_48,A0	// ET8
//         }
//         {
//  vo_printf("opened in append mode correctly");
	call _vo_printf
	stx A0,(I6)	// ET8
// jumped away
	mv A1,I0	// 'openedFile' -> 'openedFile'
	j F9B6
	ldx (I6)-1,NULL	// I6 += -1
// jumped away
F9B11:
//         }
//         else
//         {
//  vo_printf("did not open in append mode");
	call _vo_printf
	stx A0,(I6)	// ETa
// jumped away
//             return;
	j F9B1
	ldx (I6)-1,NULL	// I6 += -1
// jumped away

//_____________________________________________________________
//
	.sect data_x,bss_x	// 231 words
	.export __LINKINFO_ABS_appFlags_2255
__LINKINFO_ABS_appFlags_2255:
	.bss 0
	.export __LINKINFO_ABS_currentDirectory_2254
__LINKINFO_ABS_currentDirectory_2254:
	.bss 0
	.export __LINKINFO_IMPORT_SetHookFunction
__LINKINFO_IMPORT_SetHookFunction:
	.bss 0
	.export __LINKINFO_IMPORT___ReAllocMemXY
__LINKINFO_IMPORT___ReAllocMemXY:
	.bss 0
	.export __LINKINFO_IMPORT___AllocMemXY
__LINKINFO_IMPORT___AllocMemXY:
	.bss 0
	.export __LINKINFO_IMPORTASM_MonitorIntBreak
__LINKINFO_IMPORTASM_MonitorIntBreak:
	.bss 0
	.export __LINKINFO_IMPORTASM_MonitorBreak
__LINKINFO_IMPORTASM_MonitorBreak:
	.bss 0
	.export __LINKINFO_IMPORT___FreeMemX
__LINKINFO_IMPORT___FreeMemX:
	.bss 0
	.export __LINKINFO_IMPORT___FreeMemY
__LINKINFO_IMPORT___FreeMemY:
	.bss 0
	.export __LINKINFO_IMPORTASM_MonitorPutch15
__LINKINFO_IMPORTASM_MonitorPutch15:
	.bss 0
	.export __LINKINFO_IMPORT_RealDelayMicroSec
__LINKINFO_IMPORT_RealDelayMicroSec:
	.bss 0
	.export __LINKINFO_IMPORT_intOS
__LINKINFO_IMPORT_intOS:
	.bss 0
	.export __LINKINFO_IMPORT_Restart
__LINKINFO_IMPORT_Restart:
	.bss 0
	.export __LINKINFO_IMPORT_memPoolX
__LINKINFO_IMPORT_memPoolX:
	.bss 0
	.export __LINKINFO_IMPORT_memPoolY
__LINKINFO_IMPORT_memPoolY:
	.bss 0
	.export __LINKINFO_IMPORT_SinTest
__LINKINFO_IMPORT_SinTest:
	.bss 0
	.export __LINKINFO_IMPORT_PinLoop
__LINKINFO_IMPORT_PinLoop:
	.bss 0
	.export __LINKINFO_IMPORT_RealSetClockDividers
__LINKINFO_IMPORT_RealSetClockDividers:
	.bss 0
	.export __LINKINFO_IMPORTASM_rx_int
__LINKINFO_IMPORTASM_rx_int:
	.bss 0
	.export __LINKINFO_IMPORT_memPoolI
__LINKINFO_IMPORT_memPoolI:
	.bss 0
	.export __LINKINFO_IMPORTASM_MonitorJumpWithStack
__LINKINFO_IMPORTASM_MonitorJumpWithStack:
	.bss 0
	.export __LINKINFO_IMPORT_RealSleep
__LINKINFO_IMPORT_RealSleep:
	.bss 0
	.export __LINKINFO_IMPORT___mallocy
__LINKINFO_IMPORT___mallocy:
	.bss 0
	.export __LINKINFO_IMPORT___AllocMemAbsXY
__LINKINFO_IMPORT___AllocMemAbsXY:
	.bss 0
	.export __LINKINFO_IMPORT___FreeMemXY
__LINKINFO_IMPORT___FreeMemXY:
	.bss 0
	.export __LINKINFO_IMPORT_NullHook
__LINKINFO_IMPORT_NullHook:
	.bss 0
	.export __LINKINFO_IMPORT_MemTest5x
__LINKINFO_IMPORT_MemTest5x:
	.bss 0
	.export __LINKINFO_IMPORTASM_yrommux0
__LINKINFO_IMPORTASM_yrommux0:
	.bss 0
	.export __LINKINFO_IMPORTASM_irommux0
__LINKINFO_IMPORTASM_irommux0:
	.bss 0
	.export __LINKINFO_IMPORTASM_MonitorJumpLr1Lr0
__LINKINFO_IMPORTASM_MonitorJumpLr1Lr0:
	.bss 0
	.export __LINKINFO_IMPORTASM_MonitorPutch
__LINKINFO_IMPORTASM_MonitorPutch:
	.bss 0
	.export __LINKINFO_IMPORT_TestGetByte
__LINKINFO_IMPORT_TestGetByte:
	.bss 0
	.export __LINKINFO_IMPORT_RealGetClockMultiplier
__LINKINFO_IMPORT_RealGetClockMultiplier:
	.bss 0
	.export __LINKINFO_IMPORT_RealForceClockMultiplier
__LINKINFO_IMPORT_RealForceClockMultiplier:
	.bss 0
	.export __LINKINFO_IMPORT___calloc
__LINKINFO_IMPORT___calloc:
	.bss 0
	.export __LINKINFO_IMPORT_MemTests
__LINKINFO_IMPORT_MemTests:
	.bss 0
	.export __LINKINFO_IMPORT_rommain
__LINKINFO_IMPORT_rommain:
	.bss 0
	.export __LINKINFO_IMPORT_SinTest6dB
__LINKINFO_IMPORT_SinTest6dB:
	.bss 0
	.export __LINKINFO_IMPORTASM_MonitorPutWord
__LINKINFO_IMPORTASM_MonitorPutWord:
	.bss 0
	.export __LINKINFO_IMPORT_BusyWait1
__LINKINFO_IMPORT_BusyWait1:
	.bss 0
	.export __LINKINFO_IMPORT_resx
__LINKINFO_IMPORT_resx:
	.bss 0
	.export __LINKINFO_IMPORT__stackY
__LINKINFO_IMPORT__stackY:
	.bss 0
	.export __LINKINFO_IMPORT_resy
__LINKINFO_IMPORT_resy:
	.bss 0
	.export __LINKINFO_IMPORT_OldStereoCopy
__LINKINFO_IMPORT_OldStereoCopy:
	.bss 0
	.export __LINKINFO_IMPORTASM_Monitor
__LINKINFO_IMPORTASM_Monitor:
	.bss 0
	.export __LINKINFO_IMPORT_RealPowerOff
__LINKINFO_IMPORT_RealPowerOff:
	.bss 0
	.export __LINKINFO_IMPORT___freey
__LINKINFO_IMPORT___freey:
	.bss 0
	.export __LINKINFO_IMPORTASM_OSInit
__LINKINFO_IMPORTASM_OSInit:
	.bss 0
	.export __LINKINFO_IMPORT___free
__LINKINFO_IMPORT___free:
	.bss 0
	.export __LINKINFO_IMPORT___AllocMemAbsX
__LINKINFO_IMPORT___AllocMemAbsX:
	.bss 0
	.export __LINKINFO_IMPORT___AllocMemAbsY
__LINKINFO_IMPORT___AllocMemAbsY:
	.bss 0
	.export __LINKINFO_IMPORT__stack
__LINKINFO_IMPORT__stack:
	.bss 0
	.export __LINKINFO_IMPORT___malloc
__LINKINFO_IMPORT___malloc:
	.bss 0
	.export __LINKINFO_IMPORTASM_MonitorGetWord
__LINKINFO_IMPORTASM_MonitorGetWord:
	.bss 0
	.export __LINKINFO_IMPORTASM_MonitorGetch
__LINKINFO_IMPORTASM_MonitorGetch:
	.bss 0
	.export __LINKINFO_IMPORT_RealSetClockSpeed
__LINKINFO_IMPORT_RealSetClockSpeed:
	.bss 0
	.export __LINKINFO_IMPORT_RealInitClockSpeed
__LINKINFO_IMPORT_RealInitClockSpeed:
	.bss 0
	.export __LINKINFO_IMPORT___ReAllocMemX
__LINKINFO_IMPORT___ReAllocMemX:
	.bss 0
	.export __LINKINFO_IMPORT___AllocMemX
__LINKINFO_IMPORT___AllocMemX:
	.bss 0
	.export __LINKINFO_IMPORT___ReAllocMemY
__LINKINFO_IMPORT___ReAllocMemY:
	.bss 0
	.export __LINKINFO_IMPORT___AllocMemY
__LINKINFO_IMPORT___AllocMemY:
	.bss 0
	.export __LINKINFO_IMPORT_RealAudioOutputSamples
__LINKINFO_IMPORT_RealAudioOutputSamples:
	.bss 0
	.export __LINKINFO_IMPORT_RealSetRate
__LINKINFO_IMPORT_RealSetRate:
	.bss 0
	.export __LINKINFO_IMPORT_RealSetVolume
__LINKINFO_IMPORT_RealSetVolume:
	.bss 0
	.export __LINKINFO_IMPORT___reallocy
__LINKINFO_IMPORT___reallocy:
	.bss 0
	.export __LINKINFO_IMPORT___callocy
__LINKINFO_IMPORT___callocy:
	.bss 0
	.export __LINKINFO_IMPORTASM_xrommux0
__LINKINFO_IMPORTASM_xrommux0:
	.bss 0
	.export __LINKINFO_IMPORTASM_MonitorGetch15
__LINKINFO_IMPORTASM_MonitorGetch15:
	.bss 0
	.export __LINKINFO_IMPORT_USBMem
__LINKINFO_IMPORT_USBMem:
	.bss 0
	.export __LINKINFO_IMPORT_RealSetClockSpeedLimit
__LINKINFO_IMPORT_RealSetClockSpeedLimit:
	.bss 0
	.export __LINKINFO_IMPORT___realloc
__LINKINFO_IMPORT___realloc:
	.bss 0
	.export __LINKINFO_IMPORTASM_dac_int
__LINKINFO_IMPORTASM_dac_int:
	.bss 0
	.export __LINKINFO_IMPORTASM_MonitorRestoreContext
__LINKINFO_IMPORTASM_MonitorRestoreContext:
	.bss 0
	.export __LINKINFO_IMPORT_BusyWait10
__LINKINFO_IMPORT_BusyWait10:
	.bss 0
	.export __LINKINFO_IMPORTASM_MonitorBpTable
__LINKINFO_IMPORTASM_MonitorBpTable:
	.bss 0
	.export __LINKINFO_IMPORTASM_MonitorGetInput
__LINKINFO_IMPORTASM_MonitorGetInput:
	.bss 0
	.export __LINKINFO_IMPORT_GetVS1005Permissions
__LINKINFO_IMPORT_GetVS1005Permissions:
	.bss 0
	.export __LINKINFO_IMPORT_InitMem
__LINKINFO_IMPORT_InitMem:
	.bss 0
	.export __LINKINFO_IMPORT_BootSetKey
__LINKINFO_IMPORT_BootSetKey:
	.bss 0
	.export __LINKINFO_IMPORT_BootSetKeyX
__LINKINFO_IMPORT_BootSetKeyX:
	.bss 0
	.export __LINKINFO_IMPORT_PlayerVolume
__LINKINFO_IMPORT_PlayerVolume:
	.bss 0
	.export __LINKINFO_IMPORT_RawUartPutC
__LINKINFO_IMPORT_RawUartPutC:
	.bss 0
	.export __LINKINFO_IMPORT_RawUartPrintF
__LINKINFO_IMPORT_RawUartPrintF:
	.bss 0
	.export __LINKINFO_IMPORT_rand_seed
__LINKINFO_IMPORT_rand_seed:
	.bss 0
	.export __LINKINFO_IMPORT_random_state
__LINKINFO_IMPORT_random_state:
	.bss 0
	.export __LINKINFO_IMPORT_player
__LINKINFO_IMPORT_player:
	.bss 0
	.export __LINKINFO_IMPORT_ph
__LINKINFO_IMPORT_ph:
	.bss 0
	.export __LINKINFO_IMPORT_map
__LINKINFO_IMPORT_map:
	.bss 0
	.export __LINKINFO_IMPORT_cod
__LINKINFO_IMPORT_cod:
	.bss 0
	.export __LINKINFO_IMPORT_bootrc4ks
__LINKINFO_IMPORT_bootrc4ks:
	.bss 0
	.export __LINKINFO_IMPORT_bootrc4Enabled
__LINKINFO_IMPORT_bootrc4Enabled:
	.bss 0
	.export __LINKINFO_IMPORT_xmem_startzeros
__LINKINFO_IMPORT_xmem_startzeros:
	.bss 0
	.export __LINKINFO_IMPORT_ff
__LINKINFO_IMPORT_ff:
	.bss 0
	.export __LINKINFO_IMPORT_fontPtrs
__LINKINFO_IMPORT_fontPtrs:
	.bss 0
	.export __LINKINFO_IMPORT_fontData
__LINKINFO_IMPORT_fontData:
	.bss 0
	.export __LINKINFO_IMPORT_u16RomFont
__LINKINFO_IMPORT_u16RomFont:
	.bss 0
	.export __LINKINFO_IMPORT___InitMemAllocI
__LINKINFO_IMPORT___InitMemAllocI:
	.bss 0
	.export __LINKINFO_IMPORT_ReadFuseMulti
__LINKINFO_IMPORT_ReadFuseMulti:
	.bss 0
	.export __LINKINFO_IMPORT_SpiSendReceive
__LINKINFO_IMPORT_SpiSendReceive:
	.bss 0
	.export __LINKINFO_IMPORT_RC4_KeySetup
__LINKINFO_IMPORT_RC4_KeySetup:
	.bss 0
	.export __LINKINFO_IMPORT_RC4_KeySetupPacked
__LINKINFO_IMPORT_RC4_KeySetupPacked:
	.bss 0
	.export __LINKINFO_IMPORT_volumeReg
__LINKINFO_IMPORT_volumeReg:
	.bss 0
	.export __LINKINFO_IMPORT_libInclude
__LINKINFO_IMPORT_libInclude:
	.bss 0
	.export __LINKINFO_IMPORT_uartByteSpeed
__LINKINFO_IMPORT_uartByteSpeed:
	.bss 0
	.export __LINKINFO_IMPORT_memcpyii
__LINKINFO_IMPORT_memcpyii:
	.bss 0
	.export __LINKINFO_IMPORT_kernelVectorsStart
__LINKINFO_IMPORT_kernelVectorsStart:
	.bss 0
	.export __LINKINFO_IMPORT_os_if_vars_start
__LINKINFO_IMPORT_os_if_vars_start:
	.bss 0
	.export __LINKINFO_IMPORT_memcpy
__LINKINFO_IMPORT_memcpy:
	.bss 0
	.export __LINKINFO_IMPORT_oldExtClock4KHz
__LINKINFO_IMPORT_oldExtClock4KHz:
	.bss 0
	.export __LINKINFO_IMPORT_coreVoltageOffset
__LINKINFO_IMPORT_coreVoltageOffset:
	.bss 0
	.export __LINKINFO_IMPORT_extSymbolSearchRom
__LINKINFO_IMPORT_extSymbolSearchRom:
	.bss 0
	.export __LINKINFO_IMPORT_extSymbolElements
__LINKINFO_IMPORT_extSymbolElements:
	.bss 0
	.export __LINKINFO_IMPORT_extSymbol
__LINKINFO_IMPORT_extSymbol:
	.bss 0
	.export __LINKINFO_IMPORT_memsetY
__LINKINFO_IMPORT_memsetY:
	.bss 0
	.export __LINKINFO_IMPORT_memset
__LINKINFO_IMPORT_memset:
	.bss 0
	.export __LINKINFO_IMPORT_memcpyYX
__LINKINFO_IMPORT_memcpyYX:
	.bss 0
	.export __LINKINFO_IMPORT_voltages
__LINKINFO_IMPORT_voltages:
	.bss 0
	.export __LINKINFO_IMPORT_PowerSetVoltages
__LINKINFO_IMPORT_PowerSetVoltages:
	.bss 0
	.export __LINKINFO_IMPORT_applAddr
__LINKINFO_IMPORT_applAddr:
	.bss 0
	.export __LINKINFO_IMPORT_bassReg
__LINKINFO_IMPORT_bassReg:
	.bss 0
	.export __LINKINFO_IMPORT_CalcFuseCRC
__LINKINFO_IMPORT_CalcFuseCRC:
	.bss 0
	.export __LINKINFO_IMPORT_ReadFusePriv
__LINKINFO_IMPORT_ReadFusePriv:
	.bss 0
	.export __LINKINFO_IMPORT_PowerSetFlash
__LINKINFO_IMPORT_PowerSetFlash:
	.bss 0
	.export __LINKINFO_IMPORT_SpiLoadLong
__LINKINFO_IMPORT_SpiLoadLong:
	.bss 0
	.export __LINKINFO_IMPORT_TEST_WriteIFlashOpenRecord
__LINKINFO_IMPORT_TEST_WriteIFlashOpenRecord:
	.bss 0
	.export __LINKINFO_IMPORT_TEST_ClearRamAndAllowDebug
__LINKINFO_IMPORT_TEST_ClearRamAndAllowDebug:
	.bss 0
	.export __LINKINFO_IMPORT_PowerShutDownFlash
__LINKINFO_IMPORT_PowerShutDownFlash:
	.bss 0
	.export __LINKINFO_IMPORT_TestMode
__LINKINFO_IMPORT_TestMode:
	.bss 0
	.export __LINKINFO_IMPORT_FsPhNandCreate
__LINKINFO_IMPORT_FsPhNandCreate:
	.bss 0
	.export __LINKINFO_IMPORT_BootFromX
__LINKINFO_IMPORT_BootFromX:
	.bss 0
	.export __LINKINFO_IMPORT_ReadIMem
__LINKINFO_IMPORT_ReadIMem:
	.bss 0
	.export __LINKINFO_IMPORT_InitAudio
__LINKINFO_IMPORT_InitAudio:
	.bss 0
	.export __LINKINFO_IMPORT_TimeCountAndScheduleHandler
__LINKINFO_IMPORT_TimeCountAndScheduleHandler:
	.bss 0
	.export __LINKINFO_IMPORT_AddIntServer
__LINKINFO_IMPORT_AddIntServer:
	.bss 0
	.export __LINKINFO_IMPORT_Enable
__LINKINFO_IMPORT_Enable:
	.bss 0
	.export __LINKINFO_IMPORT_neededConfiguration
__LINKINFO_IMPORT_neededConfiguration:
	.bss 0
	.export __LINKINFO_IMPORT_loadLibraryMutex
__LINKINFO_IMPORT_loadLibraryMutex:
	.bss 0
	.export __LINKINFO_IMPORT_InitMutexN
__LINKINFO_IMPORT_InitMutexN:
	.bss 0
	.export __LINKINFO_IMPORT_highestISoFar
__LINKINFO_IMPORT_highestISoFar:
	.bss 0
	.export __LINKINFO_IMPORT_InitStdButtons
__LINKINFO_IMPORT_InitStdButtons:
	.bss 0
	.export __LINKINFO_IMPORT_SysUiMsgInit
__LINKINFO_IMPORT_SysUiMsgInit:
	.bss 0
	.export __LINKINFO_IMPORT_kernel_main
__LINKINFO_IMPORT_kernel_main:
	.bss 0
	.export __LINKINFO_IMPORT_UsbBootLoopNoReturn
__LINKINFO_IMPORT_UsbBootLoopNoReturn:
	.bss 0
	.export __LINKINFO_IMPORT_TEST_ClearIFlash
__LINKINFO_IMPORT_TEST_ClearIFlash:
	.bss 0
	.export __LINKINFO_IMPORT_TEST_ProductionTest
__LINKINFO_IMPORT_TEST_ProductionTest:
	.bss 0
	.export __LINKINFO_IMPORT_extSymbolRom
__LINKINFO_IMPORT_extSymbolRom:
	.bss 0
	.export __LINKINFO_IMPORT_extSymbolRomSize
__LINKINFO_IMPORT_extSymbolRomSize:
	.bss 0
	.export __LINKINFO_IMPORT_i_twiddle_iv
__LINKINFO_IMPORT_i_twiddle_iv:
	.bss 0
	.export __LINKINFO_IMPORT_dctfirmodtab8
__LINKINFO_IMPORT_dctfirmodtab8:
	.bss 0
	.export __LINKINFO_IMPORT_dctiv
__LINKINFO_IMPORT_dctiv:
	.bss 0
	.export __LINKINFO_IMPORT_dctii
__LINKINFO_IMPORT_dctii:
	.bss 0
	.export __LINKINFO_IMPORT_costable_iv8
__LINKINFO_IMPORT_costable_iv8:
	.bss 0
	.export __LINKINFO_IMPORT_dct
__LINKINFO_IMPORT_dct:
	.bss 0
	.export __LINKINFO_IMPORT_dcttype
__LINKINFO_IMPORT_dcttype:
	.bss 0
	.export __LINKINFO_IMPORT_costable_ii8
__LINKINFO_IMPORT_costable_ii8:
	.bss 0
	.export __LINKINFO_IMPORT_dctfir8
__LINKINFO_IMPORT_dctfir8:
	.bss 0
	.export __LINKINFO_IMPORT_dctivpost
__LINKINFO_IMPORT_dctivpost:
	.bss 0
	.export __LINKINFO_IMPORT_isupper
__LINKINFO_IMPORT_isupper:
	.bss 0
	.export __LINKINFO_IMPORTASM_short_to_df
__LINKINFO_IMPORTASM_short_to_df:
	.bss 0
	.export __LINKINFO_IMPORT_PrintFmtAdd
__LINKINFO_IMPORT_PrintFmtAdd:
	.bss 0
	.export __LINKINFO_IMPORTASM_df_mul
__LINKINFO_IMPORTASM_df_mul:
	.bss 0
	.export __LINKINFO_IMPORTASM_df_div
__LINKINFO_IMPORTASM_df_div:
	.bss 0
	.export __LINKINFO_IMPORTASM_df_add
__LINKINFO_IMPORTASM_df_add:
	.bss 0
	.export __LINKINFO_IMPORTASM_df_sub
__LINKINFO_IMPORTASM_df_sub:
	.bss 0
	.export __LINKINFO_IMPORT_strlen
__LINKINFO_IMPORT_strlen:
	.bss 0
	.export __LINKINFO_IMPORT__modf
__LINKINFO_IMPORT__modf:
	.bss 0
	.export __LINKINFO_IMPORTASM_df_to_short
__LINKINFO_IMPORTASM_df_to_short:
	.bss 0
	.export __LINKINFO_IMPORTASM_df_lt
__LINKINFO_IMPORTASM_df_lt:
	.bss 0
	.export __LINKINFO_IMPORTASM_df_ge
__LINKINFO_IMPORTASM_df_ge:
	.bss 0
	.export __LINKINFO_IMPORT_tolower
__LINKINFO_IMPORT_tolower:
	.bss 0
	.export __LINKINFO_IMPORTASM_divide32unsigned
__LINKINFO_IMPORTASM_divide32unsigned:
	.bss 0
	.export __LINKINFO_IMPORT_memcpyXX
__LINKINFO_IMPORT_memcpyXX:
	.bss 0
	.export __LINKINFO_IMPORT_ispunct
__LINKINFO_IMPORT_ispunct:
	.bss 0
	.export __LINKINFO_IMPORT_toupper
__LINKINFO_IMPORT_toupper:
	.bss 0
	.export __LINKINFO_IMPORT_isgraph
__LINKINFO_IMPORT_isgraph:
	.bss 0
	.export __LINKINFO_IMPORT_isdigit
__LINKINFO_IMPORT_isdigit:
	.bss 0
	.export __LINKINFO_IMPORT_isalpha
__LINKINFO_IMPORT_isalpha:
	.bss 0
	.export __LINKINFO_IMPORT_isalnum
__LINKINFO_IMPORT_isalnum:
	.bss 0
	.export __LINKINFO_IMPORT_isxdigit
__LINKINFO_IMPORT_isxdigit:
	.bss 0
	.export __LINKINFO_IMPORT_isspace
__LINKINFO_IMPORT_isspace:
	.bss 0
	.export __LINKINFO_IMPORT_iscntrl
__LINKINFO_IMPORT_iscntrl:
	.bss 0
	.export __LINKINFO_IMPORT_isprint
__LINKINFO_IMPORT_isprint:
	.bss 0
	.export __LINKINFO_IMPORT_islower
__LINKINFO_IMPORT_islower:
	.bss 0
	.export __LINKINFO_IMPORTASM_int_to_df
__LINKINFO_IMPORTASM_int_to_df:
	.bss 0
	.export __LINKINFO_IMPORTASM_df_norm
__LINKINFO_IMPORTASM_df_norm:
	.bss 0
	.export __LINKINFO_IMPORT_intStub
__LINKINFO_IMPORT_intStub:
	.bss 0
	.export __LINKINFO_IMPORT_readyQueue
__LINKINFO_IMPORT_readyQueue:
	.bss 0
	.export __LINKINFO_IMPORT_NewList
__LINKINFO_IMPORT_NewList:
	.bss 0
	.export __LINKINFO_IMPORT_useQuantum
__LINKINFO_IMPORT_useQuantum:
	.bss 0
	.export __LINKINFO_IMPORT_quantum
__LINKINFO_IMPORT_quantum:
	.bss 0
	.export __LINKINFO_IMPORT_Halt
__LINKINFO_IMPORT_Halt:
	.bss 0
	.export __LINKINFO_IMPORT_intVectors
__LINKINFO_IMPORT_intVectors:
	.bss 0
	.export __LINKINFO_IMPORT_SetSignal
__LINKINFO_IMPORT_SetSignal:
	.bss 0
	.export __LINKINFO_IMPORT_timerQueue
__LINKINFO_IMPORT_timerQueue:
	.bss 0
	.export __LINKINFO_IMPORT_waitQueue
__LINKINFO_IMPORT_waitQueue:
	.bss 0
	.export __LINKINFO_IMPORT_Enqueue
__LINKINFO_IMPORT_Enqueue:
	.bss 0
	.export __LINKINFO_IMPORT_ScheduleHandler
__LINKINFO_IMPORT_ScheduleHandler:
	.bss 0
	.export __LINKINFO_IMPORT_mainTask
__LINKINFO_IMPORT_mainTask:
	.bss 0
	.export __LINKINFO_IMPORT_AddTask
__LINKINFO_IMPORT_AddTask:
	.bss 0
	.export __LINKINFO_IMPORT_Disable
__LINKINFO_IMPORT_Disable:
	.bss 0
	.export __LINKINFO_IMPORT_forbidCount
__LINKINFO_IMPORT_forbidCount:
	.bss 0
	.export __LINKINFO_IMPORT_scheduleFlag
__LINKINFO_IMPORT_scheduleFlag:
	.bss 0
	.export __LINKINFO_IMPORT___endStack
__LINKINFO_IMPORT___endStack:
	.bss 0
	.export __LINKINFO_IMPORT___intStack
__LINKINFO_IMPORT___intStack:
	.bss 0
	.export __LINKINFO_IMPORT___curStack
__LINKINFO_IMPORT___curStack:
	.bss 0
	.export __LINKINFO_IMPORT_thisTask
__LINKINFO_IMPORT_thisTask:
	.bss 0
	.export __LINKINFO_IMPORT_Expunge
__LINKINFO_IMPORT_Expunge:
	.bss 0
	.export __LINKINFO_IMPORT_HandleTimers
__LINKINFO_IMPORT_HandleTimers:
	.bss 0
	.export __LINKINFO_IMPORT_SetupInterruptStackSize
__LINKINFO_IMPORT_SetupInterruptStackSize:
	.bss 0
	.export __LINKINFO_IMPORT_SetupMainStackSize
__LINKINFO_IMPORT_SetupMainStackSize:
	.bss 0
	.export __LINKINFO_IMPORTASM_CheckWait
__LINKINFO_IMPORTASM_CheckWait:
	.bss 0
	.export __LINKINFO_IMPORT_Signal
__LINKINFO_IMPORT_Signal:
	.bss 0
	.export __LINKINFO_IMPORTASM_IntQuickLeave
__LINKINFO_IMPORTASM_IntQuickLeave:
	.bss 0
	.export __LINKINFO_IMPORTASM_WaitAgain
__LINKINFO_IMPORTASM_WaitAgain:
	.bss 0
	.export __LINKINFO_IMPORT_DoSchedule
__LINKINFO_IMPORT_DoSchedule:
	.bss 0
	.export __LINKINFO_IMPORT_freetaskmem
__LINKINFO_IMPORT_freetaskmem:
	.bss 0
	.export __LINKINFO_IMPORTASM_SearchForTask
__LINKINFO_IMPORTASM_SearchForTask:
	.bss 0
	.export __LINKINFO_IMPORT_Wait
__LINKINFO_IMPORT_Wait:
	.bss 0
	.export __LINKINFO_IMPORT_AddHead
__LINKINFO_IMPORT_AddHead:
	.bss 0
	.export __LINKINFO_IMPORT_xFlist
__LINKINFO_IMPORT_xFlist:
	.bss 0
	.export __LINKINFO_IMPORT_HeadNode
__LINKINFO_IMPORT_HeadNode:
	.bss 0
	.export __LINKINFO_IMPORT_NextNode
__LINKINFO_IMPORT_NextNode:
	.bss 0
	.export __LINKINFO_IMPORT_RemNode
__LINKINFO_IMPORT_RemNode:
	.bss 0
	.export __LINKINFO_IMPORT_AddAfter
__LINKINFO_IMPORT_AddAfter:
	.bss 0
	.export __LINKINFO_IMPORT_AddBefore
__LINKINFO_IMPORT_AddBefore:
	.bss 0
	.export __LINKINFO_IMPORT_AddTail
__LINKINFO_IMPORT_AddTail:
	.bss 0
	.export __LINKINFO_IMPORT_HeadNodeY
__LINKINFO_IMPORT_HeadNodeY:
	.bss 0
	.export __LINKINFO_IMPORT_yFlist
__LINKINFO_IMPORT_yFlist:
	.bss 0
	.export __LINKINFO_IMPORT_NextNodeY
__LINKINFO_IMPORT_NextNodeY:
	.bss 0
	.export __LINKINFO_IMPORT_RemNodeY
__LINKINFO_IMPORT_RemNodeY:
	.bss 0
	.export __LINKINFO_IMPORT_AddAfterY
__LINKINFO_IMPORT_AddAfterY:
	.bss 0
	.export __LINKINFO_IMPORT_memcpyYY
__LINKINFO_IMPORT_memcpyYY:
	.bss 0
	.export __LINKINFO_IMPORT_AddBeforeY
__LINKINFO_IMPORT_AddBeforeY:
	.bss 0
	.export __LINKINFO_IMPORT_AddTailY
__LINKINFO_IMPORT_AddTailY:
	.bss 0
	.export __LINKINFO_IMPORT_sysMemory_xs
__LINKINFO_IMPORT_sysMemory_xs:
	.bss 0
	.export __LINKINFO_IMPORT_sysMemory_ys
__LINKINFO_IMPORT_sysMemory_ys:
	.bss 0
	.export __LINKINFO_IMPORT_NewListY
__LINKINFO_IMPORT_NewListY:
	.bss 0
	.export __LINKINFO_IMPORT_AddHeadY
__LINKINFO_IMPORT_AddHeadY:
	.bss 0
	.export __LINKINFO_IMPORT___AllocMemI
__LINKINFO_IMPORT___AllocMemI:
	.bss 0
	.export __LINKINFO_IMPORT___AllocMemAbsI
__LINKINFO_IMPORT___AllocMemAbsI:
	.bss 0
	.export __LINKINFO_IMPORT___FreeMemI
__LINKINFO_IMPORT___FreeMemI:
	.bss 0
	.export __LINKINFO_IMPORT_sysMemory_is
__LINKINFO_IMPORT_sysMemory_is:
	.bss 0
	.export __LINKINFO_IMPORT_NewListI
__LINKINFO_IMPORT_NewListI:
	.bss 0
	.export __LINKINFO_IMPORT_SetSizeNodeI
__LINKINFO_IMPORT_SetSizeNodeI:
	.bss 0
	.export __LINKINFO_IMPORT_AddHeadI
__LINKINFO_IMPORT_AddHeadI:
	.bss 0
	.export __LINKINFO_IMPORT_HeadNodeI
__LINKINFO_IMPORT_HeadNodeI:
	.bss 0
	.export __LINKINFO_IMPORT_GetSizeNodeI
__LINKINFO_IMPORT_GetSizeNodeI:
	.bss 0
	.export __LINKINFO_IMPORT_RemNodeI
__LINKINFO_IMPORT_RemNodeI:
	.bss 0
	.export __LINKINFO_IMPORT_NextNodeI
__LINKINFO_IMPORT_NextNodeI:
	.bss 0
	.export __LINKINFO_IMPORT_AddAfterI
__LINKINFO_IMPORT_AddAfterI:
	.bss 0
	.export __LINKINFO_IMPORT_AddBeforeI
__LINKINFO_IMPORT_AddBeforeI:
	.bss 0
	.export __LINKINFO_IMPORT_AddTailI
__LINKINFO_IMPORT_AddTailI:
	.bss 0
	.export __LINKINFO_IMPORT_AddTimer
__LINKINFO_IMPORT_AddTimer:
	.bss 0
	.export __LINKINFO_IMPORT_RemoveTimer
__LINKINFO_IMPORT_RemoveTimer:
	.bss 0
	.export __LINKINFO_IMPORT_InitTimer
__LINKINFO_IMPORT_InitTimer:
	.bss 0
	.export __LINKINFO_IMPORT_StartTimer
__LINKINFO_IMPORT_StartTimer:
	.bss 0
	.export __LINKINFO_IMPORT_StopTimer
__LINKINFO_IMPORT_StopTimer:
	.bss 0
	.export __LINKINFO_IMPORT_TailNode
__LINKINFO_IMPORT_TailNode:
	.bss 0
	.export __LINKINFO_IMPORT_RemHead
__LINKINFO_IMPORT_RemHead:
	.bss 0
	.export __LINKINFO_IMPORT_Remove
__LINKINFO_IMPORT_Remove:
	.bss 0
	.export __LINKINFO_IMPORT_PrevNode
__LINKINFO_IMPORT_PrevNode:
	.bss 0
	.export __LINKINFO_IMPORT_RemTail
__LINKINFO_IMPORT_RemTail:
	.bss 0
	.export __LINKINFO_IMPORT_SetTaskPri
__LINKINFO_IMPORT_SetTaskPri:
	.bss 0
	.export __LINKINFO_IMPORT_FindTask
__LINKINFO_IMPORT_FindTask:
	.bss 0
	.export __LINKINFO_IMPORT_RemoveY
__LINKINFO_IMPORT_RemoveY:
	.bss 0
	.export __LINKINFO_IMPORT_RemTailY
__LINKINFO_IMPORT_RemTailY:
	.bss 0
	.export __LINKINFO_IMPORT_PrevNodeY
__LINKINFO_IMPORT_PrevNodeY:
	.bss 0
	.export __LINKINFO_IMPORT_TailNodeY
__LINKINFO_IMPORT_TailNodeY:
	.bss 0
	.export __LINKINFO_IMPORT_RemHeadY
__LINKINFO_IMPORT_RemHeadY:
	.bss 0
	.export __LINKINFO_IMPORT_EnqueueY
__LINKINFO_IMPORT_EnqueueY:
	.bss 0
	.export __LINKINFO_IMPORT_PrevNodeI
__LINKINFO_IMPORT_PrevNodeI:
	.bss 0
	.export __LINKINFO_IMPORT_TailNodeI
__LINKINFO_IMPORT_TailNodeI:
	.bss 0
	.export __LINKINFO_IMPORT_RemHeadI
__LINKINFO_IMPORT_RemHeadI:
	.bss 0
	.export __LINKINFO_IMPORT_RemoveI
__LINKINFO_IMPORT_RemoveI:
	.bss 0
	.export __LINKINFO_IMPORT_RemTailI
__LINKINFO_IMPORT_RemTailI:
	.bss 0
	.export __LINKINFO_IMPORT_WriteIMem16
__LINKINFO_IMPORT_WriteIMem16:
	.bss 0
	.export __LINKINFO_IMPORT_WriteIMem
__LINKINFO_IMPORT_WriteIMem:
	.bss 0
	.export __LINKINFO_IMPORT_WriteIMem16Swapped
__LINKINFO_IMPORT_WriteIMem16Swapped:
	.bss 0
	.export __LINKINFO_IMPORT_WriteIMemSwapped
__LINKINFO_IMPORT_WriteIMemSwapped:
	.bss 0
	.export __LINKINFO_IMPORT_getword
__LINKINFO_IMPORT_getword:
	.bss 0
	.export __LINKINFO_IMPORT_putch
__LINKINFO_IMPORT_putch:
	.bss 0
	.export __LINKINFO_IMPORT_getch
__LINKINFO_IMPORT_getch:
	.bss 0
	.export __LINKINFO_IMPORT_putword
__LINKINFO_IMPORT_putword:
	.bss 0
	.export __LINKINFO_IMPORT_Monitor
__LINKINFO_IMPORT_Monitor:
	.bss 0
	.export __LINKINFO_IMPORT_audioBuffer
__LINKINFO_IMPORT_audioBuffer:
	.bss 0
	.export __LINKINFO_IMPORT_DB12
__LINKINFO_IMPORT_DB12:
	.bss 0
	.export __LINKINFO_IMPORT_timeCount
__LINKINFO_IMPORT_timeCount:
	.bss 0
	.export __LINKINFO_IMPORT_AudioBufFree
__LINKINFO_IMPORT_AudioBufFree:
	.bss 0
	.export __LINKINFO_IMPORTASM_divide16signed
__LINKINFO_IMPORTASM_divide16signed:
	.bss 0
	.export __LINKINFO_IMPORT_AudioBufFill
__LINKINFO_IMPORT_AudioBufFill:
	.bss 0
	.export __LINKINFO_IMPORT_audioPtr
__LINKINFO_IMPORT_audioPtr:
	.bss 0
	.export __LINKINFO_IMPORT_dB
__LINKINFO_IMPORT_dB:
	.bss 0
	.export __LINKINFO_IMPORT_ISine
__LINKINFO_IMPORT_ISine:
	.bss 0
	.export __LINKINFO_IMPORT_SinTestCore
__LINKINFO_IMPORT_SinTestCore:
	.bss 0
	.export __LINKINFO_IMPORT_OldSinTest
__LINKINFO_IMPORT_OldSinTest:
	.bss 0
	.export __LINKINFO_IMPORT_UpdateMp3Crc
__LINKINFO_IMPORT_UpdateMp3Crc:
	.bss 0
	.export __LINKINFO_IMPORT_mp3CrcTable
__LINKINFO_IMPORT_mp3CrcTable:
	.bss 0
	.export __LINKINFO_IMPORT_shortSin1k
__LINKINFO_IMPORT_shortSin1k:
	.bss 0
	.export __LINKINFO_IMPORT_tmpBuf
__LINKINFO_IMPORT_tmpBuf:
	.bss 0
	.export __LINKINFO_IMPORT_oldClockX
__LINKINFO_IMPORT_oldClockX:
	.bss 0
	.export __LINKINFO_IMPORT_OldSetRate
__LINKINFO_IMPORT_OldSetRate:
	.bss 0
	.export __LINKINFO_IMPORT_timeToRemovePDown2
__LINKINFO_IMPORT_timeToRemovePDown2:
	.bss 0
	.export __LINKINFO_IMPORT_MuxTest
__LINKINFO_IMPORT_MuxTest:
	.bss 0
	.export __LINKINFO_IMPORT_YRomTest
__LINKINFO_IMPORT_YRomTest:
	.bss 0
	.export __LINKINFO_IMPORT_XRomTest
__LINKINFO_IMPORT_XRomTest:
	.bss 0
	.export __LINKINFO_IMPORT_IRomTest
__LINKINFO_IMPORT_IRomTest:
	.bss 0
	.export __LINKINFO_IMPORT_YRamTest
__LINKINFO_IMPORT_YRamTest:
	.bss 0
	.export __LINKINFO_IMPORT_XRamTest
__LINKINFO_IMPORT_XRamTest:
	.bss 0
	.export __LINKINFO_IMPORT_IRamTest
__LINKINFO_IMPORT_IRamTest:
	.bss 0
	.export __LINKINFO_IMPORT_UartDivider
__LINKINFO_IMPORT_UartDivider:
	.bss 0
	.export __LINKINFO_IMPORT_oldOldClock4KHz
__LINKINFO_IMPORT_oldOldClock4KHz:
	.bss 0
	.export __LINKINFO_IMPORT_curFctl
__LINKINFO_IMPORT_curFctl:
	.bss 0
	.export __LINKINFO_IMPORT_hwSampleRate
__LINKINFO_IMPORT_hwSampleRate:
	.bss 0
	.export __LINKINFO_IMPORT_uiTime
__LINKINFO_IMPORT_uiTime:
	.bss 0
	.export __LINKINFO_IMPORT_uiTrigger
__LINKINFO_IMPORT_uiTrigger:
	.bss 0
	.export __LINKINFO_IMPORT_haltTime
__LINKINFO_IMPORT_haltTime:
	.bss 0
	.export __LINKINFO_IMPORT_bassOn
__LINKINFO_IMPORT_bassOn:
	.bss 0
	.export __LINKINFO_IMPORT_trebleOn
__LINKINFO_IMPORT_trebleOn:
	.bss 0
	.export __LINKINFO_IMPORT_uiCount
__LINKINFO_IMPORT_uiCount:
	.bss 0
	.export __LINKINFO_IMPORT_bassTrebleSampleRate
__LINKINFO_IMPORT_bassTrebleSampleRate:
	.bss 0
	.export __LINKINFO_IMPORT_bassTrebleReg
__LINKINFO_IMPORT_bassTrebleReg:
	.bss 0
	.export __LINKINFO_IMPORT_uartDivs
__LINKINFO_IMPORT_uartDivs:
	.bss 0
	.export __LINKINFO_IMPORT_z
__LINKINFO_IMPORT_z:
	.bss 0
	.export __LINKINFO_IMPORT_clockSpeed
__LINKINFO_IMPORT_clockSpeed:
	.bss 0
	.export __LINKINFO_IMPORTASM_fr_div32
__LINKINFO_IMPORTASM_fr_div32:
	.bss 0
	.export __LINKINFO_IMPORTASM_shiftMultipliers
__LINKINFO_IMPORTASM_shiftMultipliers:
	.bss 0
	.export __LINKINFO_IMPORT_SetBass
__LINKINFO_IMPORT_SetBass:
	.bss 0
	.export __LINKINFO_IMPORT_SetTreble
__LINKINFO_IMPORT_SetTreble:
	.bss 0
	.export __LINKINFO_IMPORT_Bass
__LINKINFO_IMPORT_Bass:
	.bss 0
	.export __LINKINFO_IMPORT_Treble
__LINKINFO_IMPORT_Treble:
	.bss 0
	.export __LINKINFO_IMPORT_PowerMillivoltsToReg
__LINKINFO_IMPORT_PowerMillivoltsToReg:
	.bss 0
	.export __LINKINFO_IMPORT_PowerRegToMillivolts
__LINKINFO_IMPORT_PowerRegToMillivolts:
	.bss 0
	.export __LINKINFO_IMPORT_powerConvTab
__LINKINFO_IMPORT_powerConvTab:
	.bss 0
	.export __LINKINFO_IMPORT_CheckRFLock
__LINKINFO_IMPORT_CheckRFLock:
	.bss 0
	.export __LINKINFO_IMPORT_FindVCOLock
__LINKINFO_IMPORT_FindVCOLock:
	.bss 0
	.export __LINKINFO_IMPORT_CalcClockSpeed
__LINKINFO_IMPORT_CalcClockSpeed:
	.bss 0
	.export __LINKINFO_IMPORT_BusyDelay4x
__LINKINFO_IMPORT_BusyDelay4x:
	.bss 0
	.export __LINKINFO_IMPORT_PrivSpiSendReceive
__LINKINFO_IMPORT_PrivSpiSendReceive:
	.bss 0
	.export __LINKINFO_IMPORTASM_up_GetValue
__LINKINFO_IMPORTASM_up_GetValue:
	.bss 0
	.export __LINKINFO_IMPORTASM_literal
__LINKINFO_IMPORTASM_literal:
	.bss 0
	.export __LINKINFO_IMPORTASM_spiexec
__LINKINFO_IMPORTASM_spiexec:
	.bss 0
	.export __LINKINFO_IMPORTASM_newesc
__LINKINFO_IMPORTASM_newesc:
	.bss 0
	.export __LINKINFO_IMPORTASM_long
__LINKINFO_IMPORTASM_long:
	.bss 0
	.export __LINKINFO_IMPORTASM_GetPutChIH
__LINKINFO_IMPORTASM_GetPutChIH:
	.bss 0
	.export __LINKINFO_IMPORT_RC4_Output
__LINKINFO_IMPORT_RC4_Output:
	.bss 0
	.export __LINKINFO_IMPORTASM_up_GetBits
__LINKINFO_IMPORTASM_up_GetBits:
	.bss 0
	.export __LINKINFO_IMPORTASM_Lwhile
__LINKINFO_IMPORTASM_Lwhile:
	.bss 0
	.export __LINKINFO_IMPORT_SpiLoad
__LINKINFO_IMPORT_SpiLoad:
	.bss 0
	.export __LINKINFO_IMPORT_SpiDelay
__LINKINFO_IMPORT_SpiDelay:
	.bss 0
	.export __LINKINFO_IMPORTASM_lz77
__LINKINFO_IMPORTASM_lz77:
	.bss 0
	.export __LINKINFO_IMPORT_SpiReceiveWord
__LINKINFO_IMPORT_SpiReceiveWord:
	.bss 0
	.export __LINKINFO_IMPORTASM_up_GetByte
__LINKINFO_IMPORTASM_up_GetByte:
	.bss 0
	.export __LINKINFO_IMPORTASM_GetPutChI
__LINKINFO_IMPORTASM_GetPutChI:
	.bss 0
	.export __LINKINFO_IMPORTASM_UnPack
__LINKINFO_IMPORTASM_UnPack:
	.bss 0
	.export __LINKINFO_IMPORTASM_spiy
__LINKINFO_IMPORTASM_spiy:
	.bss 0
	.export __LINKINFO_IMPORTASM_GetPutChX
__LINKINFO_IMPORTASM_GetPutChX:
	.bss 0
	.export __LINKINFO_IMPORTASM_GetPutChY
__LINKINFO_IMPORTASM_GetPutChY:
	.bss 0
	.export __LINKINFO_IMPORT_vo_files
__LINKINFO_IMPORT_vo_files:
	.bss 0
	.export __LINKINFO_IMPORT_consoleFile
__LINKINFO_IMPORT_consoleFile:
	.bss 0
	.export __LINKINFO_IMPORT_vo_get_time_from_rtc_hook
__LINKINFO_IMPORT_vo_get_time_from_rtc_hook:
	.bss 0
	.export __LINKINFO_IMPORT_FatFileSystem
__LINKINFO_IMPORT_FatFileSystem:
	.bss 0
	.export __LINKINFO_IMPORT_AutoVoidNull
__LINKINFO_IMPORT_AutoVoidNull:
	.bss 0
	.export __LINKINFO_IMPORT_encVFloorInv
__LINKINFO_IMPORT_encVFloorInv:
	.bss 0
	.export __LINKINFO_IMPORT_EncMInitDct
__LINKINFO_IMPORT_EncMInitDct:
	.bss 0
	.export __LINKINFO_IMPORT_winPtr
__LINKINFO_IMPORT_winPtr:
	.bss 0
	.export __LINKINFO_IMPORT_hcb_sf
__LINKINFO_IMPORT_hcb_sf:
	.bss 0
	.export __LINKINFO_IMPORT_EncMHuff4
__LINKINFO_IMPORT_EncMHuff4:
	.bss 0
	.export __LINKINFO_IMPORT_lpcsin
__LINKINFO_IMPORT_lpcsin:
	.bss 0
	.export __LINKINFO_IMPORT_evAudioMode
__LINKINFO_IMPORT_evAudioMode:
	.bss 0
	.export __LINKINFO_IMPORT_strncmp
__LINKINFO_IMPORT_strncmp:
	.bss 0
	.export __LINKINFO_IMPORT_ISqrt
__LINKINFO_IMPORT_ISqrt:
	.bss 0
	.export __LINKINFO_IMPORT_srandom
__LINKINFO_IMPORT_srandom:
	.bss 0
	.export __LINKINFO_IMPORT_random
__LINKINFO_IMPORT_random:
	.bss 0
	.export __LINKINFO_IMPORT_LongLog2
__LINKINFO_IMPORT_LongLog2:
	.bss 0
	.export __LINKINFO_IMPORT_font16aptrs
__LINKINFO_IMPORT_font16aptrs:
	.bss 0
	.export __LINKINFO_IMPORT_rand
__LINKINFO_IMPORT_rand:
	.bss 0
	.export __LINKINFO_IMPORT_FileParamSeek
__LINKINFO_IMPORT_FileParamSeek:
	.bss 0
	.export __LINKINFO_IMPORT_memcpyXY
__LINKINFO_IMPORT_memcpyXY:
	.bss 0
	.export __LINKINFO_IMPORTASM_divide32signed
__LINKINFO_IMPORTASM_divide32signed:
	.bss 0
	.export __LINKINFO_IMPORTASM_divide16unsigned
__LINKINFO_IMPORTASM_divide16unsigned:
	.bss 0
	.export __LINKINFO_IMPORT_HuffmanMask
__LINKINFO_IMPORT_HuffmanMask:
	.bss 0
	.export __LINKINFO_IMPORT_srand
__LINKINFO_IMPORT_srand:
	.bss 0
	.export __LINKINFO_IMPORT_memcmp
__LINKINFO_IMPORT_memcmp:
	.bss 0
	.export __LINKINFO_IMPORT_SymbolCalcCrc32String
__LINKINFO_IMPORT_SymbolCalcCrc32String:
	.bss 0
	.export __LINKINFO_IMPORT_SymbolCrunchStringCalcCrc32
__LINKINFO_IMPORT_SymbolCrunchStringCalcCrc32:
	.bss 0
	.export __LINKINFO_IMPORT_SymbolFindByCrc
__LINKINFO_IMPORT_SymbolFindByCrc:
	.bss 0
	.export __LINKINFO_IMPORT_SymbolFindRomByCrc
__LINKINFO_IMPORT_SymbolFindRomByCrc:
	.bss 0
	.export __LINKINFO_IMPORT_SymbolDelete
__LINKINFO_IMPORT_SymbolDelete:
	.bss 0
	.export __LINKINFO_IMPORT_SymbolDeleteLib
__LINKINFO_IMPORT_SymbolDeleteLib:
	.bss 0
	.export __LINKINFO_IMPORT_encVOggCrc
__LINKINFO_IMPORT_encVOggCrc:
	.bss 0
	.export __LINKINFO_IMPORT_crc6ToChar
__LINKINFO_IMPORT_crc6ToChar:
	.bss 0
	.export __LINKINFO_IMPORT_strncpy
__LINKINFO_IMPORT_strncpy:
	.bss 0
	.export __LINKINFO_IMPORT_Sine32I
__LINKINFO_IMPORT_Sine32I:
	.bss 0
	.export __LINKINFO_IMPORT_SpiWaitStatus
__LINKINFO_IMPORT_SpiWaitStatus:
	.bss 0
	.export __LINKINFO_IMPORT_TEST_TestMemories
__LINKINFO_IMPORT_TEST_TestMemories:
	.bss 0
	.export __LINKINFO_IMPORT_memseti
__LINKINFO_IMPORT_memseti:
	.bss 0
	.export __LINKINFO_IMPORT_XpFifoRead
__LINKINFO_IMPORT_XpFifoRead:
	.bss 0
	.export __LINKINFO_IMPORT_XpFifoWrite
__LINKINFO_IMPORT_XpFifoWrite:
	.bss 0
	.export __LINKINFO_IMPORT_NandGetOctets
__LINKINFO_IMPORT_NandGetOctets:
	.bss 0
	.export __LINKINFO_IMPORT_NandPutOctets
__LINKINFO_IMPORT_NandPutOctets:
	.bss 0
	.export __LINKINFO_IMPORT_NandPutBlockAddress
__LINKINFO_IMPORT_NandPutBlockAddress:
	.bss 0
	.export __LINKINFO_IMPORT_NandPutDataAddress
__LINKINFO_IMPORT_NandPutDataAddress:
	.bss 0
	.export __LINKINFO_IMPORT_NandPutLargePageSpareAddress
__LINKINFO_IMPORT_NandPutLargePageSpareAddress:
	.bss 0
	.export __LINKINFO_IMPORT_NandGetStatus
__LINKINFO_IMPORT_NandGetStatus:
	.bss 0
	.export __LINKINFO_IMPORT_LargePageWrite
__LINKINFO_IMPORT_LargePageWrite:
	.bss 0
	.export __LINKINFO_IMPORT_LargePageRead
__LINKINFO_IMPORT_LargePageRead:
	.bss 0
	.export __LINKINFO_IMPORT_NandPutPage
__LINKINFO_IMPORT_NandPutPage:
	.bss 0
	.export __LINKINFO_IMPORT_FsPhNandRead
__LINKINFO_IMPORT_FsPhNandRead:
	.bss 0
	.export __LINKINFO_IMPORT_FsPhNandWrite
__LINKINFO_IMPORT_FsPhNandWrite:
	.bss 0
	.export __LINKINFO_IMPORT_FsPhNandErase
__LINKINFO_IMPORT_FsPhNandErase:
	.bss 0
	.export __LINKINFO_IMPORT_fsNandPhys
__LINKINFO_IMPORT_fsNandPhys:
	.bss 0
	.export __LINKINFO_IMPORT_NandWaitIdle
__LINKINFO_IMPORT_NandWaitIdle:
	.bss 0
	.export __LINKINFO_IMPORT_NandPutAddressOctet
__LINKINFO_IMPORT_NandPutAddressOctet:
	.bss 0
	.export __LINKINFO_IMPORT_NandPutCommand
__LINKINFO_IMPORT_NandPutCommand:
	.bss 0
	.export __LINKINFO_IMPORT_NandSetWaits
__LINKINFO_IMPORT_NandSetWaits:
	.bss 0
	.export __LINKINFO_IMPORT_Swap16
__LINKINFO_IMPORT_Swap16:
	.bss 0
	.export __LINKINFO_IMPORT_CountBitsLong
__LINKINFO_IMPORT_CountBitsLong:
	.bss 0
	.export __LINKINFO_IMPORT_NandMingle
__LINKINFO_IMPORT_NandMingle:
	.bss 0
	.export __LINKINFO_IMPORT_FsPhNullOk
__LINKINFO_IMPORT_FsPhNullOk:
	.bss 0
	.export __LINKINFO_IMPORT_DevNullWrite
__LINKINFO_IMPORT_DevNullWrite:
	.bss 0
	.export __LINKINFO_IMPORT_MyDelayHook
__LINKINFO_IMPORT_MyDelayHook:
	.bss 0
	.export __LINKINFO_IMPORT_SetNextApp
__LINKINFO_IMPORT_SetNextApp:
	.bss 0
	.export __LINKINFO_IMPORT_Init0
__LINKINFO_IMPORT_Init0:
	.bss 0
	.export __LINKINFO_IMPORT_PrintTasks
__LINKINFO_IMPORT_PrintTasks:
	.bss 0
	.export __LINKINFO_IMPORT_PrintInt
__LINKINFO_IMPORT_PrintInt:
	.bss 0
	.export __LINKINFO_IMPORT_LoadDrivers
__LINKINFO_IMPORT_LoadDrivers:
	.bss 0
	.export __LINKINFO_IMPORT_audioDevice
__LINKINFO_IMPORT_audioDevice:
	.bss 0
	.export __LINKINFO_IMPORT_sysTasks
__LINKINFO_IMPORT_sysTasks:
	.bss 0
	.export __LINKINFO_IMPORT_romSysTasks
__LINKINFO_IMPORT_romSysTasks:
	.bss 0
	.export __LINKINFO_IMPORT_vo_fprintf
__LINKINFO_IMPORT_vo_fprintf:
	.bss 0
	.export __LINKINFO_IMPORT_strcpy
__LINKINFO_IMPORT_strcpy:
	.bss 0
	.export __LINKINFO_IMPORT_GetI6
__LINKINFO_IMPORT_GetI6:
	.bss 0
	.export __LINKINFO_IMPORT_InitHwLocks
__LINKINFO_IMPORT_InitHwLocks:
	.bss 0
	.export __LINKINFO_IMPORT_CreateTask
__LINKINFO_IMPORT_CreateTask:
	.bss 0
	.export __LINKINFO_IMPORT_ReadFromProgramRam
__LINKINFO_IMPORT_ReadFromProgramRam:
	.bss 0
	.export __LINKINFO_IMPORT_strchr
__LINKINFO_IMPORT_strchr:
	.bss 0
	.export __LINKINFO_IMPORT_LoadLibraryP
__LINKINFO_IMPORT_LoadLibraryP:
	.bss 0
	.export __LINKINFO_IMPORT_CreateCyclic
__LINKINFO_IMPORT_CreateCyclic:
	.bss 0
	.export __LINKINFO_IMPORT_InitBoard
__LINKINFO_IMPORT_InitBoard:
	.bss 0
	.export __LINKINFO_IMPORT_StartOS3
__LINKINFO_IMPORT_StartOS3:
	.bss 0
	.export __LINKINFO_IMPORT_audioout
__LINKINFO_IMPORT_audioout:
	.bss 0
	.export __LINKINFO_IMPORT_sysUiMsg
__LINKINFO_IMPORT_sysUiMsg:
	.bss 0
	.export __LINKINFO_IMPORT_AddCyclic
__LINKINFO_IMPORT_AddCyclic:
	.bss 0
	.export __LINKINFO_IMPORT_RunAppFile3
__LINKINFO_IMPORT_RunAppFile3:
	.bss 0
	.export __LINKINFO_IMPORT_vo_printf
__LINKINFO_IMPORT_vo_printf:
	.bss 0
	.export __LINKINFO_IMPORT_DelayL
__LINKINFO_IMPORT_DelayL:
	.bss 0
	.export __LINKINFO_IMPORT_NextResource
__LINKINFO_IMPORT_NextResource:
	.bss 0
	.export __LINKINFO_IMPORT_ResGet16
__LINKINFO_IMPORT_ResGet16:
	.bss 0
	.export __LINKINFO_IMPORT_ResGet32
__LINKINFO_IMPORT_ResGet32:
	.bss 0
	.export __LINKINFO_IMPORT_RemoveLibFromList
__LINKINFO_IMPORT_RemoveLibFromList:
	.bss 0
	.export __LINKINFO_IMPORT_LoadLibraryFile
__LINKINFO_IMPORT_LoadLibraryFile:
	.bss 0
	.export __LINKINFO_IMPORT_sprintf
__LINKINFO_IMPORT_sprintf:
	.bss 0
	.export __LINKINFO_IMPORT_ObtainMutex
__LINKINFO_IMPORT_ObtainMutex:
	.bss 0
	.export __LINKINFO_IMPORT_ReleaseMutex
__LINKINFO_IMPORT_ReleaseMutex:
	.bss 0
	.export __LINKINFO_IMPORT_WriteToProgramRam
__LINKINFO_IMPORT_WriteToProgramRam:
	.bss 0
	.export __LINKINFO_IMPORT_GetMemory
__LINKINFO_IMPORT_GetMemory:
	.bss 0
	.export __LINKINFO_IMPORT_WriteToProgramRam16Swapped
__LINKINFO_IMPORT_WriteToProgramRam16Swapped:
	.bss 0
	.export __LINKINFO_IMPORT_AttemptMutex
__LINKINFO_IMPORT_AttemptMutex:
	.bss 0
	.export __LINKINFO_IMPORT_StdButtonDefaultRender
__LINKINFO_IMPORT_StdButtonDefaultRender:
	.bss 0
	.export __LINKINFO_IMPORT_lastButtonPressed
__LINKINFO_IMPORT_lastButtonPressed:
	.bss 0
	.export __LINKINFO_IMPORT_virtualWidth
__LINKINFO_IMPORT_virtualWidth:
	.bss 0
	.export __LINKINFO_IMPORT_virtualHeight
__LINKINFO_IMPORT_virtualHeight:
	.bss 0
	.export __LINKINFO_IMPORT_SetStdAudioOutVolume
__LINKINFO_IMPORT_SetStdAudioOutVolume:
	.bss 0
	.export __LINKINFO_IMPORT_SystemUiMessageCyclic
__LINKINFO_IMPORT_SystemUiMessageCyclic:
	.bss 0
	.export __LINKINFO_IMPORT_SystemUiMessageReceiver
__LINKINFO_IMPORT_SystemUiMessageReceiver:
	.bss 0
	.export __LINKINFO_IMPORT_romSysUiMsg
__LINKINFO_IMPORT_romSysUiMsg:
	.bss 0
	.export __LINKINFO_IMPORT_sysUiMsgFilterValues
__LINKINFO_IMPORT_sysUiMsgFilterValues:
	.bss 0
	.export __LINKINFO_IMPORT_SetAddress
__LINKINFO_IMPORT_SetAddress:
	.bss 0
	.export __LINKINFO_IMPORT_ResetDataToggles
__LINKINFO_IMPORT_ResetDataToggles:
	.bss 0
	.export __LINKINFO_IMPORT_ResetUsbHardware
__LINKINFO_IMPORT_ResetUsbHardware:
	.bss 0
	.export __LINKINFO_IMPORT_GetUsbPacket
__LINKINFO_IMPORT_GetUsbPacket:
	.bss 0
	.export __LINKINFO_IMPORT_HandlePacket
__LINKINFO_IMPORT_HandlePacket:
	.bss 0
	.export __LINKINFO_IMPORT_UsbSender
__LINKINFO_IMPORT_UsbSender:
	.bss 0
	.export __LINKINFO_IMPORT_usp
__LINKINFO_IMPORT_usp:
	.bss 0
	.export __LINKINFO_IMPORT_usbsender
__LINKINFO_IMPORT_usbsender:
	.bss 0
	.export __LINKINFO_IMPORT_usb_xmit_bufptr
__LINKINFO_IMPORT_usb_xmit_bufptr:
	.bss 0
	.export __LINKINFO_IMPORT_tenzeros
__LINKINFO_IMPORT_tenzeros:
	.bss 0
	.export __LINKINFO_IMPORT_setAddress
__LINKINFO_IMPORT_setAddress:
	.bss 0
	.export __LINKINFO_IMPORT_resetDataToggles
__LINKINFO_IMPORT_resetDataToggles:
	.bss 0
	.export __LINKINFO_IMPORT_deviceDescriptor
__LINKINFO_IMPORT_deviceDescriptor:
	.bss 0
	.export __LINKINFO_IMPORT_configurationDescriptor
__LINKINFO_IMPORT_configurationDescriptor:
	.bss 0
	.export __LINKINFO_IMPORT_languageDescriptor
__LINKINFO_IMPORT_languageDescriptor:
	.bss 0
	.export __LINKINFO_IMPORT_vendorStringDescriptor
__LINKINFO_IMPORT_vendorStringDescriptor:
	.bss 0
	.export __LINKINFO_IMPORT_productStringDescriptor
__LINKINFO_IMPORT_productStringDescriptor:
	.bss 0
	.export __LINKINFO_IMPORT_serialNumberDescriptor
__LINKINFO_IMPORT_serialNumberDescriptor:
	.bss 0
	.export __LINKINFO_IMPORT_chapter9
__LINKINFO_IMPORT_chapter9:
	.bss 0
	.export __LINKINFO_IMPORT_inquiry1
__LINKINFO_IMPORT_inquiry1:
	.bss 0
	.export __LINKINFO_IMPORT_sense
__LINKINFO_IMPORT_sense:
	.bss 0
	.export __LINKINFO_IMPORT_capacity
__LINKINFO_IMPORT_capacity:
	.bss 0
	.export __LINKINFO_IMPORT_atapiCapacities
__LINKINFO_IMPORT_atapiCapacities:
	.bss 0
	.export __LINKINFO_IMPORT_diskData
__LINKINFO_IMPORT_diskData:
	.bss 0
	.export __LINKINFO_IMPORT_csw1
__LINKINFO_IMPORT_csw1:
	.bss 0
	.export __LINKINFO_IMPORT_scsi
__LINKINFO_IMPORT_scsi:
	.bss 0
	.export __LINKINFO_IMPORT_diskData0Y
__LINKINFO_IMPORT_diskData0Y:
	.bss 0
	.export __LINKINFO_IMPORT_diskData1Y
__LINKINFO_IMPORT_diskData1Y:
	.bss 0
	.export __LINKINFO_IMPORT_diskData2Y
__LINKINFO_IMPORT_diskData2Y:
	.bss 0
	.export __LINKINFO_IMPORT_diskData3Y
__LINKINFO_IMPORT_diskData3Y:
	.bss 0
	.export __LINKINFO_IMPORT_diskInitTab
__LINKINFO_IMPORT_diskInitTab:
	.bss 0
	.export __LINKINFO_IMPORT_usbHwInitTab
__LINKINFO_IMPORT_usbHwInitTab:
	.bss 0
	.export __LINKINFO_IMPORT_csw
__LINKINFO_IMPORT_csw:
	.bss 0
	.export __LINKINFO_IMPORT_RingBufCopyXfromY
__LINKINFO_IMPORT_RingBufCopyXfromY:
	.bss 0
	.export __LINKINFO_IMPORT_ConsoleWrite
__LINKINFO_IMPORT_ConsoleWrite:
	.bss 0
	.export __LINKINFO_IMPORT_ConsoleFileOperations
__LINKINFO_IMPORT_ConsoleFileOperations:
	.bss 0
	.export __LINKINFO_IMPORT_ConsoleIoctl
__LINKINFO_IMPORT_ConsoleIoctl:
	.bss 0
	.export __LINKINFO_IMPORT_NullFileIdentify
__LINKINFO_IMPORT_NullFileIdentify:
	.bss 0
	.export __LINKINFO_IMPORT_Identify
__LINKINFO_IMPORT_Identify:
	.bss 0
	.export __LINKINFO_IMPORT_FreeBuffer
__LINKINFO_IMPORT_FreeBuffer:
	.bss 0
	.export __LINKINFO_IMPORT_GetBuffer
__LINKINFO_IMPORT_GetBuffer:
	.bss 0
	.export __LINKINFO_IMPORT_MakeFileDescriptor
__LINKINFO_IMPORT_MakeFileDescriptor:
	.bss 0
	.export __LINKINFO_IMPORT_BusyWait
__LINKINFO_IMPORT_BusyWait:
	.bss 0
	.export __LINKINFO_IMPORT_RemovedInterface
__LINKINFO_IMPORT_RemovedInterface:
	.bss 0
	.export __LINKINFO_IMPORT_vs3emubreak
__LINKINFO_IMPORT_vs3emubreak:
	.bss 0
	.export __LINKINFO_IMPORT_fopen_retries
__LINKINFO_IMPORT_fopen_retries:
	.bss 0
	.export __LINKINFO_IMPORT_fopenclose_mutex
__LINKINFO_IMPORT_fopenclose_mutex:
	.bss 0
	.export __LINKINFO_IMPORT_fclose_gettime_mutex
__LINKINFO_IMPORT_fclose_gettime_mutex:
	.bss 0
	.export __LINKINFO_IMPORT_vo_simple_files
__LINKINFO_IMPORT_vo_simple_files:
	.bss 0
	.export __LINKINFO_IMPORT_sbsP
__LINKINFO_IMPORT_sbsP:
	.bss 0
	.export __LINKINFO_IMPORT_nSectorBuffers
__LINKINFO_IMPORT_nSectorBuffers:
	.bss 0
	.export __LINKINFO_IMPORT_nullFileOperations
__LINKINFO_IMPORT_nullFileOperations:
	.bss 0
	.export __LINKINFO_IMPORT_nullFile
__LINKINFO_IMPORT_nullFile:
	.bss 0
	.export __LINKINFO_IMPORT_FatImageWriteBytes
__LINKINFO_IMPORT_FatImageWriteBytes:
	.bss 0
	.export __LINKINFO_IMPORT_FatFlush
__LINKINFO_IMPORT_FatFlush:
	.bss 0
	.export __LINKINFO_IMPORT_FatImageSectorRead
__LINKINFO_IMPORT_FatImageSectorRead:
	.bss 0
	.export __LINKINFO_IMPORT_MegaFatGetByte
__LINKINFO_IMPORT_MegaFatGetByte:
	.bss 0
	.export __LINKINFO_IMPORT_MegaFatGetWord
__LINKINFO_IMPORT_MegaFatGetWord:
	.bss 0
	.export __LINKINFO_IMPORT_MegaFatGetLong
__LINKINFO_IMPORT_MegaFatGetLong:
	.bss 0
	.export __LINKINFO_IMPORT_FatCreate
__LINKINFO_IMPORT_FatCreate:
	.bss 0
	.export __LINKINFO_IMPORT_FatGetFragmentFromFAT
__LINKINFO_IMPORT_FatGetFragmentFromFAT:
	.bss 0
	.export __LINKINFO_IMPORT_VoFatClusterPos
__LINKINFO_IMPORT_VoFatClusterPos:
	.bss 0
	.export __LINKINFO_IMPORT_VoFatReadClusterRecord
__LINKINFO_IMPORT_VoFatReadClusterRecord:
	.bss 0
	.export __LINKINFO_IMPORT_VoFatWriteClusterRecord
__LINKINFO_IMPORT_VoFatWriteClusterRecord:
	.bss 0
	.export __LINKINFO_IMPORT_VoFatGetFreeFragment
__LINKINFO_IMPORT_VoFatGetFreeFragment:
	.bss 0
	.export __LINKINFO_IMPORT_WriteClusterChain
__LINKINFO_IMPORT_WriteClusterChain:
	.bss 0
	.export __LINKINFO_IMPORT_VoFatFindSector
__LINKINFO_IMPORT_VoFatFindSector:
	.bss 0
	.export __LINKINFO_IMPORT_VoFatWriteFile
__LINKINFO_IMPORT_VoFatWriteFile:
	.bss 0
	.export __LINKINFO_IMPORT_VoFatCloseFile
__LINKINFO_IMPORT_VoFatCloseFile:
	.bss 0
	.export __LINKINFO_IMPORT_VoFatReadFile
__LINKINFO_IMPORT_VoFatReadFile:
	.bss 0
	.export __LINKINFO_IMPORT_FatNameFromDirEntry
__LINKINFO_IMPORT_FatNameFromDirEntry:
	.bss 0
	.export __LINKINFO_IMPORT_FatOpenEntry
__LINKINFO_IMPORT_FatOpenEntry:
	.bss 0
	.export __LINKINFO_IMPORT_FatExtendDirectory
__LINKINFO_IMPORT_FatExtendDirectory:
	.bss 0
	.export __LINKINFO_IMPORT_FatMakeEntry
__LINKINFO_IMPORT_FatMakeEntry:
	.bss 0
	.export __LINKINFO_IMPORT_FileNameCompare
__LINKINFO_IMPORT_FileNameCompare:
	.bss 0
	.export __LINKINFO_IMPORT_FatFindFile
__LINKINFO_IMPORT_FatFindFile:
	.bss 0
	.export __LINKINFO_IMPORT_VoFatOpenFile
__LINKINFO_IMPORT_VoFatOpenFile:
	.bss 0
	.export __LINKINFO_IMPORT_IdentifyFat
__LINKINFO_IMPORT_IdentifyFat:
	.bss 0
	.export __LINKINFO_IMPORT_FatFileOps
__LINKINFO_IMPORT_FatFileOps:
	.bss 0
	.export __LINKINFO_IMPORT_longFileName
__LINKINFO_IMPORT_longFileName:
	.bss 0
	.export __LINKINFO_IMPORT_lfnStartCluster
__LINKINFO_IMPORT_lfnStartCluster:
	.bss 0
	.export __LINKINFO_IMPORT_MemCopyPackedBigEndian
__LINKINFO_IMPORT_MemCopyPackedBigEndian:
	.bss 0
	.export __LINKINFO_IMPORT_strncasecmp
__LINKINFO_IMPORT_strncasecmp:
	.bss 0
	.export __LINKINFO_IMPORT_atoi
__LINKINFO_IMPORT_atoi:
	.bss 0
	.export __LINKINFO_IMPORT_filtPairs
__LINKINFO_IMPORT_filtPairs:
	.bss 0
	.export __LINKINFO_IMPORT_bassCompand
__LINKINFO_IMPORT_bassCompand:
	.bss 0
	.export __LINKINFO_IMPORT_bTrebleGain
__LINKINFO_IMPORT_bTrebleGain:
	.bss 0
	.export __LINKINFO_IMPORT_bassG
__LINKINFO_IMPORT_bassG:
	.bss 0
	.export __LINKINFO_IMPORT_btmp
__LINKINFO_IMPORT_btmp:
	.bss 0
	.export __LINKINFO_IMPORT_bassCompandMaxGain
__LINKINFO_IMPORT_bassCompandMaxGain:
	.bss 0
	.export __LINKINFO_IMPORT_trebleCoeff
__LINKINFO_IMPORT_trebleCoeff:
	.bss 0
	.export __LINKINFO_IMPORT_trebleFreqs
__LINKINFO_IMPORT_trebleFreqs:
	.bss 0
	.export __LINKINFO_IMPORT_trebleEmph
__LINKINFO_IMPORT_trebleEmph:
	.bss 0
	.export __LINKINFO_IMPORT_lowEmph
__LINKINFO_IMPORT_lowEmph:
	.bss 0
	.export __LINKINFO_IMPORT_trebleIdx
__LINKINFO_IMPORT_trebleIdx:
	.bss 0
	.export __LINKINFO_IMPORT_trebleFiltP
__LINKINFO_IMPORT_trebleFiltP:
	.bss 0
	.export __LINKINFO_IMPORT_trShift
__LINKINFO_IMPORT_trShift:
	.bss 0
	.export __LINKINFO_IMPORTASM_fr_div
__LINKINFO_IMPORTASM_fr_div:
	.bss 0
	.export __LINKINFO_IMPORT_trebleFilt
__LINKINFO_IMPORT_trebleFilt:
	.bss 0
	.export __LINKINFO_IMPORT_trebleCoeffRam
__LINKINFO_IMPORT_trebleCoeffRam:
	.bss 0
	.export __LINKINFO_IMPORT_QueueHwLock
__LINKINFO_IMPORT_QueueHwLock:
	.bss 0
	.export __LINKINFO_IMPORT_ReleaseHwLock
__LINKINFO_IMPORT_ReleaseHwLock:
	.bss 0
	.export __LINKINFO_IMPORT_hwLocks
__LINKINFO_IMPORT_hwLocks:
	.bss 0
	.export __LINKINFO_IMPORT_hwLockOffset
__LINKINFO_IMPORT_hwLockOffset:
	.bss 0
	.export __LINKINFO_IMPORT_hwLockN
__LINKINFO_IMPORT_hwLockN:
	.bss 0
	.export __LINKINFO_IMPORT_MSBSetU32
__LINKINFO_IMPORT_MSBSetU32:
	.bss 0
	.export __LINKINFO_IMPORT_GpioReadInputPin
__LINKINFO_IMPORT_GpioReadInputPin:
	.bss 0
	.export __LINKINFO_IMPORT_vo_gpio_perips
__LINKINFO_IMPORT_vo_gpio_perips:
	.bss 0
	.export __LINKINFO_IMPORT_WritePCL
__LINKINFO_IMPORT_WritePCL:
	.bss 0
	.export __LINKINFO_IMPORT_ResetSdCard
__LINKINFO_IMPORT_ResetSdCard:
	.bss 0
	.export __LINKINFO_IMPORT_SetPWMLevel
__LINKINFO_IMPORT_SetPWMLevel:
	.bss 0
	.export __LINKINFO_IMPORT_powerControlLatchState
__LINKINFO_IMPORT_powerControlLatchState:
	.bss 0
	.export __LINKINFO_IMPORT_HuffmanRLC44ODiff
__LINKINFO_IMPORT_HuffmanRLC44ODiff:
	.bss 0
	.export __LINKINFO_IMPORT_HuffmanRLC16Mono
__LINKINFO_IMPORT_HuffmanRLC16Mono:
	.bss 0
	.export __LINKINFO_IMPORT_kbd_win_128
__LINKINFO_IMPORT_kbd_win_128:
	.bss 0
	.export __LINKINFO_IMPORT_hcb_1
__LINKINFO_IMPORT_hcb_1:
	.bss 0
	.export __LINKINFO_IMPORT_hcb_2
__LINKINFO_IMPORT_hcb_2:
	.bss 0
	.export __LINKINFO_IMPORT_hcb_3
__LINKINFO_IMPORT_hcb_3:
	.bss 0
	.export __LINKINFO_IMPORT_hcb_4
__LINKINFO_IMPORT_hcb_4:
	.bss 0
	.export __LINKINFO_IMPORT_hcb_5
__LINKINFO_IMPORT_hcb_5:
	.bss 0
	.export __LINKINFO_IMPORT_hcb_6
__LINKINFO_IMPORT_hcb_6:
	.bss 0
	.export __LINKINFO_IMPORT_hcb_7
__LINKINFO_IMPORT_hcb_7:
	.bss 0
	.export __LINKINFO_IMPORT_hcb_8
__LINKINFO_IMPORT_hcb_8:
	.bss 0
	.export __LINKINFO_IMPORT_hcb_9
__LINKINFO_IMPORT_hcb_9:
	.bss 0
	.export __LINKINFO_IMPORT_hcb_10
__LINKINFO_IMPORT_hcb_10:
	.bss 0
	.export __LINKINFO_IMPORT_hcb_11
__LINKINFO_IMPORT_hcb_11:
	.bss 0
	.export __LINKINFO_IMPORT_phiFractQmf_cs
__LINKINFO_IMPORT_phiFractQmf_cs:
	.bss 0
	.export __LINKINFO_IMPORT_phiFractSubQmf20_cs
__LINKINFO_IMPORT_phiFractSubQmf20_cs:
	.bss 0
	.export __LINKINFO_IMPORT_phiFractSubQmf34_cs
__LINKINFO_IMPORT_phiFractSubQmf34_cs:
	.bss 0
	.export __LINKINFO_IMPORT_num_swb_960_window
__LINKINFO_IMPORT_num_swb_960_window:
	.bss 0
	.export __LINKINFO_IMPORT_num_swb_1024_window
__LINKINFO_IMPORT_num_swb_1024_window:
	.bss 0
	.export __LINKINFO_IMPORT_num_swb_128_window
__LINKINFO_IMPORT_num_swb_128_window:
	.bss 0
	.export __LINKINFO_IMPORT_swb_offset_1024_96
__LINKINFO_IMPORT_swb_offset_1024_96:
	.bss 0
	.export __LINKINFO_IMPORT_swb_offset_128_96
__LINKINFO_IMPORT_swb_offset_128_96:
	.bss 0
	.export __LINKINFO_IMPORT_swb_offset_1024_64
__LINKINFO_IMPORT_swb_offset_1024_64:
	.bss 0
	.export __LINKINFO_IMPORT_swb_offset_1024_48
__LINKINFO_IMPORT_swb_offset_1024_48:
	.bss 0
	.export __LINKINFO_IMPORT_swb_offset_128_48
__LINKINFO_IMPORT_swb_offset_128_48:
	.bss 0
	.export __LINKINFO_IMPORT_swb_offset_1024_32
__LINKINFO_IMPORT_swb_offset_1024_32:
	.bss 0
	.export __LINKINFO_IMPORT_swb_offset_1024_24
__LINKINFO_IMPORT_swb_offset_1024_24:
	.bss 0
	.export __LINKINFO_IMPORT_swb_offset_128_24
__LINKINFO_IMPORT_swb_offset_128_24:
	.bss 0
	.export __LINKINFO_IMPORT_swb_offset_1024_16
__LINKINFO_IMPORT_swb_offset_1024_16:
	.bss 0
	.export __LINKINFO_IMPORT_swb_offset_128_16
__LINKINFO_IMPORT_swb_offset_128_16:
	.bss 0
	.export __LINKINFO_IMPORT_swb_offset_1024_8
__LINKINFO_IMPORT_swb_offset_1024_8:
	.bss 0
	.export __LINKINFO_IMPORT_swb_offset_128_8
__LINKINFO_IMPORT_swb_offset_128_8:
	.bss 0
	.export __LINKINFO_IMPORT_swb_offset_1024_window
__LINKINFO_IMPORT_swb_offset_1024_window:
	.bss 0
	.export __LINKINFO_IMPORT_swb_offset_128_window
__LINKINFO_IMPORT_swb_offset_128_window:
	.bss 0
	.export __LINKINFO_IMPORT_swb_offset_120_96
__LINKINFO_IMPORT_swb_offset_120_96:
	.bss 0
	.export __LINKINFO_IMPORT_swb_offset_960_48
__LINKINFO_IMPORT_swb_offset_960_48:
	.bss 0
	.export __LINKINFO_IMPORT_swb_offset_120_48
__LINKINFO_IMPORT_swb_offset_120_48:
	.bss 0
	.export __LINKINFO_IMPORT_swb_offset_120_24
__LINKINFO_IMPORT_swb_offset_120_24:
	.bss 0
	.export __LINKINFO_IMPORT_swb_offset_120_16
__LINKINFO_IMPORT_swb_offset_120_16:
	.bss 0
	.export __LINKINFO_IMPORT_swb_offset_960_8
__LINKINFO_IMPORT_swb_offset_960_8:
	.bss 0
	.export __LINKINFO_IMPORT_swb_offset_120_8
__LINKINFO_IMPORT_swb_offset_120_8:
	.bss 0
	.export __LINKINFO_IMPORT_swb_offset_960_window
__LINKINFO_IMPORT_swb_offset_960_window:
	.bss 0
	.export __LINKINFO_IMPORT_swb_offset_120_window
__LINKINFO_IMPORT_swb_offset_120_window:
	.bss 0
	.export __LINKINFO_IMPORT_iq_tablei_x
__LINKINFO_IMPORT_iq_tablei_x:
	.bss 0
	.export __LINKINFO_IMPORT_NoiseRe
__LINKINFO_IMPORT_NoiseRe:
	.bss 0
	.export __LINKINFO_IMPORT_NoiseIm
__LINKINFO_IMPORT_NoiseIm:
	.bss 0
	.export __LINKINFO_IMPORT_hxx_mix_ab32
__LINKINFO_IMPORT_hxx_mix_ab32:
	.bss 0
	.export __LINKINFO_IMPORT_qFractAllpassQmf_cs
__LINKINFO_IMPORT_qFractAllpassQmf_cs:
	.bss 0
	.export __LINKINFO_IMPORT_qFractAllpassSubQmf20_cs
__LINKINFO_IMPORT_qFractAllpassSubQmf20_cs:
	.bss 0
	.export __LINKINFO_IMPORT_qFractAllpassSubQmf34_cs
__LINKINFO_IMPORT_qFractAllpassSubQmf34_cs:
	.bss 0
	.export __LINKINFO_IMPORT_bitReverse
__LINKINFO_IMPORT_bitReverse:
	.bss 0
	.export __LINKINFO_IMPORT_latin1
__LINKINFO_IMPORT_latin1:
	.bss 0
	.export __LINKINFO_IMPORT_font16a
__LINKINFO_IMPORT_font16a:
	.bss 0
	.export __LINKINFO_IMPORT_FileParamInt
__LINKINFO_IMPORT_FileParamInt:
	.bss 0
	.export __LINKINFO_IMPORT_FileParamStr
__LINKINFO_IMPORT_FileParamStr:
	.bss 0
	.export __LINKINFO_IMPORT_strtol
__LINKINFO_IMPORT_strtol:
	.bss 0
	.export __LINKINFO_IMPORT_strrchr
__LINKINFO_IMPORT_strrchr:
	.bss 0
	.export __LINKINFO_IMPORT_TEST_GetSineAdder
__LINKINFO_IMPORT_TEST_GetSineAdder:
	.bss 0
	.export __LINKINFO_IMPORT_CompareXY
__LINKINFO_IMPORT_CompareXY:
	.bss 0
	.export __LINKINFO_IMPORT_CopyXY
__LINKINFO_IMPORT_CopyXY:
	.bss 0
	.export __LINKINFO_IMPORT_FsPhNullFail
__LINKINFO_IMPORT_FsPhNullFail:
	.bss 0
	.export __LINKINFO_IMPORT_WriteToProgramRam16
__LINKINFO_IMPORT_WriteToProgramRam16:
	.bss 0
	.export __LINKINFO_IMPORT_WriteToProgramRamSwapped
__LINKINFO_IMPORT_WriteToProgramRamSwapped:
	.bss 0
	.export __LINKINFO_IMPORT_CyclicMainLoop
__LINKINFO_IMPORT_CyclicMainLoop:
	.bss 0
	.export __LINKINFO_IMPORT_SetInCyclicQueue
__LINKINFO_IMPORT_SetInCyclicQueue:
	.bss 0
	.export __LINKINFO_IMPORT_DropCyclic
__LINKINFO_IMPORT_DropCyclic:
	.bss 0
	.export __LINKINFO_IMPORT_cyclic
__LINKINFO_IMPORT_cyclic:
	.bss 0
	.export __LINKINFO_IMPORT_CreateTaskAndStack
__LINKINFO_IMPORT_CreateTaskAndStack:
	.bss 0
	.export __LINKINFO_IMPORT_ListDevices
__LINKINFO_IMPORT_ListDevices:
	.bss 0
	.export __LINKINFO_IMPORT_devSdSd
__LINKINFO_IMPORT_devSdSd:
	.bss 0
	.export __LINKINFO_IMPORTASM_ushort_to_df
__LINKINFO_IMPORTASM_ushort_to_df:
	.bss 0
	.export __LINKINFO_IMPORT_DevSdSdCreate
__LINKINFO_IMPORT_DevSdSdCreate:
	.bss 0
	.export __LINKINFO_IMPORT_AudioIoctl
__LINKINFO_IMPORT_AudioIoctl:
	.bss 0
	.export __LINKINFO_IMPORT_AudioWrite
__LINKINFO_IMPORT_AudioWrite:
	.bss 0
	.export __LINKINFO_IMPORT_AudioFileOperations
__LINKINFO_IMPORT_AudioFileOperations:
	.bss 0
	.export __LINKINFO_IMPORT_voAudioChannels
__LINKINFO_IMPORT_voAudioChannels:
	.bss 0
	.export __LINKINFO_IMPORT_xp_fiford
__LINKINFO_IMPORT_xp_fiford:
	.bss 0
	.export __LINKINFO_IMPORT_xp_fifowr
__LINKINFO_IMPORT_xp_fifowr:
	.bss 0
	.export __LINKINFO_IMPORT_SDClock32
__LINKINFO_IMPORT_SDClock32:
	.bss 0
	.export __LINKINFO_IMPORT_SDDataRXTX
__LINKINFO_IMPORT_SDDataRXTX:
	.bss 0
	.export __LINKINFO_IMPORT_SDDataRX1
__LINKINFO_IMPORT_SDDataRX1:
	.bss 0
	.export __LINKINFO_IMPORT_DevSdSdDelete
__LINKINFO_IMPORT_DevSdSdDelete:
	.bss 0
	.export __LINKINFO_IMPORT_DevSdSdIdentify
__LINKINFO_IMPORT_DevSdSdIdentify:
	.bss 0
	.export __LINKINFO_IMPORT_DataStop
__LINKINFO_IMPORT_DataStop:
	.bss 0
	.export __LINKINFO_IMPORT_DevSdSdBlockRead
__LINKINFO_IMPORT_DevSdSdBlockRead:
	.bss 0
	.export __LINKINFO_IMPORT_DevSdSdBlockWrite
__LINKINFO_IMPORT_DevSdSdBlockWrite:
	.bss 0
	.export __LINKINFO_IMPORT_DevSdSdIoctl
__LINKINFO_IMPORT_DevSdSdIoctl:
	.bss 0
	.export __LINKINFO_IMPORT_devSdSdDefaults
__LINKINFO_IMPORT_devSdSdDefaults:
	.bss 0
	.export __LINKINFO_IMPORT_devSdSdDefaults1Bit
__LINKINFO_IMPORT_devSdSdDefaults1Bit:
	.bss 0
	.export __LINKINFO_IMPORT_XP_FifoRd8
__LINKINFO_IMPORT_XP_FifoRd8:
	.bss 0
	.export __LINKINFO_IMPORT_XP_FifoWr8
__LINKINFO_IMPORT_XP_FifoWr8:
	.bss 0
	.export __LINKINFO_IMPORT_WaitSdReady
__LINKINFO_IMPORT_WaitSdReady:
	.bss 0
	.export __LINKINFO_IMPORT_SDCmd
__LINKINFO_IMPORT_SDCmd:
	.bss 0
	.export __LINKINFO_IMPORT_IoctlRestart
__LINKINFO_IMPORT_IoctlRestart:
	.bss 0
	.export __LINKINFO_IMPORT_DetectSDCard
__LINKINFO_IMPORT_DetectSDCard:
	.bss 0
	.export __LINKINFO_IMPORT_IDSDCard
__LINKINFO_IMPORT_IDSDCard:
	.bss 0
	.export __LINKINFO_IMPORT_SetupSDData
__LINKINFO_IMPORT_SetupSDData:
	.bss 0
	.export __LINKINFO_IMPORT_SdIdentify
__LINKINFO_IMPORT_SdIdentify:
	.bss 0
	.export __LINKINFO_IMPORT_EncMCountHuff2
__LINKINFO_IMPORT_EncMCountHuff2:
	.bss 0
	.export __LINKINFO_IMPORT_EncMCountHuff4
__LINKINFO_IMPORT_EncMCountHuff4:
	.bss 0
	.export __LINKINFO_IMPORT_EncMHuff2N
__LINKINFO_IMPORT_EncMHuff2N:
	.bss 0
	.export __LINKINFO_IMPORT_EncMCountHuff2Asm
__LINKINFO_IMPORT_EncMCountHuff2Asm:
	.bss 0
	.export __LINKINFO_IMPORT_EncMOutBits32
__LINKINFO_IMPORT_EncMOutBits32:
	.bss 0
	.export __LINKINFO_IMPORT_EncMOutBits16
__LINKINFO_IMPORT_EncMOutBits16:
	.bss 0
	.export __LINKINFO_IMPORT_EncMOutBit
__LINKINFO_IMPORT_EncMOutBit:
	.bss 0
	.export __LINKINFO_IMPORT_EncMDct18
__LINKINFO_IMPORT_EncMDct18:
	.bss 0
	.export __LINKINFO_IMPORT_EncMDct18Asm
__LINKINFO_IMPORT_EncMDct18Asm:
	.bss 0
	.export __LINKINFO_IMPORT_EncMInitBits
__LINKINFO_IMPORT_EncMInitBits:
	.bss 0
	.export __LINKINFO_IMPORT_EncMAlignBitsToByte
__LINKINFO_IMPORT_EncMAlignBitsToByte:
	.bss 0
	.export __LINKINFO_IMPORT_EncMGetBitPtr
__LINKINFO_IMPORT_EncMGetBitPtr:
	.bss 0
	.export __LINKINFO_IMPORT_EncMInsertBit
__LINKINFO_IMPORT_EncMInsertBit:
	.bss 0
	.export __LINKINFO_IMPORT_EncMInsertBits
__LINKINFO_IMPORT_EncMInsertBits:
	.bss 0
	.export __LINKINFO_IMPORT_EncMSetBitBytePtr
__LINKINFO_IMPORT_EncMSetBitBytePtr:
	.bss 0
	.export __LINKINFO_IMPORT_EncMMoveBitBytes
__LINKINFO_IMPORT_EncMMoveBitBytes:
	.bss 0
	.export __LINKINFO_IMPORT_EncMWriteBitBytes
__LINKINFO_IMPORT_EncMWriteBitBytes:
	.bss 0
	.export __LINKINFO_IMPORT_encMBitMasks
__LINKINFO_IMPORT_encMBitMasks:
	.bss 0
	.export __LINKINFO_IMPORT_memmove
__LINKINFO_IMPORT_memmove:
	.bss 0
	.export __LINKINFO_IMPORT_encMCos32
__LINKINFO_IMPORT_encMCos32:
	.bss 0
	.export __LINKINFO_IMPORT_encMDct18
__LINKINFO_IMPORT_encMDct18:
	.bss 0
	.export __LINKINFO_IMPORT_EncMDct32
__LINKINFO_IMPORT_EncMDct32:
	.bss 0
	.export __LINKINFO_IMPORT_huffEnc2
__LINKINFO_IMPORT_huffEnc2:
	.bss 0
	.export __LINKINFO_IMPORT_encMHuff2BitsAndCode00
__LINKINFO_IMPORT_encMHuff2BitsAndCode00:
	.bss 0
	.export __LINKINFO_IMPORT_encMHuff2BitsAndCode01
__LINKINFO_IMPORT_encMHuff2BitsAndCode01:
	.bss 0
	.export __LINKINFO_IMPORT_encMHuff2BitsAndCode02
__LINKINFO_IMPORT_encMHuff2BitsAndCode02:
	.bss 0
	.export __LINKINFO_IMPORT_encMHuff2BitsAndCode03
__LINKINFO_IMPORT_encMHuff2BitsAndCode03:
	.bss 0
	.export __LINKINFO_IMPORT_encMHuff2BitsAndCode04
__LINKINFO_IMPORT_encMHuff2BitsAndCode04:
	.bss 0
	.export __LINKINFO_IMPORT_encMHuff2BitsAndCode05
__LINKINFO_IMPORT_encMHuff2BitsAndCode05:
	.bss 0
	.export __LINKINFO_IMPORT_encMHuff2BitsAndCode06
__LINKINFO_IMPORT_encMHuff2BitsAndCode06:
	.bss 0
	.export __LINKINFO_IMPORT_encMHuff2BitsAndCode07
__LINKINFO_IMPORT_encMHuff2BitsAndCode07:
	.bss 0
	.export __LINKINFO_IMPORT_encMHuff2BitsAndCode08
__LINKINFO_IMPORT_encMHuff2BitsAndCode08:
	.bss 0
	.export __LINKINFO_IMPORT_encMHuff2BitsAndCode09
__LINKINFO_IMPORT_encMHuff2BitsAndCode09:
	.bss 0
	.export __LINKINFO_IMPORT_encMHuff2BitsAndCode10
__LINKINFO_IMPORT_encMHuff2BitsAndCode10:
	.bss 0
	.export __LINKINFO_IMPORT_encMHuff2BitsAndCode11
__LINKINFO_IMPORT_encMHuff2BitsAndCode11:
	.bss 0
	.export __LINKINFO_IMPORT_encMHuff2BitsAndCode12
__LINKINFO_IMPORT_encMHuff2BitsAndCode12:
	.bss 0
	.export __LINKINFO_IMPORT_encMHuff2BitsAndCode13
__LINKINFO_IMPORT_encMHuff2BitsAndCode13:
	.bss 0
	.export __LINKINFO_IMPORT_encMHuff2BitsAndCode14
__LINKINFO_IMPORT_encMHuff2BitsAndCode14:
	.bss 0
	.export __LINKINFO_IMPORT_encMWinCoeffI
__LINKINFO_IMPORT_encMWinCoeffI:
	.bss 0
	.export __LINKINFO_IMPORT_encMHybridWinFuncI
__LINKINFO_IMPORT_encMHybridWinFuncI:
	.bss 0
	.export __LINKINFO_IMPORT_encMPow34
__LINKINFO_IMPORT_encMPow34:
	.bss 0
	.export __LINKINFO_IMPORT_encMButrCSCAI
__LINKINFO_IMPORT_encMButrCSCAI:
	.bss 0
	.export __LINKINFO_IMPORT_encDiv256
__LINKINFO_IMPORT_encDiv256:
	.bss 0
	.export __LINKINFO_IMPORT_encVOnePer
__LINKINFO_IMPORT_encVOnePer:
	.bss 0
	.export __LINKINFO_IMPORT_encVDbRatio
__LINKINFO_IMPORT_encVDbRatio:
	.bss 0
	.export __LINKINFO_IMPORT_evBands08k_64
__LINKINFO_IMPORT_evBands08k_64:
	.bss 0
	.export __LINKINFO_IMPORT_evMean08k_64
__LINKINFO_IMPORT_evMean08k_64:
	.bss 0
	.export __LINKINFO_IMPORT_evBands08k_256
__LINKINFO_IMPORT_evBands08k_256:
	.bss 0
	.export __LINKINFO_IMPORT_evMean08k_256
__LINKINFO_IMPORT_evMean08k_256:
	.bss 0
	.export __LINKINFO_IMPORT_evBands16k_128
__LINKINFO_IMPORT_evBands16k_128:
	.bss 0
	.export __LINKINFO_IMPORT_evMean16k_128
__LINKINFO_IMPORT_evMean16k_128:
	.bss 0
	.export __LINKINFO_IMPORT_evBands16k_512
__LINKINFO_IMPORT_evBands16k_512:
	.bss 0
	.export __LINKINFO_IMPORT_evMean16k_512
__LINKINFO_IMPORT_evMean16k_512:
	.bss 0
	.export __LINKINFO_IMPORT_evBands32k_128
__LINKINFO_IMPORT_evBands32k_128:
	.bss 0
	.export __LINKINFO_IMPORT_evMean32k_128
__LINKINFO_IMPORT_evMean32k_128:
	.bss 0
	.export __LINKINFO_IMPORT_evBands32k_1024
__LINKINFO_IMPORT_evBands32k_1024:
	.bss 0
	.export __LINKINFO_IMPORT_evMean32k_1024
__LINKINFO_IMPORT_evMean32k_1024:
	.bss 0
	.export __LINKINFO_IMPORT_evBands44k_128
__LINKINFO_IMPORT_evBands44k_128:
	.bss 0
	.export __LINKINFO_IMPORT_evMean44k_128
__LINKINFO_IMPORT_evMean44k_128:
	.bss 0
	.export __LINKINFO_IMPORT_evBands44k_1024
__LINKINFO_IMPORT_evBands44k_1024:
	.bss 0
	.export __LINKINFO_IMPORT_evMean44k_1024
__LINKINFO_IMPORT_evMean44k_1024:
	.bss 0
	.export __LINKINFO_IMPORT_evBands48k_256
__LINKINFO_IMPORT_evBands48k_256:
	.bss 0
	.export __LINKINFO_IMPORT_evMean48k_256
__LINKINFO_IMPORT_evMean48k_256:
	.bss 0
	.export __LINKINFO_IMPORT_evBands48k_1024
__LINKINFO_IMPORT_evBands48k_1024:
	.bss 0
	.export __LINKINFO_IMPORT_evMean48k_1024
__LINKINFO_IMPORT_evMean48k_1024:
	.bss 0
	.export __LINKINFO_IMPORT_EncVSampleClear
__LINKINFO_IMPORT_EncVSampleClear:
	.bss 0
	.export __LINKINFO_IMPORT_EncVShiftUpAndCopyToSamp
__LINKINFO_IMPORT_EncVShiftUpAndCopyToSamp:
	.bss 0
	.export __LINKINFO_IMPORT_MemCpySampleT
__LINKINFO_IMPORT_MemCpySampleT:
	.bss 0
	.export __LINKINFO_IMPORT_CodMpgDelete
__LINKINFO_IMPORT_CodMpgDelete:
	.bss 0
	.export __LINKINFO_IMPORT_CodMpgDecode
__LINKINFO_IMPORT_CodMpgDecode:
	.bss 0
	.export __LINKINFO_IMPORT_InitCommon
__LINKINFO_IMPORT_InitCommon:
	.bss 0
	.export __LINKINFO_IMPORT_CodMpgInitReadFrame
__LINKINFO_IMPORT_CodMpgInitReadFrame:
	.bss 0
	.export __LINKINFO_IMPORT_CodMpgReadFrame
__LINKINFO_IMPORT_CodMpgReadFrame:
	.bss 0
	.export __LINKINFO_IMPORT_CodMpgPlayFrame
__LINKINFO_IMPORT_CodMpgPlayFrame:
	.bss 0
	.export __LINKINFO_IMPORT_CalcCrc
__LINKINFO_IMPORT_CalcCrc:
	.bss 0
	.export __LINKINFO_IMPORT_rewindbitsy
__LINKINFO_IMPORT_rewindbitsy:
	.bss 0
	.export __LINKINFO_IMPORT_mpeg_crc_table
__LINKINFO_IMPORT_mpeg_crc_table:
	.bss 0
	.export __LINKINFO_IMPORT_InitLayer3
__LINKINFO_IMPORT_InitLayer3:
	.bss 0
	.export __LINKINFO_IMPORT_DecodeHeader
__LINKINFO_IMPORT_DecodeHeader:
	.bss 0
	.export __LINKINFO_IMPORT_mymem16cpy
__LINKINFO_IMPORT_mymem16cpy:
	.bss 0
	.export __LINKINFO_IMPORT_CodMpgSetPointer
__LINKINFO_IMPORT_CodMpgSetPointer:
	.bss 0
	.export __LINKINFO_IMPORT_codMpgFreqs
__LINKINFO_IMPORT_codMpgFreqs:
	.bss 0
	.export __LINKINFO_IMPORT_codMpgTabsel_123
__LINKINFO_IMPORT_codMpgTabsel_123:
	.bss 0
	.export __LINKINFO_IMPORT_MemCopyPackedBigEndianYY
__LINKINFO_IMPORT_MemCopyPackedBigEndianYY:
	.bss 0
	.export __LINKINFO_IMPORT_getbitsy
__LINKINFO_IMPORT_getbitsy:
	.bss 0
	.export __LINKINFO_IMPORT_MpgLayer3
__LINKINFO_IMPORT_MpgLayer3:
	.bss 0
	.export __LINKINFO_IMPORT_Pow43Gt100
__LINKINFO_IMPORT_Pow43Gt100:
	.bss 0
	.export __LINKINFO_IMPORT_III_get_side_info_1y
__LINKINFO_IMPORT_III_get_side_info_1y:
	.bss 0
	.export __LINKINFO_IMPORT_III_get_side_info_2y
__LINKINFO_IMPORT_III_get_side_info_2y:
	.bss 0
	.export __LINKINFO_IMPORT_III_get_scale_factors_1y
__LINKINFO_IMPORT_III_get_scale_factors_1y:
	.bss 0
	.export __LINKINFO_IMPORT_III_get_scale_factors_2y
__LINKINFO_IMPORT_III_get_scale_factors_2y:
	.bss 0
	.export __LINKINFO_IMPORT_III_huffman_decode_32y
__LINKINFO_IMPORT_III_huffman_decode_32y:
	.bss 0
	.export __LINKINFO_IMPORT_III_check_bands_32
__LINKINFO_IMPORT_III_check_bands_32:
	.bss 0
	.export __LINKINFO_IMPORT_III_dequantize_32
__LINKINFO_IMPORT_III_dequantize_32:
	.bss 0
	.export __LINKINFO_IMPORT_III_reorder_32
__LINKINFO_IMPORT_III_reorder_32:
	.bss 0
	.export __LINKINFO_IMPORT_III_i_stereo_32
__LINKINFO_IMPORT_III_i_stereo_32:
	.bss 0
	.export __LINKINFO_IMPORT_III_hybrid_32
__LINKINFO_IMPORT_III_hybrid_32:
	.bss 0
	.export __LINKINFO_IMPORT_MpgSendSpectrum
__LINKINFO_IMPORT_MpgSendSpectrum:
	.bss 0
	.export __LINKINFO_IMPORT_codMpgBandInfo
__LINKINFO_IMPORT_codMpgBandInfo:
	.bss 0
	.export __LINKINFO_IMPORT_pow43tab
__LINKINFO_IMPORT_pow43tab:
	.bss 0
	.export __LINKINFO_IMPORT_codMpgSlen
__LINKINFO_IMPORT_codMpgSlen:
	.bss 0
	.export __LINKINFO_IMPORT_codMpgPretab1
__LINKINFO_IMPORT_codMpgPretab1:
	.bss 0
	.export __LINKINFO_IMPORT_codMpgPretab2
__LINKINFO_IMPORT_codMpgPretab2:
	.bss 0
	.export __LINKINFO_IMPORT_codMpgNPow2
__LINKINFO_IMPORT_codMpgNPow2:
	.bss 0
	.export __LINKINFO_IMPORT_codMpgNPow1
__LINKINFO_IMPORT_codMpgNPow1:
	.bss 0
	.export __LINKINFO_IMPORT_pow43_2_mant
__LINKINFO_IMPORT_pow43_2_mant:
	.bss 0
	.export __LINKINFO_IMPORT_pow43_2_exp
__LINKINFO_IMPORT_pow43_2_exp:
	.bss 0
	.export __LINKINFO_IMPORT_pow43_4_mant
__LINKINFO_IMPORT_pow43_4_mant:
	.bss 0
	.export __LINKINFO_IMPORT_pow43_4_exp
__LINKINFO_IMPORT_pow43_4_exp:
	.bss 0
	.export __LINKINFO_IMPORT_Pow43
__LINKINFO_IMPORT_Pow43:
	.bss 0
	.export __LINKINFO_IMPORT_get1bity
__LINKINFO_IMPORT_get1bity:
	.bss 0
	.export __LINKINFO_IMPORT_codMpgNSlen2
__LINKINFO_IMPORT_codMpgNSlen2:
	.bss 0
	.export __LINKINFO_IMPORT_codMpgISlen2
__LINKINFO_IMPORT_codMpgISlen2:
	.bss 0
	.export __LINKINFO_IMPORT_codMpgHt
__LINKINFO_IMPORT_codMpgHt:
	.bss 0
	.export __LINKINFO_IMPORT_III_HuffDecodePairsy
__LINKINFO_IMPORT_III_HuffDecodePairsy:
	.bss 0
	.export __LINKINFO_IMPORT_codMpgHtc
__LINKINFO_IMPORT_codMpgHtc:
	.bss 0
	.export __LINKINFO_IMPORT_GetYy
__LINKINFO_IMPORT_GetYy:
	.bss 0
	.export __LINKINFO_IMPORT_III_DequantBand
__LINKINFO_IMPORT_III_DequantBand:
	.bss 0
	.export __LINKINFO_IMPORT_codMpgTan1_1
__LINKINFO_IMPORT_codMpgTan1_1:
	.bss 0
	.export __LINKINFO_IMPORT_codMpgTan2_1
__LINKINFO_IMPORT_codMpgTan2_1:
	.bss 0
	.export __LINKINFO_IMPORT_codMpgTan1_2
__LINKINFO_IMPORT_codMpgTan1_2:
	.bss 0
	.export __LINKINFO_IMPORT_codMpgTan2_2
__LINKINFO_IMPORT_codMpgTan2_2:
	.bss 0
	.export __LINKINFO_IMPORT_dct36_32_linear
__LINKINFO_IMPORT_dct36_32_linear:
	.bss 0
	.export __LINKINFO_IMPORT_III_DctSkipped
__LINKINFO_IMPORT_III_DctSkipped:
	.bss 0
	.export __LINKINFO_IMPORT_codMpgWin
__LINKINFO_IMPORT_codMpgWin:
	.bss 0
	.export __LINKINFO_IMPORT_codMpgWin1
__LINKINFO_IMPORT_codMpgWin1:
	.bss 0
	.export __LINKINFO_IMPORT_dct12_32_linear
__LINKINFO_IMPORT_dct12_32_linear:
	.bss 0
	.export __LINKINFO_IMPORT_logdb32
__LINKINFO_IMPORT_logdb32:
	.bss 0
	.export __LINKINFO_IMPORT_III_matrix_32
__LINKINFO_IMPORT_III_matrix_32:
	.bss 0
	.export __LINKINFO_IMPORT_III_antialias_32
__LINKINFO_IMPORT_III_antialias_32:
	.bss 0
	.export __LINKINFO_IMPORT_III_get_synth_32
__LINKINFO_IMPORT_III_get_synth_32:
	.bss 0
	.export __LINKINFO_IMPORT_SynthesisMono32_2
__LINKINFO_IMPORT_SynthesisMono32_2:
	.bss 0
	.export __LINKINFO_IMPORT_Synthesis32_2
__LINKINFO_IMPORT_Synthesis32_2:
	.bss 0
	.export __LINKINFO_IMPORT_codMpgAaCsca
__LINKINFO_IMPORT_codMpgAaCsca:
	.bss 0
	.export __LINKINFO_IMPORT_codMpgPowQuarter
__LINKINFO_IMPORT_codMpgPowQuarter:
	.bss 0
	.export __LINKINFO_IMPORT_pow43_1_mant
__LINKINFO_IMPORT_pow43_1_mant:
	.bss 0
	.export __LINKINFO_IMPORT_Pow43_32u
__LINKINFO_IMPORT_Pow43_32u:
	.bss 0
	.export __LINKINFO_IMPORT_pow43_1_exp
__LINKINFO_IMPORT_pow43_1_exp:
	.bss 0
	.export __LINKINFO_IMPORT_codMpgDecwin16scaled
__LINKINFO_IMPORT_codMpgDecwin16scaled:
	.bss 0
	.export __LINKINFO_IMPORT_cos12Tab
__LINKINFO_IMPORT_cos12Tab:
	.bss 0
	.export __LINKINFO_IMPORT_cos36Tab
__LINKINFO_IMPORT_cos36Tab:
	.bss 0
	.export __LINKINFO_IMPORT_cos64NewTab
__LINKINFO_IMPORT_cos64NewTab:
	.bss 0
	.export __LINKINFO_IMPORT_codMpgTab0
__LINKINFO_IMPORT_codMpgTab0:
	.bss 0
	.export __LINKINFO_IMPORT_codMpgTab1
__LINKINFO_IMPORT_codMpgTab1:
	.bss 0
	.export __LINKINFO_IMPORT_codMpgTab2
__LINKINFO_IMPORT_codMpgTab2:
	.bss 0
	.export __LINKINFO_IMPORT_codMpgTab3
__LINKINFO_IMPORT_codMpgTab3:
	.bss 0
	.export __LINKINFO_IMPORT_codMpgTab5
__LINKINFO_IMPORT_codMpgTab5:
	.bss 0
	.export __LINKINFO_IMPORT_codMpgTab6
__LINKINFO_IMPORT_codMpgTab6:
	.bss 0
	.export __LINKINFO_IMPORT_codMpgTab7
__LINKINFO_IMPORT_codMpgTab7:
	.bss 0
	.export __LINKINFO_IMPORT_codMpgTab8
__LINKINFO_IMPORT_codMpgTab8:
	.bss 0
	.export __LINKINFO_IMPORT_codMpgTab9
__LINKINFO_IMPORT_codMpgTab9:
	.bss 0
	.export __LINKINFO_IMPORT_codMpgTab10
__LINKINFO_IMPORT_codMpgTab10:
	.bss 0
	.export __LINKINFO_IMPORT_codMpgTab11
__LINKINFO_IMPORT_codMpgTab11:
	.bss 0
	.export __LINKINFO_IMPORT_codMpgTab12
__LINKINFO_IMPORT_codMpgTab12:
	.bss 0
	.export __LINKINFO_IMPORT_codMpgTab13
__LINKINFO_IMPORT_codMpgTab13:
	.bss 0
	.export __LINKINFO_IMPORT_codMpgTab15
__LINKINFO_IMPORT_codMpgTab15:
	.bss 0
	.export __LINKINFO_IMPORT_codMpgTab16
__LINKINFO_IMPORT_codMpgTab16:
	.bss 0
	.export __LINKINFO_IMPORT_codMpgTab24
__LINKINFO_IMPORT_codMpgTab24:
	.bss 0
	.export __LINKINFO_IMPORT_codMpgTab_c0
__LINKINFO_IMPORT_codMpgTab_c0:
	.bss 0
	.export __LINKINFO_IMPORT_codMpgTab_c1
__LINKINFO_IMPORT_codMpgTab_c1:
	.bss 0
	.export __LINKINFO_IMPORT_codMpgDct64skips2
__LINKINFO_IMPORT_codMpgDct64skips2:
	.bss 0
	.export __LINKINFO_IMPORT_dct64_32
__LINKINFO_IMPORT_dct64_32:
	.bss 0
	.export __LINKINFO_IMPORT__divide16signed
__LINKINFO_IMPORT__divide16signed:
	.bss 0
	.export __LINKINFO_IMPORT_strstr
__LINKINFO_IMPORT_strstr:
	.bss 0
	.export __LINKINFO_IMPORT_strncat
__LINKINFO_IMPORT_strncat:
	.bss 0
	.export __LINKINFO_IMPORT_strxfrm
__LINKINFO_IMPORT_strxfrm:
	.bss 0
	.export __LINKINFO_IMPORT_strspn
__LINKINFO_IMPORT_strspn:
	.bss 0
	.export __LINKINFO_IMPORT_strcspn
__LINKINFO_IMPORT_strcspn:
	.bss 0
	.export __LINKINFO_IMPORT_strcat
__LINKINFO_IMPORT_strcat:
	.bss 0
	.export __LINKINFO_IMPORT_strerror
__LINKINFO_IMPORT_strerror:
	.bss 0
	.export __LINKINFO_IMPORT_strpbrk
__LINKINFO_IMPORT_strpbrk:
	.bss 0
	.export __LINKINFO_IMPORT_memchr
__LINKINFO_IMPORT_memchr:
	.bss 0
	.export __LINKINFO_IMPORT_strncpyXX
__LINKINFO_IMPORT_strncpyXX:
	.bss 0
	.export __LINKINFO_IMPORT_strncpyXY
__LINKINFO_IMPORT_strncpyXY:
	.bss 0
	.export __LINKINFO_IMPORT_strncpyYX
__LINKINFO_IMPORT_strncpyYX:
	.bss 0
	.export __LINKINFO_IMPORT_strncpyYY
__LINKINFO_IMPORT_strncpyYY:
	.bss 0
	.export __LINKINFO_IMPORT_div16approx
__LINKINFO_IMPORT_div16approx:
	.bss 0
	.export __LINKINFO_IMPORT__divide16unsigned
__LINKINFO_IMPORT__divide16unsigned:
	.bss 0
	.export __LINKINFO_IMPORTASM_df_to_int
__LINKINFO_IMPORTASM_df_to_int:
	.bss 0
	.export __LINKINFO_IMPORTASM_uint_to_df
__LINKINFO_IMPORTASM_uint_to_df:
	.bss 0
	.export __LINKINFO_IMPORTASM_df_to_uint
__LINKINFO_IMPORTASM_df_to_uint:
	.bss 0
	.export __LINKINFO_IMPORTASM_df_to_ushort
__LINKINFO_IMPORTASM_df_to_ushort:
	.bss 0
	.export __LINKINFO_IMPORT_memmoveXX
__LINKINFO_IMPORT_memmoveXX:
	.bss 0
	.export __LINKINFO_IMPORT_logdb
__LINKINFO_IMPORT_logdb:
	.bss 0
	.export __LINKINFO_IMPORT_win64
__LINKINFO_IMPORT_win64:
	.bss 0
	.export __LINKINFO_IMPORT_win128
__LINKINFO_IMPORT_win128:
	.bss 0
	.export __LINKINFO_IMPORT_win256
__LINKINFO_IMPORT_win256:
	.bss 0
	.export __LINKINFO_IMPORT_win512
__LINKINFO_IMPORT_win512:
	.bss 0
	.export __LINKINFO_IMPORT_win1024
__LINKINFO_IMPORT_win1024:
	.bss 0
	.export __LINKINFO_IMPORT_win2048
__LINKINFO_IMPORT_win2048:
	.bss 0
	.export __LINKINFO_IMPORT_FLOOR1_fromdB_LOOKUP_i
__LINKINFO_IMPORT_FLOOR1_fromdB_LOOKUP_i:
	.bss 0
	.export __LINKINFO_IMPORT_Swap32Words
__LINKINFO_IMPORT_Swap32Words:
	.bss 0
	.export __LINKINFO_IMPORT_Swap32
__LINKINFO_IMPORT_Swap32:
	.bss 0
	.export __LINKINFO_IMPORT_Swap32Mix
__LINKINFO_IMPORT_Swap32Mix:
	.bss 0
	.export __LINKINFO_IMPORTASM_vsstdio
__LINKINFO_IMPORTASM_vsstdio:
	.bss 0
	.export __LINKINFO_IMPORT_iFlist
__LINKINFO_IMPORT_iFlist:
	.bss 0
	.export __LINKINFO_IMPORT_vo_kernel_init
__LINKINFO_IMPORT_vo_kernel_init:
	.bss 0
	.export __LINKINFO_IMPORT_vo_ungetc
__LINKINFO_IMPORT_vo_ungetc:
	.bss 0
	.export __LINKINFO_IMPORT_diskSurfaceY
__LINKINFO_IMPORT_diskSurfaceY:
	.bss 0
	.export __LINKINFO_IMPORT_VoFatNameFromDir
__LINKINFO_IMPORT_VoFatNameFromDir:
	.bss 0
	.export __LINKINFO_IMPORT_ZPC
__LINKINFO_IMPORT_ZPC:
	.bss 0
	.export __LINKINFO_IMPORT_CoarseSine
__LINKINFO_IMPORT_CoarseSine:
	.bss 0
	.export __LINKINFO_IMPORT_GetDivider
__LINKINFO_IMPORT_GetDivider:
	.bss 0
	.export __LINKINFO_IMPORT_timeCountAdd
__LINKINFO_IMPORT_timeCountAdd:
	.bss 0
	.export __LINKINFO_IMPORT_crc_table
__LINKINFO_IMPORT_crc_table:
	.bss 0
	.export __LINKINFO_IMPORT_crc32Tab
__LINKINFO_IMPORT_crc32Tab:
	.bss 0
	.export __LINKINFO_IMPORT_appIXYStart
__LINKINFO_IMPORT_appIXYStart:
	.bss 0
	.export _anyButtonPressed
_anyButtonPressed:
	.bss 1
	.export _idleMode
_idleMode:
	.bss 1
	.export _metadata
_metadata:
	.bss 1
	.export _seed
_seed:
	.bss 1
	.export _path
_path:
	.bss 1
	.export _index
_index:
	.bss 1
_directory:
	.bss 64
_nextDirectory:
	.bss 64
_tempDirectory:
	.bss 64
	.export _voltageChecked
_voltageChecked:
	.bss 1
	.export _offset
_offset:
	.bss 1
	.export _totalNumSongs
_totalNumSongs:
	.bss 1
_fnumMode67fb28:
	.bss 10
_filenum6d0408:
	.bss 10
_filenumcab9b8:
	.bss 10

//_____________________________________________________________
//
	.sect data_x,init_x	// 162 words
	.export _fileName
_fileName:

	.zero 128
	.export _fp
_fp:
	.word 0
	.export _openedFile
_openedFile:
	.word 0
	.export _decoderLibrary
_decoderLibrary:
	.word 0
	.export _audioDecoder
_audioDecoder:
	.word 0
	.export _errorString
_errorString:
	.word String_52
	.export _eCode
_eCode:
	.word 0
	.export _running
_running:
	.word 0
	.export _mute
_mute:
	.word 0
	.export _volume
_volume:
	.word 90
	.export _arrowSelection
_arrowSelection:
	.word 0
	.export _currentMenu
_currentMenu:
	.word 0
	.export _shuffle
_shuffle:
	.word 0
	.export _repeatSongStatus
_repeatSongStatus:
	.word 0
	.export _charging
_charging:
	.word 0
	.export _voltageTask
_voltageTask:
	.word 0
	.export _interfaceTask
_interfaceTask:
	.word 0
	.export _powerSavingTask
_powerSavingTask:
	.word 0
	.export _myCyclicNode
_myCyclicNode:
	.word 0
	.zero 1
	.zero 1
	.zero 1
	.word _monitorVoltage
	.zero 2
	.zero 2
	.zero 1
	.export _numSongsDirectory
_numSongsDirectory:
	.word 10
	.export _newSongSelected
_newSongSelected:
	.word 0
	.export _extension
_extension:
	.word String_53
	.export _cbut
_cbut:
	.word 1
	.export _auxChoice
_auxChoice:
	.word 1
	.export _filespec
_filespec:
	.word String_54
	.export _fileNum
_fileNum:
	.word 0

//_____________________________________________________________
//
	.sect data_x,const_x	// 759 words
loadedsca_1:
	.word "loaded scan \n"

	.zero 1
alloc_2:
	.word "alloc \n"

	.zero 1
metadatas_3:
	.word "Metadata space not allocated! \n"

	.zero 1
errorchec_4:
	.word "error check \n"

	.zero 1
w_5:
	.word "w"

	.zero 1
slookups_6:
	.word "S:lookup/songs.txt"

	.zero 1
masterson_7:
	.word "Master Song list not created! \n"

	.zero 1
file_8:
	.word "file \n"

	.zero 1
f_9:
	.word "F:"

	.zero 1
beforesca_10:
	.word "before scan \n"

	.zero 1
no_11:
	.word "no"

	.zero 1
fs_12:
	.word "F:%s"

	.zero 1
endofsca_13:
	.word "end of scan \n"

	.zero 1
cyclicvolt_14:
	.word "cyclicVoltage"

	.zero 1
idlecheck_15:
	.word "idleCheck"

	.zero 1
audiodec_16:
	.word "audiodec"

	.zero 1
smp3_17:
	.word "%s*.mp3"

	.zero 1
rbd_18:
	.word "rb#%d"

	.zero 1
mymeta_19:
	.word "MYMETA"

	.zero 1
cap3butto_20:
	.word "cap3 button pressed! \n"

	.zero 1
filedno_21:
	.word "File %d not found, finished playing.\n"

	.zero 1
couldntc_22:
	.word "Couldn't create audio decoder\n"

	.zero 1
s_23:
	.word "s"

	.zero 1
mp3_24:
	.word "MP3"

	.zero 1
ss_25:
	.word "%s/%s"

	.zero 1
fopens_26:
	.word "fopen(%s, %s) \n"

	.zero 1
unknown_27:
	.word "UNKNOWN"

	.zero 1
sis_28:
	.word "%s|%i|%s| \r\n"

	.zero 1
sis_29:
	.word "%s|%i|%s/| \r\n"

	.zero 1
failedto_30:
	.word "failed to open metafile pointer \n"

	.zero 1
pathnotf_31:
	.word "Path not found\n"

	.zero 1
system1_32:
	.word "SYSTEM~1"

	.zero 1
failedto_33:
	.word "failed to open dirFile for some reason \n"

	.zero 1
ss_34:
	.word "[%s] [%s] \n"

	.zero 1
String_35:
	.word "."

	.zero 1
String_36:
	.word ".."

	.zero 1
wewantto_37:
	.word "We want to skip [%s] \n"

	.zero 1
cd_38:
	.word "cd"

	.zero 1
currentdir_39:
	.word "currentDirectory - %s \n"

	.zero 1
fmp3_40:
	.word "F:*.mp3"

	.zero 1
s_41:
	.word "%s \n"

	.zero 1
slookupa_42:
	.word "S:lookup/artists/%s.txt"

	.zero 1
failedto_43:
	.word "failed to open metafile pointer\n"

	.zero 1
rb_44:
	.word "rb"

	.zero 1
fileexist_45:
	.word "file exists! \n"

	.zero 1
a_46:
	.word "a"

	.zero 1
s_47:
	.word "%s"

	.zero 1
openedin_48:
	.word "opened in append mode correctly"

	.zero 1
didnotop_49:
	.word "did not open in append mode"

	.zero 1
couldnot_50:
	.word "could not find path to create : %s \n"

	.zero 1
sis_51:
	.word "%s|%i|%s|\n"

	.zero 1
String_52:

	.zero 1
String_53:
	.word "*.mp3"

	.zero 1
String_54:
	.word "*.mp3"

	.zero 1

	.end
