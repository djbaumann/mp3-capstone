# VS1005g Internal FLASH example configuration file for eeprom_i.bin 2016-07-20
#
# Put all options first, before the image files.
# Each option must be on its own line.
# Options:
#   +v = Verbose; shows more detailed data when writing goes wrong.
#   -v = Not verbose (default).
#   +b = Use byte addressing; not recommended for internal memory.
#   -b = Use page addressing (default).
#   +f = VeriFy data after write (default).
#   -f = Don't veriFy data after write. Use with extreme caution!
#   +r = Write Rescue image if writing to internal eeprom (default).
#   -r = Don't write Rescue image to internal eeprom.
#        Use only if you absolutely know what you are doing! Using this
#        option incorrectly may make your VS1005 permanently inoperable!
#   +s0 = Set SPI speed  0.5 Mbit/s
#   +s1 = Set SPI speed  1.0 Mbit/s
#   +s2 = Set SPI speed  2.0 Mbit/s
#   +s3 = Set SPI speed  3.3 Mbit/s
#   +s4 = Set SPI speed  5.0 Mbit/s
#   +s5 = Set SPI speed  6.6 Mbit/s
#   +s6 = Set SPI speed 10.0 Mbit/s
#   +s7 = Set SPI speed 13.3 Mbit/s
#   +s8 = Set SPI speed 20.0 Mbit/s
#   +s9 = Set SPI speed 39.9 Mbit/s (default)
#   !d = Dump first 1 MiB of contents, stop execution.
#   !dx = Dump first x MiB of contents, stop execution.
#   !e = Erase 4 KiB at byte address 4096, stop execution.
#        If -r option is defined before !e, also remove rescue image
#        by also erasing 4 KiB at address 0 (dangerous).
#   !ec = Erase whole chip, stop execution. Use with caution.
#   !EC = Erase whole chip. Use with caution.
#   !t = Test write speed by erasing, then writing random data to first 1 MiB.
#   !c  = Calculate CRC32 checksum of first 1 MiB of FLASH contents, then stop.
#   !cx = Calculate CRC32 checksum of first x MiB of FLASH contents, then stop.
#   !C  = Calculate CRC32 checksum of first 1 MiB of FLASH contents.
#   !Cx = Calculate CRC32 checksum of first x MiB of FLASH contents.
#   !R  = Reset chip

# Erase whole chip, including rescue
#!ec

# Dump contents
#!d

# Then the files. The format is:
# address file.img
# where address is a decimal, octal, or hexadecimal byte address where
# to write the image file to.
#
# The following three examples all write the file eeprom.img to address 4096:
# 4096 eeprom.img
# 0x1000 eeprom.img
# 010000 eeprom.img

# Note: The rescue image is copied automatically to address 0, so it doesn't
# need to be listed here separetely.

#Empty image
#0 eeprom.img_empty
#4096 eeprom.img_empty

# Basic internal flash boot image that should include its own rescue image
#-r
#0 eeprom_iflash.img

+r

# E.g. VSOS to internel flash
#4096 nothing

# Default if eeprom_i.map didn't exist
4096 eeprom_i.img

#reset chip
!R
