
//_____________________________________________________________
//
	.sect code,PrintBlock	// 128 words
	.export _PrintBlock
_PrintBlock:
	ldx (I6)+1,NULL	// I6 += 1
	stx LR0,(I6)+1
	stx I6,(I6) ; sty I4,(I6)
	ldx (I6)+4,I4
	stx A0,(I6) ; sty A1,(I6)+1
	ldc printblock_1,A0	// ET1
	stx B1,(I6) ; sty D0,(I6)+1
	stx D1,(I6) ; sty I0,(I6)+1
	stx I1,(I6) ; sty LC,(I6)+1
	mv I2,I1	// I2 -> 'dev'
	ldc _myBuf,I2	// 'p'
	stx LS,(I6)+1 ; sty LE,(I6)

// ("PrintBlock(dev=%p, bl=%ld, v=%d)\n", dev, block, verbose);
	stx B0,(I6)+1	// 'verbose'
	stx C0,(I6)+1	// C0
	stx C1,(I6)+1	// C1
	stx I1,(I6)+1	// 'dev'
	call _vo_printf
	stx A0,(I6)	// ET1
// jumped away
	mv I1,I0	// 1 -> 1 -> ET3
	ldc _myBuf,A0	// ET0
	ldx (I6)-4,NULL ; ldy (I1)+7,NULL	// I6 += 1
//     if (dev->BlockRead(dev, block, 1, myBuf))
	stx A0,(I6)+1 ; sub NULL,ONES,A0	// ET0
	stx A0,(I6)+1	// ET3
	stx C0,(I6)+1	// C0
	stx C1,(I6)	// C1
	ldx (I1),A0	// 'dev' ==> 7 -> ET6
	mv A0,LR0
	jr
	ldc lo(F0B6),LR0	// (return address)
// jumped away
F0B6:
	ldx (I6)-3,NULL ; sub A0,NULL,A0	// I6 += -4
	ldc emediac_2,A0	// ET8
	jzc F0B4	// signed compare
	nop	// I6 += 1
// jumped away
	ldx (I6)-1,NULL ; sub B0,NULL,B0
//     if (!verbose)
	ldc block0x_3,A0
	jzc F0B9	// signed compare
	nop
// jumped away
F0B1:
	ldy (I6),LE ; ldx (I6)-1,LS
	ldy (I6),LC ; ldx (I6)-1,I1
	ldy (I6),I0 ; ldx (I6)-1,D1
	ldy (I6),D0 ; ldx (I6)-1,B1
	ldy (I6),A1 ; ldx (I6)-1,A0
	ldx (I4),I6 ; ldy (I4),I4
	ldx (I6)-1,NULL	// I6 += -1
	ldx (I6)-1,LR0
	jr
	nop
// jumped away
	ldc block0x_3,A0	// ETa
F0B9:
	ldx (I6)+1,NULL	// I6 += 1
//  vo_printf("  Block 0x%lx (%ld)\n", block, block);
	stx C0,(I6)+1	// C0
	stx C1,(I6)+1	// C1
	stx C0,(I6)+1	// C0
	stx C1,(I6)+1	// C1
	call _vo_printf
	stx A0,(I6)	// ETa
// jumped away
	and NULL,NULL,B1 ; ldx (I6)-5,NULL	// I6 += -5
//     for (i=0; i<256; i+=8)
	j F0B14
	sub NULL,ONES,D1	// 1 -> 0 -> ET14
// jumped away
F0B23:	// (loop lvl 2)
//  vo_printf("\n");
	call _vo_printf
	stx A0,(I6)	// ET2e
// jumped away
	ldx (I6)-1,NULL ; add B1,C0,B1	// I6 += -1
F0B14:	// (loop lvl 2)
	ldc 256,A0	// 256 -> ETd
	sub B1,A0,A0	// 'i' >= ETd -> AT34
	nop
	jge F0B1	// signed compare
	nop
// jumped away
	ldx (I6)+1,NULL ; add B1,B1,A0	// I6 += 1
//     }
// ("    %03x:", 2*i);
	stx A0,(I6)+1	// ETf
	ldc x_4,A0	// ET10
	call _vo_printf
	stx A0,(I6)	// ET10
// jumped away
	ldc 7,LC	// loop 8 iterations
//         for (j=0; j<8; j++)
	loop LC,F0B17-1
	ldx (I6)-2,NULL	// I6 += -2
//loop resumes
	ldc 8,C0	// 8 -> 0 -> ET12
	ldy (I6)+1,NULL ; ldx (I2)+1,A0	// I6 += 1
//         }
//         {
//  vo_printf(" %04x", *p++);
	stx A0,(I6)+1 ; sub NULL,ONES,D1	// ET16
	ldc x_5,A0	// ET17
	call _vo_printf
	stx A0,(I6)	// ET17
// jumped away
	ldx (I6)-2,NULL	// I6 += -2
//	(0 nop's needed)
// loop end
F0B17:	// loop exit
	ldc String_6,A0	// ET1b
	ldx (I6)+1,NULL	// I6 += 1
//  vo_printf(" ");
	call _vo_printf
	stx A0,(I6)	// ET1b
// jumped away
	ldx (I6)-1,NULL ; ldy (I2)-7,NULL	// I6 += -1
//         p -= 8;
//         for (j=0; j<8; j++)
	ldx (I2)-1,NULL ; and NULL,NULL,B0	// 0 -> 'j'
F0B25:	// (loop lvl 3)
	sub B0,C0,A0 ; ldx (I6)+1,NULL	// 'j' >= ET12 -> AT35
	ldc String_8,A0	// ET2e
	jge F0B23	// signed compare
	nop	// I6 += 1
// jumped away
	ldc 1,LC	// loop 2 iterations
//         }
// (k=1; k>=0; k--)
	loop LC,F0B27-1
	sub NULL,ONES,A1 ; ldx (I6)-1,NULL	// 1 -> 'k'
//loop resumes
	ldx (I4)+2,NULL ; mulss C0,A1	// I4 += 2
	stx D0,(I4) ; sty D1,(I4)-1	// D0 spills to #0
	stx B0,(I4) ; and D1,NULL,D1
	sty B1,(I4)+1 ; ldx (I2),C1	// B0 spills to #0
//             }

	mv C1,D0 ; add NULL,P,B	// (0) - ET1f -> ET20
	sub NULL,B0,A0	// ET1e msw AT38
	ashl D,A0,B ; ldy (I4)-1,D1	// AT38 <- ET20 -> AT39
	ldc 255,A0	// 255 -> ET22
	and B0,A0,C1 ; ldx (I4),B0	// ET21 and ET22 -> 'c'
	mv C1,I0 ; add C1,NULL,D0	// 'c' -> I0
// ch
	call _isprint
	ldy (I4)-1,B1	// 'c' -> 'ch'
// jumped away
	sub A0,NULL,A0	// ET26 == (0) -> (0)
	ldc 255,A0	// 255 -> ET27
	jzs F0B30	// signed compare
	nop
// jumped away
	sub C1,A0,A0	// 'c' == ET27 -> AT3a
	nop
	jzs F0B30	// signed compare
	nop
// jumped away
F0B31:	// (loop lvl 4)
	ldc c_7,A0	// ET29
	ldx (I6)+1,NULL	// I6 += 1
// ("%c", ch);
	stx D0,(I6)+1	// 'ch'
	call _vo_printf
	stx A0,(I6)	// ET29
// jumped away
	ldx (I6)-2,NULL ; add A1,ONES,A1	// I6 += -2
//	(0 nop's needed)
// loop end
F0B27:	// loop exit
//             p++;
	j F0B25
	sub B0,ONES,B0 ; ldx (I2)+1,NULL	// 'j' - (-1) -> 'j'
// jumped away
F0B30:	// (loop lvl 4)
	j F0B31
	ldc 46,D0	// 46 -> 'ch'
// jumped away
F0B4:
//     }
//     {
//  vo_printf("E: Media cannot be read\n");
	call _vo_printf
	stx A0,(I6)	// ET8
// jumped away
//         return;
	j F0B1
	ldx (I6)-1,NULL	// I6 += -1
// jumped away

//_____________________________________________________________
//
	.sect code,PrintFat32	// 481 words
	.export _PrintFat32
_PrintFat32:
	ldx (I6)+1,NULL	// I6 += 1
	stx LR0,(I6)+1
	stx I6,(I6) ; sty I4,(I6)
	ldx (I6)+6,I4
	stx A1,(I6) ; sty B1,(I6)+1
	stx D0,(I6) ; sty D1,(I6)+1
	stx I0,(I6) ; sty I1,(I6)+1
	mv I2,I1 ; and NULL,NULL,B1	// I2 -> 'dev'
	mv I1,I2 ; or NULL,ONES,A0	// 'dev' -> I2
	stx LC,(I6) ; sty LS,(I6)+1
	stx LE,(I6) ; ldy (I4)+1,NULL
	stx B0,(I4)+1	// B0 spills to #0
	stx C0,(I4)-1 ; sty C1,(I4)	// C0 spills to #0
// retVal
// canTBeFat32
// (dev, partitionStart, verbose);
	call _PrintBlock
	ldx (I4),B0 ; sty A0,(I4)-1	// unspill 'verbose' from #0
// jumped away
	ldc fat32sect_9,A0	// ET2
	ldx (I6)+1,NULL	// I6 += 1
//  vo_printf("FAT32 SECTOR 0:\n");
	call _vo_printf
	stx A0,(I6)	// ET2
// jumped away
	ldc jumpc_10,A0	// ET4
//  vo_printf("    Jump Code + NOP: ");
	call _vo_printf
	stx A0,(I6)	// I6 += 1
// jumped away
	ldc 2,LC	// loop 3 iterations
//     for (i=0x00; i<0x03; i++)
	loop LC,F1B7-1
	ldx (I6)-1,NULL ; and NULL,NULL,A1	// I6 += -1
//loop resumes
//     }
//     {
//  vo_printf(" %02x", GetBE8(myBuf, i));
	ldc _myBuf,I0	// I0
	call _GetBE8
	ldx (I6)+1,NULL ; add A1,NULL,B0	// 'i' -> B0
// jumped away
	ldx (I6)+1,NULL	// I6 += 1
	stx A0,(I6)+1	// ET9
	ldc x_11,A0	// ETa
	call _vo_printf
	stx A0,(I6)	// ETa
// jumped away
	ldx (I6)-2,NULL ; sub A1,ONES,A1	// I6 += -2
//	(0 nop's needed)
// loop end
F1B7:	// loop exit
	ldc String_8,A0	// ETe
	ldx (I6)+1,NULL	// I6 += 1
//  vo_printf("\n");
	call _vo_printf
	stx A0,(I6)	// ETe
// jumped away
	ldc oemna_12,A0	// ET10
//  vo_printf("    OEM Name: ");
	call _vo_printf
	stx A0,(I6)	// I6 += 1
// jumped away
	ldc 2,C0	// 2 -> 0 -> ET12
	ldx (I6)-1,NULL ; and NULL,NULL,A1	// I6 += -1
//     for (i=0; i<2; i++)
F1B17:	// (loop lvl 2)
	sub A1,C0,B0	// 'i' >= ET12 -> ATb6
	ldc 11,B0	// 11 -> B0
	jge F1B15	// signed compare
	ldc _myBuf,I0	// I0
// jumped away
//     }
// (j=0x03; j<0x0b; j++)
	ldc 7,LC	// loop 8 iterations
	loop LC,F1B19-1
	ldc 3,C1	// 3 -> 'j'
//loop resumes
//         }
//         {
//  vo_printf(!i ? " %02x" : "%c", GetBE8(myBuf, j));
	ldc _myBuf,I0	// I0
	call _GetBE8
	ldx (I6)+1,NULL ; add C1,NULL,B0	// 'j' -> B0
// jumped away
	ldx (I6)+1,NULL ; sub A1,NULL,A1	// I6 += 1
	stx A0,(I6)	// ET15
	jzc F1B23	// signed compare
	ldc x_11,B0	// AT16
// jumped away
F1B24:	// (loop lvl 3)
	ldx (I6)+1,NULL	// I6 += 1
	call _vo_printf
	stx B0,(I6)	// AT16
// jumped away
	ldx (I6)-2,NULL ; sub C1,ONES,C1	// I6 += -2
//	(0 nop's needed)
// loop end
F1B19:	// loop exit
//  vo_printf(!i ? " \"" : "\"\n");
	sub A1,NULL,A1	// 'i' != (0) -> (0)
	ldc String_13,B0	// AT1b
	jzc F1B27	// signed compare
	nop
// jumped away
F1B28:	// (loop lvl 2)
	ldx (I6)+1,NULL	// I6 += 1
	call _vo_printf
	stx B0,(I6)	// AT1b
// jumped away
	j F1B17
	ldx (I6)-1,NULL ; sub A1,ONES,A1	// I6 += -1
// jumped away
F1B27:	// (loop lvl 2)
	j F1B28
	ldc String_14,B0	// AT1b
// jumped away
F1B23:	// (loop lvl 3)
	j F1B24
	ldc c_7,B0	// AT16
// jumped away
F1B15:
//  vo_printf("    Bytes Per Sector %d\n", GetLE16(myBuf, 0x0b));
	call _GetLE16
	ldx (I6)+1,NULL	// I6 += 1
// jumped away
	ldx (I6)+1,NULL	// I6 += 1
	stx A0,(I6)+1	// ET1f
	ldc bytes_15,A0	// ET20
	call _vo_printf
	stx A0,(I6)	// ET20
// jumped away
	ldc _myBuf,I0	// I0
	ldx (I6)-1,NULL	// I6 += -2
//  vo_printf("    Sectors Per Cluster %d\n", GetBE8(myBuf, 0x0d));
	call _GetBE8
	ldc 13,B0	// 13 -> B0
// jumped away
	ldx (I6)+1,NULL	// I6 += 1
	stx A0,(I6)+1	// ET23
	ldc sector_16,A0	// ET24
	call _vo_printf
	stx A0,(I6)	// ET24
// jumped away
	ldc _myBuf,I0	// I0
	ldx (I6)-1,NULL	// I6 += -2
//  vo_printf("    Reserved Sectors %d\n", GetLE16(myBuf, 0x0e));
	call _GetLE16
	ldc 14,B0	// 14 -> B0
// jumped away
	ldx (I6)+1,NULL	// I6 += 1
	stx A0,(I6)+1	// ET27
	ldc reserv_17,A0	// ET28
	call _vo_printf
	stx A0,(I6)	// ET28
// jumped away
	ldc _myBuf,I0	// I0
	ldx (I6)-1,NULL	// I6 += -2
//  vo_printf("    Number Of FATs %d\n", (t1 = GetBE8(myBuf, 0x10)));
	call _GetBE8
	ldc 16,B0	// 16 -> B0
// jumped away
	ldx (I6)+1,NULL ; add A0,NULL,B0	// I6 += 1
	stx A0,(I6)+1	// A0 -> 't1'
	ldc number_18,A0	// ET2c
	call _vo_printf
	stx A0,(I6)	// ET2c
// jumped away
	ldx (I6)-2,NULL ; sub B0,NULL,B0	// I6 += -2
//     if (!t1)
	nop
	jzc F1B40	// unsigned compare
	nop
// jumped away
	ldc c_19,A0	// ET2e
	ldx (I6)+1,NULL	// I6 += 1
//     }
//     {
//  vo_printf("      -> CAN'T BE FAT32 (perhaps exFAT?)\n");
	call _vo_printf
	stx A0,(I6)	// ET2e
// jumped away
	ldx (I6)-1,NULL ; sub NULL,ONES,B1	// I6 += -1
//         canTBeFat32 = 1;
F1B40:
//  vo_printf("    16-bit Number of Sectors per FAT %d\n", (t1=GetLE16(myBuf, 0x13)));
	ldc _myBuf,I0	// I0
	ldc 19,B0	// 19 -> B0
	call _GetLE16
	ldx (I6)+1,NULL	// I6 += 1
// jumped away
	ldx (I6)+1,NULL ; add A0,NULL,B0	// I6 += 1
	stx A0,(I6)+1	// A0 -> 't1'
	ldc bit_20,A0	// ET32
	call _vo_printf
	stx A0,(I6)	// ET32
// jumped away
	ldx (I6)-2,NULL ; sub B0,NULL,B0	// I6 += -2
//     if (t1)
	nop
	jzs F1B45	// unsigned compare
	nop
// jumped away
	ldc c_21,A0	// ET34
	ldx (I6)+1,NULL	// I6 += 1
//     }
//     {
//  vo_printf("      -> CAN'T BE FAT32\n");
	call _vo_printf
	stx A0,(I6)	// ET34
// jumped away
	ldx (I6)-1,NULL ; sub NULL,ONES,B1	// I6 += -1
//         canTBeFat32 = 1;
F1B45:
//  vo_printf("    Media Descriptor (0xf8 for HDs) 0x%x\n", GetBE8(myBuf, 0x15));
	ldc _myBuf,I0	// I0
	ldc 21,B0	// 21 -> B0
	call _GetBE8
	ldx (I6)+1,NULL	// I6 += 1
// jumped away
	ldx (I6)+1,NULL	// I6 += 1
	stx A0,(I6)+1	// ET37
	ldc media_22,A0	// ET38
	call _vo_printf
	stx A0,(I6)	// ET38
// jumped away
	ldc _myBuf,I0	// I0
	ldx (I6)-1,NULL	// I6 += -2
//  vo_printf("    16-bit FAT size %d\n", (t1=GetLE16(myBuf, 0x16)));
	call _GetLE16
	ldc 22,B0	// 22 -> B0
// jumped away
	ldx (I6)+1,NULL ; add A0,NULL,B0	// I6 += 1
	stx A0,(I6)+1	// A0 -> 't1'
	ldc bit_23,A0	// ET3c
	call _vo_printf
	stx A0,(I6)	// ET3c
// jumped away
	ldx (I6)-2,NULL ; sub B0,NULL,B0	// I6 += -2
//     if (t1)
	nop
	jzs F1B52	// unsigned compare
	nop
// jumped away
	ldc c_21,A0	// ET34
	ldx (I6)+1,NULL	// I6 += 1
//     }
//     {
//  vo_printf("      -> CAN'T BE FAT32\n");
	call _vo_printf
	stx A0,(I6)	// ET34
// jumped away
	ldx (I6)-1,NULL ; sub NULL,ONES,B1	// I6 += -1
//         canTBeFat32 = 1;
F1B52:
//  vo_printf("    Sectors Per Track %d\n", GetLE16(myBuf, 0x18));
	ldc _myBuf,I0	// I0
	ldc 24,B0	// 24 -> B0
	call _GetLE16
	ldx (I6)+1,NULL	// I6 += 1
// jumped away
	ldx (I6)+1,NULL	// I6 += 1
	stx A0,(I6)+1	// ET40
	ldc sector_24,A0	// ET41
	call _vo_printf
	stx A0,(I6)	// ET41
// jumped away
	ldc _myBuf,I0	// I0
	ldx (I6)-1,NULL	// I6 += -2
//  vo_printf("    Number of Heads %d\n" , GetLE16(myBuf, 0x1a));
	call _GetLE16
	ldc 26,B0	// 26 -> B0
// jumped away
	ldx (I6)+1,NULL	// I6 += 1
	stx A0,(I6)+1	// ET44
	ldc number_25,A0	// ET45
	call _vo_printf
	stx A0,(I6)	// ET45
// jumped away
	ldc _myBuf,I0	// I0
	ldx (I6)-1,NULL	// I6 += -2
//  vo_printf("    Number of Hidden Sectors in Partition %ld\n", GetLE32(myBuf, 0x1c));
	call _GetLE32
	ldc 28,B0	// 28 -> B0
// jumped away
	ldx (I6)+1,NULL	// I6 += 1
	stx A0,(I6)+1	// A0
	ldc number_26,A0	// ET49
	stx A1,(I6)+1	// A1
	call _vo_printf
	stx A0,(I6)	// ET49
// jumped away
	ldc _myBuf,I0	// I0
	ldx (I6)-2,NULL	// I6 += -3
//  vo_printf("    32-bit Number of Sectors in Partition %ld\n", GetLE32(myBuf, 0x20));
	call _GetLE32
	ldc 32,B0	// 32 -> B0
// jumped away
	ldx (I6)+1,NULL	// I6 += 1
	stx A0,(I6)+1	// A0
	ldc bit_27,A0	// ET4d
	stx A1,(I6)+1	// A1
	call _vo_printf
	stx A0,(I6)	// ET4d
// jumped away
	ldx (I6)-3,NULL ; sub B1,NULL,B1	// I6 += -3
//     if (canTBeFat32)
	ldc _myBuf,I0	// I0
	jzc F1B64	// signed compare
	nop
// jumped away
//  vo_printf("    32-bit Number of Sectors per FAT %ld\n", GetLE32(myBuf, 0x24));
	ldc 36,B0	// 36 -> B0
	call _GetLE32
	ldx (I6)+1,NULL	// I6 += 1
// jumped away
	ldx (I6)+1,NULL	// I6 += 1
	stx A0,(I6)+1	// A0
	ldc bit_28,A0	// ET51
	stx A1,(I6)+1	// A1
	call _vo_printf
	stx A0,(I6)	// ET51
// jumped away
	ldc _myBuf,I0	// I0
	ldx (I6)-2,NULL	// I6 += -3
//  vo_printf("    Flags 0x%x\n", GetLE16(myBuf, 0x28));
	call _GetLE16
	ldc 40,B0	// 40 -> B0
// jumped away
	ldx (I6)+1,NULL	// I6 += 1
	stx A0,(I6)+1	// ET54
	ldc flags_29,A0	// ET55
	call _vo_printf
	stx A0,(I6)	// ET55
// jumped away
	ldc _myBuf,I0	// I0
	ldx (I6)-1,NULL	// I6 += -2
//  vo_printf("    Version of FAT32 Drive 0x%x\n", GetLE16(myBuf, 0x2a));
	call _GetLE16
	ldc 42,B0	// 42 -> B0
// jumped away
	ldx (I6)+1,NULL	// I6 += 1
	stx A0,(I6)+1	// ET58
	ldc versio_30,A0	// ET59
	call _vo_printf
	stx A0,(I6)	// ET59
// jumped away
	ldc _myBuf,I0	// I0
	ldx (I6)-1,NULL	// I6 += -2
//  vo_printf("    Cluster Number of the Start of the Root Directory %ld\n", GetLE32(myBuf, 0x2c));
	call _GetLE32
	ldc 44,B0	// 44 -> B0
// jumped away
	ldx (I6)+1,NULL	// I6 += 1
	stx A0,(I6)+1	// A0
	ldc cluste_31,A0	// ET5d
	stx A1,(I6)+1	// A1
	call _vo_printf
	stx A0,(I6)	// ET5d
// jumped away
	ldc _myBuf,I0	// I0
	ldx (I6)-2,NULL	// I6 += -3
//  vo_printf("    Sector Number of the FileSystem Information Sector %d\n", GetLE16(myBuf, 0x30));
	call _GetLE16
	ldc 48,B0	// 48 -> B0
// jumped away
	ldx (I6)+1,NULL	// I6 += 1
	stx A0,(I6)+1	// ET60
	ldc sector_32,A0	// ET61
	call _vo_printf
	stx A0,(I6)	// ET61
// jumped away
	ldc _myBuf,I0	// I0
	ldx (I6)-1,NULL	// I6 += -2
//  vo_printf("    Sector Number of the Backup Boot Sector %d\n", GetLE16(myBuf, 0x32));
	call _GetLE16
	ldc 50,B0	// 50 -> B0
// jumped away
	ldx (I6)+1,NULL	// I6 += 1
	stx A0,(I6)+1	// ET64
	ldc sector_33,A0	// ET65
	call _vo_printf
	stx A0,(I6)	// ET65
// jumped away
	ldc _myBuf,I0	// I0
	ldx (I6)-1,NULL	// I6 += -2
//  vo_printf("    Logical Drive Number of Partition %d\n", GetLE16(myBuf, 0x40));
	call _GetLE16
	ldc 64,B0	// 64 -> B0
// jumped away
	ldx (I6)+1,NULL	// I6 += 1
	stx A0,(I6)+1	// ET68
	ldc logica_34,A0	// ET69
	call _vo_printf
	stx A0,(I6)	// ET69
// jumped away
	ldc _myBuf,I0	// I0
	ldx (I6)-1,NULL	// I6 += -2
//  vo_printf("    Extended Signature (0x29) 0x%x\n", GetBE8 (myBuf, 0x42));
	call _GetBE8
	ldc 66,B0	// 66 -> B0
// jumped away
	ldx (I6)+1,NULL	// I6 += 1
	stx A0,(I6)+1	// ET6c
	ldc extend_35,A0	// ET6d
	call _vo_printf
	stx A0,(I6)	// ET6d
// jumped away
	ldc _myBuf,I0	// I0
	ldx (I6)-1,NULL	// I6 += -2
//  vo_printf("    Serial Number of Partition 0x%04lx\n", GetLE32(myBuf, 0x43));
	call _GetLE32
	ldc 67,B0	// 67 -> B0
// jumped away
	ldx (I6)+1,NULL	// I6 += 1
	stx A0,(I6)+1	// A0
	ldc serial_36,A0	// ET71
	stx A1,(I6)+1	// A1
	call _vo_printf
	stx A0,(I6)	// ET71
// jumped away
	ldc volume_37,A0	// ET73
	ldx (I6)-2,NULL	// I6 += 1
//  vo_printf("    Volume name of Partition:");
	call _vo_printf
	stx A0,(I6)	// ET73
// jumped away
	ldx (I6)-1,NULL ; and NULL,NULL,B1	// I6 += -1
//     for (i=0; i<2; i++)
F1B87:	// (loop lvl 2)
	ldc 2,A0	// 2 -> 0 -> ET12
	sub B1,A0,B0	// 'i' >= ET12 -> ATbe
	ldc 511,B0	// 511 -> B0
	jge F1B85	// signed compare
	ldc _myBuf,I0	// I0
// jumped away
//     }
// (j=0x47; j<0x52; j++)
	ldc 10,LC	// loop 11 iterations
	loop LC,F1B89-1
	ldc 71,A1	// 71 -> 'j'
//loop resumes
//         }
//         {
//  vo_printf(!i ? " %02x" : "%c", GetBE8(myBuf, j));
	ldc _myBuf,I0	// I0
	call _GetBE8
	ldx (I6)+1,NULL ; add A1,NULL,B0	// 'j' -> B0
// jumped away
	ldx (I6)+1,NULL ; sub B1,NULL,B1	// I6 += 1
	stx A0,(I6)	// ET78
	jzc F1B93	// signed compare
	ldc x_11,B0	// AT79
// jumped away
F1B94:	// (loop lvl 3)
	ldx (I6)+1,NULL	// I6 += 1
	call _vo_printf
	stx B0,(I6)	// AT79
// jumped away
	ldx (I6)-2,NULL ; sub A1,ONES,A1	// I6 += -2
//	(0 nop's needed)
// loop end
F1B89:	// loop exit
//  vo_printf(!i ? " \"" : "\"\n");
	sub B1,NULL,B1	// 'i' != (0) -> (0)
	ldc String_13,B0	// AT7c
	jzc F1B97	// signed compare
	nop
// jumped away
F1B98:	// (loop lvl 2)
	ldx (I6)+1,NULL	// I6 += 1
	call _vo_printf
	stx B0,(I6)	// AT7c
// jumped away
	j F1B87
	ldx (I6)-1,NULL ; sub B1,ONES,B1	// I6 += -1
// jumped away
F1B97:	// (loop lvl 2)
	j F1B98
	ldc String_14,B0	// AT7c
// jumped away
F1B93:	// (loop lvl 3)
	j F1B94
	ldc c_7,B0	// AT79
// jumped away
F1B85:
	and NULL,NULL,A0 ; ldx (I4)+1,NULL	// 0 -> 'retVal'
//     retVal = 0;
//  vo_printf("    Boot Record Signature (0x55 0xaa) 0x%02x 0x%02x\n", GetBE8(myBuf, 0x1fe), GetBE8(myBuf, 0x1ff));
	call _GetBE8
	ldx (I6)+1,NULL ; sty A0,(I4)-1	// I4 += 1
// jumped away
	ldc _myBuf,I0	// I0
	ldx (I6)+1,NULL	// I6 += 1
	stx A0,(I6)+1	// ET7f
	call _GetBE8
	ldc 510,B0	// 510 -> B0
// jumped away
	ldx (I6)+1,NULL	// I6 += 1
	stx A0,(I6)+1	// ET81
	ldc bootr_38,A0	// ET82
	call _vo_printf
	stx A0,(I6)	// ET82
// jumped away
	ldc _myBuf,I0	// I0
	ldx (I6)-2,NULL	// I6 += -3
//     fatStart = 0 + GetLE16(myBuf, 0x0e);
	call _GetLE16
	ldc 14,B0	// 14 -> B0
// jumped away
	ldc _myBuf,I0	// I0
	ldc 36,B0	// 36 -> B0
	ldx (I4)+4,NULL ; ldy (I6)+1,NULL	// I4 += 4
	stx A0,(I4) ; and A1,NULL,A1
//     fatSize = GetLE32(myBuf, 0x24);
	call _GetLE32
	sty A1,(I4)-4	// A1 spills to #0
// jumped away
	ldc _myBuf,I0	// I0
	ldc 16,B0	// 16 -> B0
//     rootStart = fatStart + fatSize * GetBE8(myBuf, 0x10);
	call _GetBE8
	ldx (I6)+1,NULL ; add A,NULL,D	// A -> 'fatSize'
// jumped away
	muluu A0,D1 ; mv I1,I2	// 'fatSize' * ET87 -> ET89
	add NULL,P,B ; ldx (I4)+4,NULL	// (32x16)
	muluu A0,D0 ; ldx (I4),A0
	add B0,P,B ; ldy (I4)-1,A1
	add A,B,A	// 'fatStart' + ET89 -> 'rootStart'
	stx A0,(I4) ; sty A1,(I4)-1	// A0 spills to #0
//     PrintBlock(dev, partitionStart+1, verbose);
	ldx (I4),A0 ; ldy (I4)-1,A1	// unspill A0 from #0
	call _PrintBlock
	ldx (I4)-1,B0 ; sub A,ONES,C	// 'partitionStart' - (-1) -> ET8c
// jumped away
//  vo_puts("FAT32 SECTOR 1:");
	ldc fat32sect_39,I2	// I2
	call _vo_puts
	ldx (I6)+1,NULL	// I6 += 1
// jumped away
//  vo_printf("    First Signature (0x52 0x52 0x61 0x41) 0x%02x 0x%02x 0x%02x 0x%02x\n", GetBE8(myBuf, 0), GetBE8(myBuf, 1), GetBE8(myBuf, 2), GetBE8(myBuf, 3));
	ldc _myBuf,I0	// I0
	ldc 3,B0	// 3 -> B0
	call _GetBE8
	ldx (I6)+1,NULL	// I6 += 1
// jumped away
	ldc _myBuf,I0	// I0
	ldx (I6)+1,NULL	// I6 += 1
	stx A0,(I6)+1	// ET90
	call _GetBE8
	ldc 2,B0	// 2 -> B0
// jumped away
	ldc _myBuf,I0	// I0
	ldx (I6)+1,NULL ; sub NULL,ONES,B0	// I6 += 1
	call _GetBE8
	stx A0,(I6)+1	// ET92
// jumped away
	ldc _myBuf,I0	// I0
	ldx (I6)+1,NULL ; and NULL,NULL,B0	// I6 += 1
	call _GetBE8
	stx A0,(I6)+1	// ET94
// jumped away
	ldx (I6)+1,NULL	// I6 += 1
	stx A0,(I6)+1	// ET96
	ldc first_40,A0	// ET97
	call _vo_printf
	stx A0,(I6)	// ET97
// jumped away
	ldc _myBuf,I0	// I0
	ldx (I6)-4,NULL	// I6 += -5
//  vo_printf("    Signature of FSInfo Sector (0x72 0x72 0x41 0x61) 0x%02x 0x%02x 0x%02x 0x%02x\n", GetBE8(myBuf, 0x1e4), GetBE8(myBuf, 0x1e5), GetBE8(myBuf, 0x1e6), GetBE8(myBuf, 0x1e7));
	call _GetBE8
	ldc 487,B0	// 487 -> B0
// jumped away
	ldc _myBuf,I0	// I0
	ldx (I6)+1,NULL	// I6 += 1
	stx A0,(I6)+1	// ET9a
	call _GetBE8
	ldc 486,B0	// 486 -> B0
// jumped away
	ldc _myBuf,I0	// I0
	ldx (I6)+1,NULL	// I6 += 1
	stx A0,(I6)+1	// ET9c
	call _GetBE8
	ldc 485,B0	// 485 -> B0
// jumped away
	ldc _myBuf,I0	// I0
	ldx (I6)+1,NULL	// I6 += 1
	stx A0,(I6)+1	// ET9e
	call _GetBE8
	ldc 484,B0	// 484 -> B0
// jumped away
	ldx (I6)+1,NULL	// I6 += 1
	stx A0,(I6)+1	// ETa0
	ldc signat_41,A0	// ETa1
	call _vo_printf
	stx A0,(I6)	// ETa1
// jumped away
	ldc _myBuf,I0	// I0
	ldx (I6)-4,NULL	// I6 += -5
//  vo_printf("    Number of Free Clusters 0x%08lx\n", GetLE32(myBuf, 0x1e8));
	call _GetLE32
	ldc 488,B0	// 488 -> B0
// jumped away
	ldx (I6)+1,NULL	// I6 += 1
	stx A0,(I6)+1	// A0
	ldc number_42,A0	// ETa5
	stx A1,(I6)+1	// A1
	call _vo_printf
	stx A0,(I6)	// ETa5
// jumped away
	ldc _myBuf,I0	// I0
	ldx (I6)-2,NULL	// I6 += -3
//  vo_printf("    Most Recently Allocated Cluster 0x%08lx\n", GetLE32(myBuf, 0x1ec));
	call _GetLE32
	ldc 492,B0	// 492 -> B0
// jumped away
	ldx (I6)+1,NULL	// I6 += 1
	stx A0,(I6)+1	// A0
	ldc mostr_43,A0	// ETa9
	stx A1,(I6)+1	// A1
	call _vo_printf
	stx A0,(I6)	// ETa9
// jumped away
	ldc _myBuf,I0	// I0
	ldx (I6)-2,NULL	// I6 += -3
//  vo_printf("    Boot Record Signature (0x55 0xaa) 0x%02x 0x%02x\n", GetBE8(myBuf, 0x1fe), GetBE8(myBuf, 0x1ff));
	call _GetBE8
	ldc 511,B0	// 511 -> B0
// jumped away
	ldc _myBuf,I0	// I0
	ldx (I6)+1,NULL	// I6 += 1
	stx A0,(I6)+1	// ETab
	call _GetBE8
	ldc 510,B0	// 510 -> B0
// jumped away
	ldx (I6)+1,NULL	// I6 += 1
	stx A0,(I6)+1	// ETac
	ldc bootr_38,A0	// ET82
	call _vo_printf
	stx A0,(I6)	// ET82
// jumped away
	ldx (I4)+3,NULL ; ldy (I6)-2,NULL	// I4 += 3
//  vo_printf("fatStart %ld, fatSize %ld, rootStart %ld\n", fatStart, fatSize, rootStart);
	ldx (I4),A0 ; ldy (I4)+1,A1	// unspill A0 from #0
	stx A0,(I6)+1	// A0
	stx A1,(I6)+1 ; ldy (I4),A1	// A1
	stx D0,(I6)+1	// D0
	stx D1,(I6)+1	// D1
	ldx (I4)-4,A0	// unspill A0 from #0
	stx A0,(I6)+1	// A0
	ldc fatstart_44,A0	// ETae
	stx A1,(I6)+1	// A1
	call _vo_printf
	stx A0,(I6)	// ETae
// jumped away
	ldx (I4)+2,NULL ; ldy (I6)-6,NULL	// I4 += 2
//  vo_printf("FAT ROOT SECTOR 0x%lx (%ld)\n", partitionStart+rootStart, partitionStart+rootStart);
	ldx (I4),A0 ; ldy (I4)+1,A1	// unspill A0 from #0
	ldx (I4),B0 ; ldy (I4)-3,B1	// unspill B0 from #0
	add A,B,C	// 'partitionStart' + 'rootStart' -> ETb0
	ldc fatroots_45,A0	// ETb1
	stx C0,(I6)+1	// C0
	stx C1,(I6)+1	// C1
	stx C0,(I6)+1	// C0
	stx C1,(I6)+1	// C1
	call _vo_printf
	stx A0,(I6)	// ETb1
// jumped away
	mv I1,I2	// 'dev' -> I2
	ldx (I4)+1,NULL ; ldy (I6)-5,NULL	// I4 += 1
//     PrintBlock(dev, partitionStart+rootStart, verbose);
	call _PrintBlock
	ldx (I4)-1,B0	// unspill 'verbose' from #0
// jumped away
F1B64:
	ldy (I4)+1,NULL ; ldx (I6)-1,LE	// I4 += 1
//         return retVal;
	ldy (I4)-1,A0	// unspill 'retVal' from #0
	ldy (I6),LS ; ldx (I6)-1,LC
	ldy (I6),I1 ; ldx (I6)-1,I0
	ldy (I6),D1 ; ldx (I6)-1,D0
	ldy (I6),B1 ; ldx (I6)-1,A1
	ldx (I4),I6 ; ldy (I4),I4
	ldx (I6)-1,NULL	// I6 += -1
	ldx (I6)-1,LR0
	jr
	nop
// jumped away

//_____________________________________________________________
//
	.sect code,main	// 316 words
	.export _main
_main:
	ldx (I6)+1,NULL	// I6 += 1
	stx LR0,(I6)+1
	stx I6,(I6) ; sty I4,(I6)
	ldx (I6)+4,I4
	stx A1,(I6) ; sty B0,(I6)+1
	stx B1,(I6) ; sty C0,(I6)+1
	stx C1,(I6) ; sty D0,(I6)+1
	stx D1,(I6) ; sty I0,(I6)+1
	stx I1,(I6) ; sty I2,(I6)+1
	stx I3,(I6) ; sty LC,(I6)+1
	stx LS,(I6)+1 ; sty LE,(I6)
	ldx (I4)-2,NULL ; and NULL,NULL,D0	// I4 += -2

// retCode
// fp
// verbose
// dev
// didSomething
// driveLetter
// =(RunLibraryFunction(("ParamSpl"),0,(int)(parameters)));
	ldx (I4)+4,I3	// unspill AT80 from #-2
	mv I3,A0	// AT80 -> ET3
	stx A0,(I6)+1 ; and NULL,NULL,A0	// ET3
	stx A0,(I6)+1	// ET4
	ldc paramspl_46,A0	// ET5
	stx A0,(I6) ; and NULL,NULL,A0	// ET5
	stx A0,(I4)-1	// 'didSomething' spills to #0
	sty A0,(I4) ; or NULL,ONES,A0	// 0 -> 'dev'
	call _RunLibraryFunction
	stx A0,(I4)-1	// 'retCode' spills to #0
// jumped away
	add A0,NULL,D1 ; ldx (I6)-3,NULL	// I6 += -3
//     for (i=0; i<nParam; i++)
	j F2B7
	and NULL,NULL,B1	// 0 -> 'i'
// jumped away
F2B4:	// (loop lvl 2)
//     }
// paramVal
	stx A0,(I6)+1	// ET2
	stx I4,(I6)+1 ; ldy (I4)-3,NULL	// ET7
	call _strtol
	stx I3,(I6)	// AT80
// jumped away
	ldc h_47,I1	// I1
	ldx (I6)-3,NULL ; add A,NULL,C	// I6 += -3
// (!strcmp(p, "-h"))
	call _strcmp
	mv I3,I0	// A -> 'paramVal'
// jumped away
	sub A0,NULL,A0	// ETb == (0) -> (0)
	nop
	jzs F2B9	// signed compare
	nop
// jumped away
	mv I3,I0	// AT80 -> I0
//         else if (!strcmp(p, "-v"))
	call _strcmp
	ldc v_53,I1	// I1
// jumped away
	sub A0,NULL,A0 ; mv I3,I0	// ET17 == (0) -> (0)
	nop
	jzs F2B19	// signed compare
	nop	// AT80 -> I0
// jumped away
//         else if (!strcmp(p, "+v"))
	call _strcmp
	ldc v_54,I1	// I1
// jumped away
	sub A0,NULL,A0 ; ldx (I4)+1,NULL	// ET1a == (0) -> (0)
	nop
	jzs F2B23	// signed compare
	and NULL,NULL,A0	// I4 += 1
// jumped away
	ldx (I4)+2,NULL
//         else if (!(*endP))
	ldx (I4)-3,I0	// I4 ==> 'endP'
	ldx (I0),A0/*V*/	// 'endP' ==> ET1b
	sub A0,NULL,A0	// ET1b == (0) -> (0)
	ldx (I3),A0	// AT80 ==> ET20
	jzs F2B27	// signed compare
	nop
// jumped away
//         }
//         else
//         {
//             driveLetter = toupper(*p);
	call _toupper
	mv A0,I0	// ET20 -> I0
// jumped away
	mv I0,B0	// I0 -> 'driveLetter'
//             dev = 0;
//             if (strlen(p) != 2 || p[1] != ':' || driveLetter < 'A' || driveLetter > 'Z')
	call _strlen
	mv I3,I0	// AT80 -> I0
// jumped away
	mv A0,A1	// A0 -> ET22
	ldc 2,A0	// 2 -> ET23
	sub A1,A0,A0	// ET22 != ET23 -> AT73
	ldc 58,A0	// 58 -> ET26
	jzc F2B35	// unsigned compare
	nop
// jumped away
	ldx (I3)+1,NULL	// AT80 += 1
	ldx (I3)-1,A1	// AT80 ==> 1 -> ET25
	sub A1,A0,A0	// ET25 != ET26 -> AT72
	ldc 65,A0	// 65 -> ET27
	jzc F2B35	// signed compare
	nop
// jumped away
	sub B0,A0,A0	// 'driveLetter' < ET27 -> AT71
	ldc 90,A0	// 90 -> ET28
	jlt F2B35	// signed compare
	nop
// jumped away
	sub B0,A0,A0	// 'driveLetter' > ET28 -> AT70
	ldc 65,A0	// 65 -> ET27
	jgt F2B35	// signed compare
	nop
// jumped away
//             if (!(dev =(vo_pdevices[(driveLetter)-'A'])))
	sub B0,A0,A1	// 'driveLetter' - ET27 -> ET2c
	ldc _vo_pdevices,A0	// ET2b
	add A0,A1,A0	// ET2b + ET2c -> AT7c
	mv A0,I0	// AT7c -> ET2d
	ldx (I0),D0	// ET2d ==> 'dev'
	sub D0,NULL,D0	// 'dev' == (0) -> (0)
	nop
	jzs F2B42	// signed compare
	nop
// jumped away
	mv D0,I2	// 'dev' -> I2
	ldc 5,C0	// 5 -> C0
	ldc 0,I1	// 0 -> I1
//             ioctl(dev,5,0);
	call _ioctl
	ldx (I6)+1,NULL	// I6 += 1
// jumped away
F2B11:	// (loop lvl 2)
//         p += strlen(p)+1;
	call _strlen
	mv I3,I0	// AT80 -> I0
// jumped away
	sub A0,ONES,A1 ; mv I3,A0	// ET33 - (-1) -> ET35
	add A0,A1,A0	// AT7d + ET35 -> ET36
	sub B1,ONES,B1 ; mv A0,I3	// 'i' - (-1) -> 'i'
F2B7:	// (loop lvl 2)
	sub B1,D1,A0 ; ldx (I4)+3,NULL	// 'i' < 'nParam' -> AT68
	ldy (I6)+1,NULL	// I4 += 3
	jlt F2B4	// signed compare
	and NULL,NULL,A0	// 0 -> ET2
// jumped away
	ldx (I4)-1,NULL ; ldy (I6)-1,NULL
//     if (didSomething)
	ldx (I4)-2,A0	// unspill 'didSomething' from #0
	sub A0,NULL,A0	// 'didSomething' != (0) -> (0)
	nop
	jzc F2B18	// signed compare
	nop
// jumped away
//     if (!dev)
	sub D0,NULL,D0 ; ldx (I6)+1,NULL	// 'dev' == (0) -> (0)
	ldc enodriv_55,A0	// ET1c
	jzs F2B49	// signed compare
	nop	// 1 -> 1 -> ET34
// jumped away
	ldc _myBuf,A0	// ET3a
//     if (dev->BlockRead(dev, 0, 1, myBuf))
	stx A0,(I6)+1 ; sub NULL,ONES,A0	// ET3a
	stx A0,(I6)+1 ; and A,NULL,A	// ET34
	stx A0,(I6)+1	// A0
	ldc 7,A0	// 7 -> 1 -> ET3c
	stx A1,(I6) ; add D0,A0,A0	// A1
	mv A0,I2 ; mv D0,I0	// AT7e -> ET3d
	ldx (I2),A0	// ET3d ==> 7 -> ET3e
	mv A0,LR0
	jr
	ldc lo(F2B54),LR0	// (return address)
// jumped away
F2B54:
	ldx (I6)-4,NULL ; sub A0,NULL,A0	// I6 += -4
	nop
	jzc F2B52	// signed compare
	nop
// jumped away
//     if (GetBE8(myBuf, 0x0) == 0xeb)
	ldc _myBuf,I0	// I0
	call _GetBE8
	ldx (I6)+1,NULL ; and NULL,NULL,B0	// 0 -> B0
// jumped away
	mv A0,A1	// A0 -> ET42
	ldc 235,A0	// 235 -> 1 -> ET43
	sub A1,A0,A0	// ET42 == ET43 -> AT76
	nop
	jzs F2B56	// unsigned compare
	nop
// jumped away
//     else if (GetBE16(myBuf, 0x1fe) == 0x55aa)
	ldc _myBuf,I0	// I0
	ldc 510,B0	// 510 -> B0
	call _GetBE16
	ldx (I6)+1,NULL	// I6 += 1
// jumped away
	add A0,NULL,A1 ; ldx (I6)+1,NULL	// A0 -> ET48
	ldc 21930,A0	// 21930 -> 1 -> ET49
	sub A1,A0,A0	// ET48 == ET49 -> AT77
	ldc foundnoth_64,A0	// ET63
	jzs F2B62	// unsigned compare
	nop	// I6 += 1
// jumped away
//     }
//     else
//     {
//  vo_printf("FOUND NOTHING IN BLOCK 0\n");
	call _vo_printf
	stx A0,(I6)	// ET63
// jumped away
	mv D0,I2 ; and C,NULL,C	// 'dev' -> I2
	ldx (I4)+1,NULL ; ldy (I6)-1,NULL	// I4 += 1
//         PrintBlock(dev, 0, verbose);
	call _PrintBlock
	ldy (I4)-1,B0	// 0 -> C
// jumped away
F2B58:
	ldx (I4)+1,NULL ; and NULL,NULL,A0	// I4 += 1
//     retCode = 0;
//     finally :
	stx A0,(I4)-1	// 'retCode' spills to #0
F2B18:
//         if (fp)
	ldc 0,A0	// 0 -> 'fp'
	sub A0,NULL,A0	// 'fp' == (0) -> (0)
	nop
	jzs F2B88	// signed compare
	nop
// jumped away
//         }
//         {
//  vo_fclose(fp);
	and NULL,NULL,A0	// 0 -> 'fp'
	call _vo_fclose
	mv A0,I0	// 'fp' -> I0
// jumped away
F2B88:
	ldx (I4)+1,NULL ; ldy (I6),LE	// I4 += 1
//         return retCode;
	ldx (I4)-1,A0	// unspill 'retCode' from #0
	ldx (I6)-1,LS
	ldy (I6),LC ; ldx (I6)-1,I3
	ldy (I6),I2 ; ldx (I6)-1,I1
	ldy (I6),I0 ; ldx (I6)-1,D1
	ldy (I6),D0 ; ldx (I6)-1,C1
	ldy (I6),C0 ; ldx (I6)-1,B1
	ldy (I6),B0 ; ldx (I6)-1,A1
	ldx (I4),I6 ; ldy (I4),I4
	ldx (I6)-1,NULL	// I6 += -1
	ldx (I6)-1,LR0
	jr
	nop
// jumped away
	ldx (I6)+1,NULL
F2B62:
	ldc foundpart_59,A0	// ET4b
	ldc 446,B1	// 446 -> 'partitionBase'
//     }
// partitionBase
// ("FOUND PARTITION TABLE\n");
	call _vo_printf
	stx A0,(I6)	// ET4b
// jumped away
	mv D0,I2 ; and C,NULL,C	// 'dev' -> I2
	ldx (I4)+1,NULL ; ldy (I6)-1,NULL	// I4 += 1
//         PrintBlock(dev, 0, verbose);
	call _PrintBlock
	ldy (I4)-1,B0	// 0 -> C
// jumped away
//         for (i=0; i<4; i++)
	ldc 3,LC	// loop 4 iterations
	loop LC,F2B69-1
	ldc 0,D1	// 0 -> 'i'
//loop resumes
//         }
//         {
//             t32 = GetLE32(myBuf, partitionBase+8);
	ldc 8,A0	// 8 -> 1 -> ET4e
	ldc _myBuf,I0	// I0
	call _GetLE32
	ldx (I6)+1,NULL ; add B1,A0,B0	// 'partitionBase' + ET4e -> ET4f
// jumped away
	ldx (I6)+1,NULL ; add A,NULL,C	// I6 += 1
	stx A0,(I6)+1 ; sub D1,ONES,A0	// A -> 't32'
//  vo_printf("PARTITION%d = 0x%08lx", i+1, t32);
	stx A1,(I6)+1	// C1
	stx A0,(I6)+1	// ET38
	ldc partition_60,A0	// ET51
	call _vo_printf
	stx A0,(I6)	// ET51
// jumped away
	ldc 0,C2	// update guard bits (cmp)
	ldx (I6)-3,NULL ; sub C,NULL,C	// I6 += -4
//             if (t32)
	ldc none_63,A0	// ET60
	jzs F2B75	// unsigned compare
	nop	// I6 += 1
// jumped away
//             }
// partitionType
	ldc 4,A0	// 4 -> 1 -> ET53
	ldc _myBuf,I0	// I0
	call _GetBE8
	add B1,A0,B0	// 'partitionBase' + ET53 -> ET54
// jumped away
// (", type 0x%02x (%s)\n", partitionType, partitionType < sizeof(partTypes)/sizeof(partTypes[0]) ? partTypes[partitionType] : "unknown");
	ldc _partTypes93ab90,A1	// ET56
	add A1,A0,A1 ; ldx (I6)+1,NULL	// ET56 + 'partitionType' -> AT7f
	mv A1,I0	// AT7f -> ET57
	ldc 16,A1	// 16 -> 1 -> ET5a
	ldx (I0),B0 ; sub A0,A1,A1	// ET57 ==> ET58
	nop
	jcc F2B79	// unsigned compare
	nop
// jumped away
	ldc unknown_61,B0	// ET58
F2B79:	// (loop lvl 2)
	stx B0,(I6)+1	// ET58
	stx A0,(I6)+1	// 'partitionType'
	ldc type0x_62,A0	// ET5c
	call _vo_printf
	stx A0,(I6)	// ET5c
// jumped away
	ldc 62708,A1	// 62708 -> A1
	ldc 0,A2	// update guard bits (cmp)
	ldc 0,C2	// update guard bits (cmp)
	add A1,NULL,A0 ; ldx (I6)-3,NULL
	sub C,A,A	// I6 += -3
//                 if (t32 != 0xf4f4f4f4)
	nop
	jzs F2B76	// unsigned compare
	nop
// jumped away
	mv D0,I2	// 'dev' -> I2
	ldx (I4)+1,NULL	// I4 += 1
//                 }
//                 {
//                     PrintFat32(dev, t32, verbose);
	call _PrintFat32
	ldy (I4)-1,B0	// unspill 'verbose' from #0
// jumped away
F2B76:	// (loop lvl 2)
//             partitionBase += 0x10;
	ldc 16,A0	// 16 -> 1 -> ET5a
	sub D1,ONES,D1	// 'i' - (-1) -> 'i'
	add B1,A0,B1	// 'partitionBase' + ET5a -> 'partitionBase'
//	(0 nop's needed)
// loop end
F2B69:	// loop exit
	j F2B58
	nop
// jumped away
F2B75:	// (loop lvl 2)
//             }
//             else
//             {
//  vo_printf(" (none)\n");
	call _vo_printf
	stx A0,(I6)	// ET60
// jumped away
	j F2B76
	ldx (I6)-1,NULL	// I6 += -1
// jumped away
F2B56:
	ldc fatfound_58,A0	// ET44
	ldx (I6)+1,NULL	// I6 += 1
//     }
//     {
//  vo_printf("FAT FOUND IN ROOT BLOCK\n");
	call _vo_printf
	stx A0,(I6)	// ET44
// jumped away
	mv D0,I2 ; and C,NULL,C	// 'dev' -> I2
	ldx (I4)+1,NULL ; ldy (I6)-1,NULL	// I4 += 1
//         PrintFat32(dev, 0, verbose);
	ldy (I4)-1,B0	// 0 -> C
	call _PrintFat32
	ldc F2B58,LR0
// jumped away
F2B52:
	ldc emediac_2,A0	// ET40
	ldx (I6)+1,NULL	// I6 += 1
//     }
//     {
//  vo_printf("E: Media cannot be read\n");
	call _vo_printf
	stx A0,(I6)	// ET40
// jumped away
//         goto finally;
	j F2B18
	ldx (I6)-1,NULL	// I6 += -1
// jumped away
F2B49:
//     }
//     {
//  vo_printf("E: No drive letter specified\n");
	call _vo_printf
	stx A0,(I6)	// ET1c
// jumped away
//         goto finally;
	j F2B18
	ldx (I6)-1,NULL	// I6 += -1
// jumped away
F2B42:
	ldc enonexi_57,A0	// ET2f
	ldx (I6)+1,NULL	// I6 += 1
//             }
//             {
//  vo_printf("E: Non-existing drive \"%s\"\n", p);
	stx I3,(I6)+1	// AT80
	call _vo_printf
	stx A0,(I6)	// ET2f
// jumped away
//                 goto finally;
	j F2B18
	ldx (I6)-2,NULL	// I6 += -2
// jumped away
F2B35:
	ldc eillegal_56,A0	// ET29
	ldx (I6)+1,NULL	// I6 += 1
//             }
//             {
//  vo_printf("E: Illegal drive name \"%s\"\n", p);
	stx I3,(I6)+1	// AT80
	call _vo_printf
	stx A0,(I6)	// ET29
// jumped away
//                 goto finally;
	j F2B18
	ldx (I6)-2,NULL	// I6 += -2
// jumped away
F2B27:	// (loop lvl 2)
//         }
//         {
//             if (!dev)
	sub D0,NULL,D0	// 'dev' == (0) -> (0)
	ldc enodriv_55,A0	// ET1c
	jzs F2B30	// signed compare
	nop
// jumped away
//             PrintBlock(dev, paramVal, 1);
	ldx (I4)+2,NULL ; sub NULL,ONES,B0	// I4 += 2
	call _PrintBlock
	mv D0,I2	// 'dev' -> I2
// jumped away
//             didSomething++;
	ldx (I4),A0	// unspill 'didSomething' from #0
	sub A0,ONES,A0	// 'didSomething' - (-1) -> 'didSomething'
	j F2B11
	stx A0,(I4)-2	// 'didSomething' spills to #0
// jumped away
F2B30:
	ldx (I6)+1,NULL	// I6 += 1
//             }
//             {
//  vo_printf("E: No drive letter specified\n");
	call _vo_printf
	stx A0,(I6)	// ET1c
// jumped away
//                 goto finally;
	j F2B18
	ldx (I6)-1,NULL	// I6 += -1
// jumped away
F2B23:	// (loop lvl 2)
//         }
//         {
//             verbose = 0;
	j F2B11
	sty A0,(I4)-1	// 'verbose' spills to #0
// jumped away
F2B19:	// (loop lvl 2)
	ldx (I4)+1,NULL ; sub NULL,ONES,A0	// I4 += 1
//         }
//         {
//             verbose = 1;
	j F2B11
	sty A0,(I4)-1	// 'verbose' spills to #0
// jumped away
F2B9:
//         }
//         {
//  vo_puts("Usage: FatInfo x: [blkNum] [-v|+v|-h]");
	ldc usagefat_48,I2	// I2
	call _vo_puts
	ldx (I6)+1,NULL	// I6 += 1
// jumped away
//  vo_puts("x:\tDrive name");
	ldc xdriven_49,I2	// I2
	call _vo_puts
	ldx (I6)+1,NULL	// I6 += 1
// jumped away
//  vo_puts("blkNum\tPrint contents of a disk block");
	ldc blknumpri_50,I2	// I2
	call _vo_puts
	ldx (I6)+1,NULL	// I6 += 1
// jumped away
//  vo_puts("-v|+v\tVerbose on/off");
	ldc vvverb_51,I2	// I2
	call _vo_puts
	ldx (I6)+1,NULL	// I6 += 1
// jumped away
//  vo_puts("-h\tShow this help\n");
	ldc hshowth_52,I2	// I2
	ldx (I6)+1,NULL	// I6 += 1
	call _vo_puts
	ldc F2B18,LR0
// jumped away

//_____________________________________________________________
//
	.sect data_x,bss_x	// 256 words
	.export __LINKINFO_ABS_appFlags_2255
__LINKINFO_ABS_appFlags_2255:
	.bss 0
	.export __LINKINFO_ABS_currentDirectory_2254
__LINKINFO_ABS_currentDirectory_2254:
	.bss 0
	.export __LINKINFO_IMPORT_SetHookFunction
__LINKINFO_IMPORT_SetHookFunction:
	.bss 0
	.export __LINKINFO_IMPORT___ReAllocMemXY
__LINKINFO_IMPORT___ReAllocMemXY:
	.bss 0
	.export __LINKINFO_IMPORT___AllocMemXY
__LINKINFO_IMPORT___AllocMemXY:
	.bss 0
	.export __LINKINFO_IMPORTASM_MonitorIntBreak
__LINKINFO_IMPORTASM_MonitorIntBreak:
	.bss 0
	.export __LINKINFO_IMPORTASM_MonitorBreak
__LINKINFO_IMPORTASM_MonitorBreak:
	.bss 0
	.export __LINKINFO_IMPORT___FreeMemX
__LINKINFO_IMPORT___FreeMemX:
	.bss 0
	.export __LINKINFO_IMPORT___FreeMemY
__LINKINFO_IMPORT___FreeMemY:
	.bss 0
	.export __LINKINFO_IMPORTASM_MonitorPutch15
__LINKINFO_IMPORTASM_MonitorPutch15:
	.bss 0
	.export __LINKINFO_IMPORT_RealDelayMicroSec
__LINKINFO_IMPORT_RealDelayMicroSec:
	.bss 0
	.export __LINKINFO_IMPORT_intOS
__LINKINFO_IMPORT_intOS:
	.bss 0
	.export __LINKINFO_IMPORT_Restart
__LINKINFO_IMPORT_Restart:
	.bss 0
	.export __LINKINFO_IMPORT_memPoolX
__LINKINFO_IMPORT_memPoolX:
	.bss 0
	.export __LINKINFO_IMPORT_memPoolY
__LINKINFO_IMPORT_memPoolY:
	.bss 0
	.export __LINKINFO_IMPORT_SinTest
__LINKINFO_IMPORT_SinTest:
	.bss 0
	.export __LINKINFO_IMPORT_PinLoop
__LINKINFO_IMPORT_PinLoop:
	.bss 0
	.export __LINKINFO_IMPORT_RealSetClockDividers
__LINKINFO_IMPORT_RealSetClockDividers:
	.bss 0
	.export __LINKINFO_IMPORTASM_rx_int
__LINKINFO_IMPORTASM_rx_int:
	.bss 0
	.export __LINKINFO_IMPORT_memPoolI
__LINKINFO_IMPORT_memPoolI:
	.bss 0
	.export __LINKINFO_IMPORTASM_MonitorJumpWithStack
__LINKINFO_IMPORTASM_MonitorJumpWithStack:
	.bss 0
	.export __LINKINFO_IMPORT_RealSleep
__LINKINFO_IMPORT_RealSleep:
	.bss 0
	.export __LINKINFO_IMPORT___mallocy
__LINKINFO_IMPORT___mallocy:
	.bss 0
	.export __LINKINFO_IMPORT___AllocMemAbsXY
__LINKINFO_IMPORT___AllocMemAbsXY:
	.bss 0
	.export __LINKINFO_IMPORT___FreeMemXY
__LINKINFO_IMPORT___FreeMemXY:
	.bss 0
	.export __LINKINFO_IMPORT_NullHook
__LINKINFO_IMPORT_NullHook:
	.bss 0
	.export __LINKINFO_IMPORT_MemTest5x
__LINKINFO_IMPORT_MemTest5x:
	.bss 0
	.export __LINKINFO_IMPORTASM_yrommux0
__LINKINFO_IMPORTASM_yrommux0:
	.bss 0
	.export __LINKINFO_IMPORTASM_irommux0
__LINKINFO_IMPORTASM_irommux0:
	.bss 0
	.export __LINKINFO_IMPORTASM_MonitorJumpLr1Lr0
__LINKINFO_IMPORTASM_MonitorJumpLr1Lr0:
	.bss 0
	.export __LINKINFO_IMPORTASM_MonitorPutch
__LINKINFO_IMPORTASM_MonitorPutch:
	.bss 0
	.export __LINKINFO_IMPORT_TestGetByte
__LINKINFO_IMPORT_TestGetByte:
	.bss 0
	.export __LINKINFO_IMPORT_RealGetClockMultiplier
__LINKINFO_IMPORT_RealGetClockMultiplier:
	.bss 0
	.export __LINKINFO_IMPORT_RealForceClockMultiplier
__LINKINFO_IMPORT_RealForceClockMultiplier:
	.bss 0
	.export __LINKINFO_IMPORT___calloc
__LINKINFO_IMPORT___calloc:
	.bss 0
	.export __LINKINFO_IMPORT_MemTests
__LINKINFO_IMPORT_MemTests:
	.bss 0
	.export __LINKINFO_IMPORT_rommain
__LINKINFO_IMPORT_rommain:
	.bss 0
	.export __LINKINFO_IMPORT_SinTest6dB
__LINKINFO_IMPORT_SinTest6dB:
	.bss 0
	.export __LINKINFO_IMPORTASM_MonitorPutWord
__LINKINFO_IMPORTASM_MonitorPutWord:
	.bss 0
	.export __LINKINFO_IMPORT_BusyWait1
__LINKINFO_IMPORT_BusyWait1:
	.bss 0
	.export __LINKINFO_IMPORT_resx
__LINKINFO_IMPORT_resx:
	.bss 0
	.export __LINKINFO_IMPORT__stackY
__LINKINFO_IMPORT__stackY:
	.bss 0
	.export __LINKINFO_IMPORT_resy
__LINKINFO_IMPORT_resy:
	.bss 0
	.export __LINKINFO_IMPORT_OldStereoCopy
__LINKINFO_IMPORT_OldStereoCopy:
	.bss 0
	.export __LINKINFO_IMPORTASM_Monitor
__LINKINFO_IMPORTASM_Monitor:
	.bss 0
	.export __LINKINFO_IMPORT_RealPowerOff
__LINKINFO_IMPORT_RealPowerOff:
	.bss 0
	.export __LINKINFO_IMPORT___freey
__LINKINFO_IMPORT___freey:
	.bss 0
	.export __LINKINFO_IMPORTASM_OSInit
__LINKINFO_IMPORTASM_OSInit:
	.bss 0
	.export __LINKINFO_IMPORT___free
__LINKINFO_IMPORT___free:
	.bss 0
	.export __LINKINFO_IMPORT___AllocMemAbsX
__LINKINFO_IMPORT___AllocMemAbsX:
	.bss 0
	.export __LINKINFO_IMPORT___AllocMemAbsY
__LINKINFO_IMPORT___AllocMemAbsY:
	.bss 0
	.export __LINKINFO_IMPORT__stack
__LINKINFO_IMPORT__stack:
	.bss 0
	.export __LINKINFO_IMPORT___malloc
__LINKINFO_IMPORT___malloc:
	.bss 0
	.export __LINKINFO_IMPORTASM_MonitorGetWord
__LINKINFO_IMPORTASM_MonitorGetWord:
	.bss 0
	.export __LINKINFO_IMPORTASM_MonitorGetch
__LINKINFO_IMPORTASM_MonitorGetch:
	.bss 0
	.export __LINKINFO_IMPORT_RealSetClockSpeed
__LINKINFO_IMPORT_RealSetClockSpeed:
	.bss 0
	.export __LINKINFO_IMPORT_RealInitClockSpeed
__LINKINFO_IMPORT_RealInitClockSpeed:
	.bss 0
	.export __LINKINFO_IMPORT___ReAllocMemX
__LINKINFO_IMPORT___ReAllocMemX:
	.bss 0
	.export __LINKINFO_IMPORT___AllocMemX
__LINKINFO_IMPORT___AllocMemX:
	.bss 0
	.export __LINKINFO_IMPORT___ReAllocMemY
__LINKINFO_IMPORT___ReAllocMemY:
	.bss 0
	.export __LINKINFO_IMPORT___AllocMemY
__LINKINFO_IMPORT___AllocMemY:
	.bss 0
	.export __LINKINFO_IMPORT_RealAudioOutputSamples
__LINKINFO_IMPORT_RealAudioOutputSamples:
	.bss 0
	.export __LINKINFO_IMPORT_RealSetRate
__LINKINFO_IMPORT_RealSetRate:
	.bss 0
	.export __LINKINFO_IMPORT_RealSetVolume
__LINKINFO_IMPORT_RealSetVolume:
	.bss 0
	.export __LINKINFO_IMPORT___reallocy
__LINKINFO_IMPORT___reallocy:
	.bss 0
	.export __LINKINFO_IMPORT___callocy
__LINKINFO_IMPORT___callocy:
	.bss 0
	.export __LINKINFO_IMPORTASM_xrommux0
__LINKINFO_IMPORTASM_xrommux0:
	.bss 0
	.export __LINKINFO_IMPORTASM_MonitorGetch15
__LINKINFO_IMPORTASM_MonitorGetch15:
	.bss 0
	.export __LINKINFO_IMPORT_USBMem
__LINKINFO_IMPORT_USBMem:
	.bss 0
	.export __LINKINFO_IMPORT_RealSetClockSpeedLimit
__LINKINFO_IMPORT_RealSetClockSpeedLimit:
	.bss 0
	.export __LINKINFO_IMPORT___realloc
__LINKINFO_IMPORT___realloc:
	.bss 0
	.export __LINKINFO_IMPORTASM_dac_int
__LINKINFO_IMPORTASM_dac_int:
	.bss 0
	.export __LINKINFO_IMPORTASM_MonitorRestoreContext
__LINKINFO_IMPORTASM_MonitorRestoreContext:
	.bss 0
	.export __LINKINFO_IMPORT_BusyWait10
__LINKINFO_IMPORT_BusyWait10:
	.bss 0
	.export __LINKINFO_IMPORTASM_MonitorBpTable
__LINKINFO_IMPORTASM_MonitorBpTable:
	.bss 0
	.export __LINKINFO_IMPORTASM_MonitorGetInput
__LINKINFO_IMPORTASM_MonitorGetInput:
	.bss 0
	.export __LINKINFO_IMPORT_GetVS1005Permissions
__LINKINFO_IMPORT_GetVS1005Permissions:
	.bss 0
	.export __LINKINFO_IMPORT_InitMem
__LINKINFO_IMPORT_InitMem:
	.bss 0
	.export __LINKINFO_IMPORT_BootSetKey
__LINKINFO_IMPORT_BootSetKey:
	.bss 0
	.export __LINKINFO_IMPORT_BootSetKeyX
__LINKINFO_IMPORT_BootSetKeyX:
	.bss 0
	.export __LINKINFO_IMPORT_PlayerVolume
__LINKINFO_IMPORT_PlayerVolume:
	.bss 0
	.export __LINKINFO_IMPORT_RawUartPutC
__LINKINFO_IMPORT_RawUartPutC:
	.bss 0
	.export __LINKINFO_IMPORT_RawUartPrintF
__LINKINFO_IMPORT_RawUartPrintF:
	.bss 0
	.export __LINKINFO_IMPORT_rand_seed
__LINKINFO_IMPORT_rand_seed:
	.bss 0
	.export __LINKINFO_IMPORT_random_state
__LINKINFO_IMPORT_random_state:
	.bss 0
	.export __LINKINFO_IMPORT_player
__LINKINFO_IMPORT_player:
	.bss 0
	.export __LINKINFO_IMPORT_ph
__LINKINFO_IMPORT_ph:
	.bss 0
	.export __LINKINFO_IMPORT_map
__LINKINFO_IMPORT_map:
	.bss 0
	.export __LINKINFO_IMPORT_cod
__LINKINFO_IMPORT_cod:
	.bss 0
	.export __LINKINFO_IMPORT_bootrc4ks
__LINKINFO_IMPORT_bootrc4ks:
	.bss 0
	.export __LINKINFO_IMPORT_bootrc4Enabled
__LINKINFO_IMPORT_bootrc4Enabled:
	.bss 0
	.export __LINKINFO_IMPORT_xmem_startzeros
__LINKINFO_IMPORT_xmem_startzeros:
	.bss 0
	.export __LINKINFO_IMPORT_ff
__LINKINFO_IMPORT_ff:
	.bss 0
	.export __LINKINFO_IMPORT_fontPtrs
__LINKINFO_IMPORT_fontPtrs:
	.bss 0
	.export __LINKINFO_IMPORT_fontData
__LINKINFO_IMPORT_fontData:
	.bss 0
	.export __LINKINFO_IMPORT_u16RomFont
__LINKINFO_IMPORT_u16RomFont:
	.bss 0
	.export __LINKINFO_IMPORT___InitMemAllocI
__LINKINFO_IMPORT___InitMemAllocI:
	.bss 0
	.export __LINKINFO_IMPORT_ReadFuseMulti
__LINKINFO_IMPORT_ReadFuseMulti:
	.bss 0
	.export __LINKINFO_IMPORT_SpiSendReceive
__LINKINFO_IMPORT_SpiSendReceive:
	.bss 0
	.export __LINKINFO_IMPORT_RC4_KeySetup
__LINKINFO_IMPORT_RC4_KeySetup:
	.bss 0
	.export __LINKINFO_IMPORT_RC4_KeySetupPacked
__LINKINFO_IMPORT_RC4_KeySetupPacked:
	.bss 0
	.export __LINKINFO_IMPORT_volumeReg
__LINKINFO_IMPORT_volumeReg:
	.bss 0
	.export __LINKINFO_IMPORT_libInclude
__LINKINFO_IMPORT_libInclude:
	.bss 0
	.export __LINKINFO_IMPORT_uartByteSpeed
__LINKINFO_IMPORT_uartByteSpeed:
	.bss 0
	.export __LINKINFO_IMPORT_memcpyii
__LINKINFO_IMPORT_memcpyii:
	.bss 0
	.export __LINKINFO_IMPORT_kernelVectorsStart
__LINKINFO_IMPORT_kernelVectorsStart:
	.bss 0
	.export __LINKINFO_IMPORT_os_if_vars_start
__LINKINFO_IMPORT_os_if_vars_start:
	.bss 0
	.export __LINKINFO_IMPORT_memcpy
__LINKINFO_IMPORT_memcpy:
	.bss 0
	.export __LINKINFO_IMPORT_oldExtClock4KHz
__LINKINFO_IMPORT_oldExtClock4KHz:
	.bss 0
	.export __LINKINFO_IMPORT_coreVoltageOffset
__LINKINFO_IMPORT_coreVoltageOffset:
	.bss 0
	.export __LINKINFO_IMPORT_extSymbolSearchRom
__LINKINFO_IMPORT_extSymbolSearchRom:
	.bss 0
	.export __LINKINFO_IMPORT_extSymbolElements
__LINKINFO_IMPORT_extSymbolElements:
	.bss 0
	.export __LINKINFO_IMPORT_extSymbol
__LINKINFO_IMPORT_extSymbol:
	.bss 0
	.export __LINKINFO_IMPORT_memsetY
__LINKINFO_IMPORT_memsetY:
	.bss 0
	.export __LINKINFO_IMPORT_memset
__LINKINFO_IMPORT_memset:
	.bss 0
	.export __LINKINFO_IMPORT_memcpyYX
__LINKINFO_IMPORT_memcpyYX:
	.bss 0
	.export __LINKINFO_IMPORT_voltages
__LINKINFO_IMPORT_voltages:
	.bss 0
	.export __LINKINFO_IMPORT_PowerSetVoltages
__LINKINFO_IMPORT_PowerSetVoltages:
	.bss 0
	.export __LINKINFO_IMPORT_applAddr
__LINKINFO_IMPORT_applAddr:
	.bss 0
	.export __LINKINFO_IMPORT_bassReg
__LINKINFO_IMPORT_bassReg:
	.bss 0
	.export __LINKINFO_IMPORT_CalcFuseCRC
__LINKINFO_IMPORT_CalcFuseCRC:
	.bss 0
	.export __LINKINFO_IMPORT_ReadFusePriv
__LINKINFO_IMPORT_ReadFusePriv:
	.bss 0
	.export __LINKINFO_IMPORT_PowerSetFlash
__LINKINFO_IMPORT_PowerSetFlash:
	.bss 0
	.export __LINKINFO_IMPORT_SpiLoadLong
__LINKINFO_IMPORT_SpiLoadLong:
	.bss 0
	.export __LINKINFO_IMPORT_TEST_WriteIFlashOpenRecord
__LINKINFO_IMPORT_TEST_WriteIFlashOpenRecord:
	.bss 0
	.export __LINKINFO_IMPORT_TEST_ClearRamAndAllowDebug
__LINKINFO_IMPORT_TEST_ClearRamAndAllowDebug:
	.bss 0
	.export __LINKINFO_IMPORT_PowerShutDownFlash
__LINKINFO_IMPORT_PowerShutDownFlash:
	.bss 0
	.export __LINKINFO_IMPORT_TestMode
__LINKINFO_IMPORT_TestMode:
	.bss 0
	.export __LINKINFO_IMPORT_FsPhNandCreate
__LINKINFO_IMPORT_FsPhNandCreate:
	.bss 0
	.export __LINKINFO_IMPORT_BootFromX
__LINKINFO_IMPORT_BootFromX:
	.bss 0
	.export __LINKINFO_IMPORT_ReadIMem
__LINKINFO_IMPORT_ReadIMem:
	.bss 0
	.export __LINKINFO_IMPORT_InitAudio
__LINKINFO_IMPORT_InitAudio:
	.bss 0
	.export __LINKINFO_IMPORT_TimeCountAndScheduleHandler
__LINKINFO_IMPORT_TimeCountAndScheduleHandler:
	.bss 0
	.export __LINKINFO_IMPORT_AddIntServer
__LINKINFO_IMPORT_AddIntServer:
	.bss 0
	.export __LINKINFO_IMPORT_Enable
__LINKINFO_IMPORT_Enable:
	.bss 0
	.export __LINKINFO_IMPORT_neededConfiguration
__LINKINFO_IMPORT_neededConfiguration:
	.bss 0
	.export __LINKINFO_IMPORT_loadLibraryMutex
__LINKINFO_IMPORT_loadLibraryMutex:
	.bss 0
	.export __LINKINFO_IMPORT_InitMutexN
__LINKINFO_IMPORT_InitMutexN:
	.bss 0
	.export __LINKINFO_IMPORT_highestISoFar
__LINKINFO_IMPORT_highestISoFar:
	.bss 0
	.export __LINKINFO_IMPORT_InitStdButtons
__LINKINFO_IMPORT_InitStdButtons:
	.bss 0
	.export __LINKINFO_IMPORT_SysUiMsgInit
__LINKINFO_IMPORT_SysUiMsgInit:
	.bss 0
	.export __LINKINFO_IMPORT_kernel_main
__LINKINFO_IMPORT_kernel_main:
	.bss 0
	.export __LINKINFO_IMPORT_UsbBootLoopNoReturn
__LINKINFO_IMPORT_UsbBootLoopNoReturn:
	.bss 0
	.export __LINKINFO_IMPORT_TEST_ClearIFlash
__LINKINFO_IMPORT_TEST_ClearIFlash:
	.bss 0
	.export __LINKINFO_IMPORT_TEST_ProductionTest
__LINKINFO_IMPORT_TEST_ProductionTest:
	.bss 0
	.export __LINKINFO_IMPORT_extSymbolRom
__LINKINFO_IMPORT_extSymbolRom:
	.bss 0
	.export __LINKINFO_IMPORT_extSymbolRomSize
__LINKINFO_IMPORT_extSymbolRomSize:
	.bss 0
	.export __LINKINFO_IMPORT_i_twiddle_iv
__LINKINFO_IMPORT_i_twiddle_iv:
	.bss 0
	.export __LINKINFO_IMPORT_dctfirmodtab8
__LINKINFO_IMPORT_dctfirmodtab8:
	.bss 0
	.export __LINKINFO_IMPORT_dctiv
__LINKINFO_IMPORT_dctiv:
	.bss 0
	.export __LINKINFO_IMPORT_dctii
__LINKINFO_IMPORT_dctii:
	.bss 0
	.export __LINKINFO_IMPORT_costable_iv8
__LINKINFO_IMPORT_costable_iv8:
	.bss 0
	.export __LINKINFO_IMPORT_dct
__LINKINFO_IMPORT_dct:
	.bss 0
	.export __LINKINFO_IMPORT_dcttype
__LINKINFO_IMPORT_dcttype:
	.bss 0
	.export __LINKINFO_IMPORT_costable_ii8
__LINKINFO_IMPORT_costable_ii8:
	.bss 0
	.export __LINKINFO_IMPORT_dctfir8
__LINKINFO_IMPORT_dctfir8:
	.bss 0
	.export __LINKINFO_IMPORT_dctivpost
__LINKINFO_IMPORT_dctivpost:
	.bss 0
	.export __LINKINFO_IMPORT_isupper
__LINKINFO_IMPORT_isupper:
	.bss 0
	.export __LINKINFO_IMPORTASM_short_to_df
__LINKINFO_IMPORTASM_short_to_df:
	.bss 0
	.export __LINKINFO_IMPORT_PrintFmtAdd
__LINKINFO_IMPORT_PrintFmtAdd:
	.bss 0
	.export __LINKINFO_IMPORTASM_df_mul
__LINKINFO_IMPORTASM_df_mul:
	.bss 0
	.export __LINKINFO_IMPORTASM_df_div
__LINKINFO_IMPORTASM_df_div:
	.bss 0
	.export __LINKINFO_IMPORTASM_df_add
__LINKINFO_IMPORTASM_df_add:
	.bss 0
	.export __LINKINFO_IMPORTASM_df_sub
__LINKINFO_IMPORTASM_df_sub:
	.bss 0
	.export __LINKINFO_IMPORT_strlen
__LINKINFO_IMPORT_strlen:
	.bss 0
	.export __LINKINFO_IMPORT__modf
__LINKINFO_IMPORT__modf:
	.bss 0
	.export __LINKINFO_IMPORTASM_df_to_short
__LINKINFO_IMPORTASM_df_to_short:
	.bss 0
	.export __LINKINFO_IMPORTASM_df_lt
__LINKINFO_IMPORTASM_df_lt:
	.bss 0
	.export __LINKINFO_IMPORTASM_df_ge
__LINKINFO_IMPORTASM_df_ge:
	.bss 0
	.export __LINKINFO_IMPORT_tolower
__LINKINFO_IMPORT_tolower:
	.bss 0
	.export __LINKINFO_IMPORTASM_divide32unsigned
__LINKINFO_IMPORTASM_divide32unsigned:
	.bss 0
	.export __LINKINFO_IMPORT_memcpyXX
__LINKINFO_IMPORT_memcpyXX:
	.bss 0
	.export __LINKINFO_IMPORT_ispunct
__LINKINFO_IMPORT_ispunct:
	.bss 0
	.export __LINKINFO_IMPORT_toupper
__LINKINFO_IMPORT_toupper:
	.bss 0
	.export __LINKINFO_IMPORT_isgraph
__LINKINFO_IMPORT_isgraph:
	.bss 0
	.export __LINKINFO_IMPORT_isdigit
__LINKINFO_IMPORT_isdigit:
	.bss 0
	.export __LINKINFO_IMPORT_isalpha
__LINKINFO_IMPORT_isalpha:
	.bss 0
	.export __LINKINFO_IMPORT_isalnum
__LINKINFO_IMPORT_isalnum:
	.bss 0
	.export __LINKINFO_IMPORT_isxdigit
__LINKINFO_IMPORT_isxdigit:
	.bss 0
	.export __LINKINFO_IMPORT_isspace
__LINKINFO_IMPORT_isspace:
	.bss 0
	.export __LINKINFO_IMPORT_iscntrl
__LINKINFO_IMPORT_iscntrl:
	.bss 0
	.export __LINKINFO_IMPORT_isprint
__LINKINFO_IMPORT_isprint:
	.bss 0
	.export __LINKINFO_IMPORT_islower
__LINKINFO_IMPORT_islower:
	.bss 0
	.export __LINKINFO_IMPORTASM_int_to_df
__LINKINFO_IMPORTASM_int_to_df:
	.bss 0
	.export __LINKINFO_IMPORTASM_df_norm
__LINKINFO_IMPORTASM_df_norm:
	.bss 0
	.export __LINKINFO_IMPORT_intStub
__LINKINFO_IMPORT_intStub:
	.bss 0
	.export __LINKINFO_IMPORT_readyQueue
__LINKINFO_IMPORT_readyQueue:
	.bss 0
	.export __LINKINFO_IMPORT_NewList
__LINKINFO_IMPORT_NewList:
	.bss 0
	.export __LINKINFO_IMPORT_useQuantum
__LINKINFO_IMPORT_useQuantum:
	.bss 0
	.export __LINKINFO_IMPORT_quantum
__LINKINFO_IMPORT_quantum:
	.bss 0
	.export __LINKINFO_IMPORT_Halt
__LINKINFO_IMPORT_Halt:
	.bss 0
	.export __LINKINFO_IMPORT_intVectors
__LINKINFO_IMPORT_intVectors:
	.bss 0
	.export __LINKINFO_IMPORT_SetSignal
__LINKINFO_IMPORT_SetSignal:
	.bss 0
	.export __LINKINFO_IMPORT_timerQueue
__LINKINFO_IMPORT_timerQueue:
	.bss 0
	.export __LINKINFO_IMPORT_waitQueue
__LINKINFO_IMPORT_waitQueue:
	.bss 0
	.export __LINKINFO_IMPORT_Enqueue
__LINKINFO_IMPORT_Enqueue:
	.bss 0
	.export __LINKINFO_IMPORT_ScheduleHandler
__LINKINFO_IMPORT_ScheduleHandler:
	.bss 0
	.export __LINKINFO_IMPORT_mainTask
__LINKINFO_IMPORT_mainTask:
	.bss 0
	.export __LINKINFO_IMPORT_AddTask
__LINKINFO_IMPORT_AddTask:
	.bss 0
	.export __LINKINFO_IMPORT_Disable
__LINKINFO_IMPORT_Disable:
	.bss 0
	.export __LINKINFO_IMPORT_forbidCount
__LINKINFO_IMPORT_forbidCount:
	.bss 0
	.export __LINKINFO_IMPORT_scheduleFlag
__LINKINFO_IMPORT_scheduleFlag:
	.bss 0
	.export __LINKINFO_IMPORT___endStack
__LINKINFO_IMPORT___endStack:
	.bss 0
	.export __LINKINFO_IMPORT___intStack
__LINKINFO_IMPORT___intStack:
	.bss 0
	.export __LINKINFO_IMPORT___curStack
__LINKINFO_IMPORT___curStack:
	.bss 0
	.export __LINKINFO_IMPORT_thisTask
__LINKINFO_IMPORT_thisTask:
	.bss 0
	.export __LINKINFO_IMPORT_Expunge
__LINKINFO_IMPORT_Expunge:
	.bss 0
	.export __LINKINFO_IMPORT_HandleTimers
__LINKINFO_IMPORT_HandleTimers:
	.bss 0
	.export __LINKINFO_IMPORT_SetupInterruptStackSize
__LINKINFO_IMPORT_SetupInterruptStackSize:
	.bss 0
	.export __LINKINFO_IMPORT_SetupMainStackSize
__LINKINFO_IMPORT_SetupMainStackSize:
	.bss 0
	.export __LINKINFO_IMPORTASM_CheckWait
__LINKINFO_IMPORTASM_CheckWait:
	.bss 0
	.export __LINKINFO_IMPORT_Signal
__LINKINFO_IMPORT_Signal:
	.bss 0
	.export __LINKINFO_IMPORTASM_IntQuickLeave
__LINKINFO_IMPORTASM_IntQuickLeave:
	.bss 0
	.export __LINKINFO_IMPORTASM_WaitAgain
__LINKINFO_IMPORTASM_WaitAgain:
	.bss 0
	.export __LINKINFO_IMPORT_DoSchedule
__LINKINFO_IMPORT_DoSchedule:
	.bss 0
	.export __LINKINFO_IMPORT_freetaskmem
__LINKINFO_IMPORT_freetaskmem:
	.bss 0
	.export __LINKINFO_IMPORTASM_SearchForTask
__LINKINFO_IMPORTASM_SearchForTask:
	.bss 0
	.export __LINKINFO_IMPORT_Wait
__LINKINFO_IMPORT_Wait:
	.bss 0
	.export __LINKINFO_IMPORT_AddHead
__LINKINFO_IMPORT_AddHead:
	.bss 0
	.export __LINKINFO_IMPORT_xFlist
__LINKINFO_IMPORT_xFlist:
	.bss 0
	.export __LINKINFO_IMPORT_HeadNode
__LINKINFO_IMPORT_HeadNode:
	.bss 0
	.export __LINKINFO_IMPORT_NextNode
__LINKINFO_IMPORT_NextNode:
	.bss 0
	.export __LINKINFO_IMPORT_RemNode
__LINKINFO_IMPORT_RemNode:
	.bss 0
	.export __LINKINFO_IMPORT_AddAfter
__LINKINFO_IMPORT_AddAfter:
	.bss 0
	.export __LINKINFO_IMPORT_AddBefore
__LINKINFO_IMPORT_AddBefore:
	.bss 0
	.export __LINKINFO_IMPORT_AddTail
__LINKINFO_IMPORT_AddTail:
	.bss 0
	.export __LINKINFO_IMPORT_HeadNodeY
__LINKINFO_IMPORT_HeadNodeY:
	.bss 0
	.export __LINKINFO_IMPORT_yFlist
__LINKINFO_IMPORT_yFlist:
	.bss 0
	.export __LINKINFO_IMPORT_NextNodeY
__LINKINFO_IMPORT_NextNodeY:
	.bss 0
	.export __LINKINFO_IMPORT_RemNodeY
__LINKINFO_IMPORT_RemNodeY:
	.bss 0
	.export __LINKINFO_IMPORT_AddAfterY
__LINKINFO_IMPORT_AddAfterY:
	.bss 0
	.export __LINKINFO_IMPORT_memcpyYY
__LINKINFO_IMPORT_memcpyYY:
	.bss 0
	.export __LINKINFO_IMPORT_AddBeforeY
__LINKINFO_IMPORT_AddBeforeY:
	.bss 0
	.export __LINKINFO_IMPORT_AddTailY
__LINKINFO_IMPORT_AddTailY:
	.bss 0
	.export __LINKINFO_IMPORT_sysMemory_xs
__LINKINFO_IMPORT_sysMemory_xs:
	.bss 0
	.export __LINKINFO_IMPORT_sysMemory_ys
__LINKINFO_IMPORT_sysMemory_ys:
	.bss 0
	.export __LINKINFO_IMPORT_NewListY
__LINKINFO_IMPORT_NewListY:
	.bss 0
	.export __LINKINFO_IMPORT_AddHeadY
__LINKINFO_IMPORT_AddHeadY:
	.bss 0
	.export __LINKINFO_IMPORT___AllocMemI
__LINKINFO_IMPORT___AllocMemI:
	.bss 0
	.export __LINKINFO_IMPORT___AllocMemAbsI
__LINKINFO_IMPORT___AllocMemAbsI:
	.bss 0
	.export __LINKINFO_IMPORT___FreeMemI
__LINKINFO_IMPORT___FreeMemI:
	.bss 0
	.export __LINKINFO_IMPORT_sysMemory_is
__LINKINFO_IMPORT_sysMemory_is:
	.bss 0
	.export __LINKINFO_IMPORT_NewListI
__LINKINFO_IMPORT_NewListI:
	.bss 0
	.export __LINKINFO_IMPORT_SetSizeNodeI
__LINKINFO_IMPORT_SetSizeNodeI:
	.bss 0
	.export __LINKINFO_IMPORT_AddHeadI
__LINKINFO_IMPORT_AddHeadI:
	.bss 0
	.export __LINKINFO_IMPORT_HeadNodeI
__LINKINFO_IMPORT_HeadNodeI:
	.bss 0
	.export __LINKINFO_IMPORT_GetSizeNodeI
__LINKINFO_IMPORT_GetSizeNodeI:
	.bss 0
	.export __LINKINFO_IMPORT_RemNodeI
__LINKINFO_IMPORT_RemNodeI:
	.bss 0
	.export __LINKINFO_IMPORT_NextNodeI
__LINKINFO_IMPORT_NextNodeI:
	.bss 0
	.export __LINKINFO_IMPORT_AddAfterI
__LINKINFO_IMPORT_AddAfterI:
	.bss 0
	.export __LINKINFO_IMPORT_AddBeforeI
__LINKINFO_IMPORT_AddBeforeI:
	.bss 0
	.export __LINKINFO_IMPORT_AddTailI
__LINKINFO_IMPORT_AddTailI:
	.bss 0
	.export __LINKINFO_IMPORT_AddTimer
__LINKINFO_IMPORT_AddTimer:
	.bss 0
	.export __LINKINFO_IMPORT_RemoveTimer
__LINKINFO_IMPORT_RemoveTimer:
	.bss 0
	.export __LINKINFO_IMPORT_InitTimer
__LINKINFO_IMPORT_InitTimer:
	.bss 0
	.export __LINKINFO_IMPORT_StartTimer
__LINKINFO_IMPORT_StartTimer:
	.bss 0
	.export __LINKINFO_IMPORT_StopTimer
__LINKINFO_IMPORT_StopTimer:
	.bss 0
	.export __LINKINFO_IMPORT_TailNode
__LINKINFO_IMPORT_TailNode:
	.bss 0
	.export __LINKINFO_IMPORT_RemHead
__LINKINFO_IMPORT_RemHead:
	.bss 0
	.export __LINKINFO_IMPORT_Remove
__LINKINFO_IMPORT_Remove:
	.bss 0
	.export __LINKINFO_IMPORT_PrevNode
__LINKINFO_IMPORT_PrevNode:
	.bss 0
	.export __LINKINFO_IMPORT_RemTail
__LINKINFO_IMPORT_RemTail:
	.bss 0
	.export __LINKINFO_IMPORT_SetTaskPri
__LINKINFO_IMPORT_SetTaskPri:
	.bss 0
	.export __LINKINFO_IMPORT_FindTask
__LINKINFO_IMPORT_FindTask:
	.bss 0
	.export __LINKINFO_IMPORT_RemoveY
__LINKINFO_IMPORT_RemoveY:
	.bss 0
	.export __LINKINFO_IMPORT_RemTailY
__LINKINFO_IMPORT_RemTailY:
	.bss 0
	.export __LINKINFO_IMPORT_PrevNodeY
__LINKINFO_IMPORT_PrevNodeY:
	.bss 0
	.export __LINKINFO_IMPORT_TailNodeY
__LINKINFO_IMPORT_TailNodeY:
	.bss 0
	.export __LINKINFO_IMPORT_RemHeadY
__LINKINFO_IMPORT_RemHeadY:
	.bss 0
	.export __LINKINFO_IMPORT_EnqueueY
__LINKINFO_IMPORT_EnqueueY:
	.bss 0
	.export __LINKINFO_IMPORT_PrevNodeI
__LINKINFO_IMPORT_PrevNodeI:
	.bss 0
	.export __LINKINFO_IMPORT_TailNodeI
__LINKINFO_IMPORT_TailNodeI:
	.bss 0
	.export __LINKINFO_IMPORT_RemHeadI
__LINKINFO_IMPORT_RemHeadI:
	.bss 0
	.export __LINKINFO_IMPORT_RemoveI
__LINKINFO_IMPORT_RemoveI:
	.bss 0
	.export __LINKINFO_IMPORT_RemTailI
__LINKINFO_IMPORT_RemTailI:
	.bss 0
	.export __LINKINFO_IMPORT_WriteIMem16
__LINKINFO_IMPORT_WriteIMem16:
	.bss 0
	.export __LINKINFO_IMPORT_WriteIMem
__LINKINFO_IMPORT_WriteIMem:
	.bss 0
	.export __LINKINFO_IMPORT_WriteIMem16Swapped
__LINKINFO_IMPORT_WriteIMem16Swapped:
	.bss 0
	.export __LINKINFO_IMPORT_WriteIMemSwapped
__LINKINFO_IMPORT_WriteIMemSwapped:
	.bss 0
	.export __LINKINFO_IMPORT_getword
__LINKINFO_IMPORT_getword:
	.bss 0
	.export __LINKINFO_IMPORT_putch
__LINKINFO_IMPORT_putch:
	.bss 0
	.export __LINKINFO_IMPORT_getch
__LINKINFO_IMPORT_getch:
	.bss 0
	.export __LINKINFO_IMPORT_putword
__LINKINFO_IMPORT_putword:
	.bss 0
	.export __LINKINFO_IMPORT_Monitor
__LINKINFO_IMPORT_Monitor:
	.bss 0
	.export __LINKINFO_IMPORT_audioBuffer
__LINKINFO_IMPORT_audioBuffer:
	.bss 0
	.export __LINKINFO_IMPORT_DB12
__LINKINFO_IMPORT_DB12:
	.bss 0
	.export __LINKINFO_IMPORT_timeCount
__LINKINFO_IMPORT_timeCount:
	.bss 0
	.export __LINKINFO_IMPORT_AudioBufFree
__LINKINFO_IMPORT_AudioBufFree:
	.bss 0
	.export __LINKINFO_IMPORTASM_divide16signed
__LINKINFO_IMPORTASM_divide16signed:
	.bss 0
	.export __LINKINFO_IMPORT_AudioBufFill
__LINKINFO_IMPORT_AudioBufFill:
	.bss 0
	.export __LINKINFO_IMPORT_audioPtr
__LINKINFO_IMPORT_audioPtr:
	.bss 0
	.export __LINKINFO_IMPORT_dB
__LINKINFO_IMPORT_dB:
	.bss 0
	.export __LINKINFO_IMPORT_ISine
__LINKINFO_IMPORT_ISine:
	.bss 0
	.export __LINKINFO_IMPORT_SinTestCore
__LINKINFO_IMPORT_SinTestCore:
	.bss 0
	.export __LINKINFO_IMPORT_OldSinTest
__LINKINFO_IMPORT_OldSinTest:
	.bss 0
	.export __LINKINFO_IMPORT_UpdateMp3Crc
__LINKINFO_IMPORT_UpdateMp3Crc:
	.bss 0
	.export __LINKINFO_IMPORT_mp3CrcTable
__LINKINFO_IMPORT_mp3CrcTable:
	.bss 0
	.export __LINKINFO_IMPORT_shortSin1k
__LINKINFO_IMPORT_shortSin1k:
	.bss 0
	.export __LINKINFO_IMPORT_tmpBuf
__LINKINFO_IMPORT_tmpBuf:
	.bss 0
	.export __LINKINFO_IMPORT_oldClockX
__LINKINFO_IMPORT_oldClockX:
	.bss 0
	.export __LINKINFO_IMPORT_OldSetRate
__LINKINFO_IMPORT_OldSetRate:
	.bss 0
	.export __LINKINFO_IMPORT_timeToRemovePDown2
__LINKINFO_IMPORT_timeToRemovePDown2:
	.bss 0
	.export __LINKINFO_IMPORT_MuxTest
__LINKINFO_IMPORT_MuxTest:
	.bss 0
	.export __LINKINFO_IMPORT_YRomTest
__LINKINFO_IMPORT_YRomTest:
	.bss 0
	.export __LINKINFO_IMPORT_XRomTest
__LINKINFO_IMPORT_XRomTest:
	.bss 0
	.export __LINKINFO_IMPORT_IRomTest
__LINKINFO_IMPORT_IRomTest:
	.bss 0
	.export __LINKINFO_IMPORT_YRamTest
__LINKINFO_IMPORT_YRamTest:
	.bss 0
	.export __LINKINFO_IMPORT_XRamTest
__LINKINFO_IMPORT_XRamTest:
	.bss 0
	.export __LINKINFO_IMPORT_IRamTest
__LINKINFO_IMPORT_IRamTest:
	.bss 0
	.export __LINKINFO_IMPORT_UartDivider
__LINKINFO_IMPORT_UartDivider:
	.bss 0
	.export __LINKINFO_IMPORT_oldOldClock4KHz
__LINKINFO_IMPORT_oldOldClock4KHz:
	.bss 0
	.export __LINKINFO_IMPORT_curFctl
__LINKINFO_IMPORT_curFctl:
	.bss 0
	.export __LINKINFO_IMPORT_hwSampleRate
__LINKINFO_IMPORT_hwSampleRate:
	.bss 0
	.export __LINKINFO_IMPORT_uiTime
__LINKINFO_IMPORT_uiTime:
	.bss 0
	.export __LINKINFO_IMPORT_uiTrigger
__LINKINFO_IMPORT_uiTrigger:
	.bss 0
	.export __LINKINFO_IMPORT_haltTime
__LINKINFO_IMPORT_haltTime:
	.bss 0
	.export __LINKINFO_IMPORT_bassOn
__LINKINFO_IMPORT_bassOn:
	.bss 0
	.export __LINKINFO_IMPORT_trebleOn
__LINKINFO_IMPORT_trebleOn:
	.bss 0
	.export __LINKINFO_IMPORT_uiCount
__LINKINFO_IMPORT_uiCount:
	.bss 0
	.export __LINKINFO_IMPORT_bassTrebleSampleRate
__LINKINFO_IMPORT_bassTrebleSampleRate:
	.bss 0
	.export __LINKINFO_IMPORT_bassTrebleReg
__LINKINFO_IMPORT_bassTrebleReg:
	.bss 0
	.export __LINKINFO_IMPORT_uartDivs
__LINKINFO_IMPORT_uartDivs:
	.bss 0
	.export __LINKINFO_IMPORT_z
__LINKINFO_IMPORT_z:
	.bss 0
	.export __LINKINFO_IMPORT_clockSpeed
__LINKINFO_IMPORT_clockSpeed:
	.bss 0
	.export __LINKINFO_IMPORTASM_fr_div32
__LINKINFO_IMPORTASM_fr_div32:
	.bss 0
	.export __LINKINFO_IMPORTASM_shiftMultipliers
__LINKINFO_IMPORTASM_shiftMultipliers:
	.bss 0
	.export __LINKINFO_IMPORT_SetBass
__LINKINFO_IMPORT_SetBass:
	.bss 0
	.export __LINKINFO_IMPORT_SetTreble
__LINKINFO_IMPORT_SetTreble:
	.bss 0
	.export __LINKINFO_IMPORT_Bass
__LINKINFO_IMPORT_Bass:
	.bss 0
	.export __LINKINFO_IMPORT_Treble
__LINKINFO_IMPORT_Treble:
	.bss 0
	.export __LINKINFO_IMPORT_PowerMillivoltsToReg
__LINKINFO_IMPORT_PowerMillivoltsToReg:
	.bss 0
	.export __LINKINFO_IMPORT_PowerRegToMillivolts
__LINKINFO_IMPORT_PowerRegToMillivolts:
	.bss 0
	.export __LINKINFO_IMPORT_powerConvTab
__LINKINFO_IMPORT_powerConvTab:
	.bss 0
	.export __LINKINFO_IMPORT_CheckRFLock
__LINKINFO_IMPORT_CheckRFLock:
	.bss 0
	.export __LINKINFO_IMPORT_FindVCOLock
__LINKINFO_IMPORT_FindVCOLock:
	.bss 0
	.export __LINKINFO_IMPORT_CalcClockSpeed
__LINKINFO_IMPORT_CalcClockSpeed:
	.bss 0
	.export __LINKINFO_IMPORT_BusyDelay4x
__LINKINFO_IMPORT_BusyDelay4x:
	.bss 0
	.export __LINKINFO_IMPORT_PrivSpiSendReceive
__LINKINFO_IMPORT_PrivSpiSendReceive:
	.bss 0
	.export __LINKINFO_IMPORTASM_up_GetValue
__LINKINFO_IMPORTASM_up_GetValue:
	.bss 0
	.export __LINKINFO_IMPORTASM_literal
__LINKINFO_IMPORTASM_literal:
	.bss 0
	.export __LINKINFO_IMPORTASM_spiexec
__LINKINFO_IMPORTASM_spiexec:
	.bss 0
	.export __LINKINFO_IMPORTASM_newesc
__LINKINFO_IMPORTASM_newesc:
	.bss 0
	.export __LINKINFO_IMPORTASM_long
__LINKINFO_IMPORTASM_long:
	.bss 0
	.export __LINKINFO_IMPORTASM_GetPutChIH
__LINKINFO_IMPORTASM_GetPutChIH:
	.bss 0
	.export __LINKINFO_IMPORT_RC4_Output
__LINKINFO_IMPORT_RC4_Output:
	.bss 0
	.export __LINKINFO_IMPORTASM_up_GetBits
__LINKINFO_IMPORTASM_up_GetBits:
	.bss 0
	.export __LINKINFO_IMPORTASM_Lwhile
__LINKINFO_IMPORTASM_Lwhile:
	.bss 0
	.export __LINKINFO_IMPORT_SpiLoad
__LINKINFO_IMPORT_SpiLoad:
	.bss 0
	.export __LINKINFO_IMPORT_SpiDelay
__LINKINFO_IMPORT_SpiDelay:
	.bss 0
	.export __LINKINFO_IMPORTASM_lz77
__LINKINFO_IMPORTASM_lz77:
	.bss 0
	.export __LINKINFO_IMPORT_SpiReceiveWord
__LINKINFO_IMPORT_SpiReceiveWord:
	.bss 0
	.export __LINKINFO_IMPORTASM_up_GetByte
__LINKINFO_IMPORTASM_up_GetByte:
	.bss 0
	.export __LINKINFO_IMPORTASM_GetPutChI
__LINKINFO_IMPORTASM_GetPutChI:
	.bss 0
	.export __LINKINFO_IMPORTASM_UnPack
__LINKINFO_IMPORTASM_UnPack:
	.bss 0
	.export __LINKINFO_IMPORTASM_spiy
__LINKINFO_IMPORTASM_spiy:
	.bss 0
	.export __LINKINFO_IMPORTASM_GetPutChX
__LINKINFO_IMPORTASM_GetPutChX:
	.bss 0
	.export __LINKINFO_IMPORTASM_GetPutChY
__LINKINFO_IMPORTASM_GetPutChY:
	.bss 0
	.export __LINKINFO_IMPORT_vo_files
__LINKINFO_IMPORT_vo_files:
	.bss 0
	.export __LINKINFO_IMPORT_consoleFile
__LINKINFO_IMPORT_consoleFile:
	.bss 0
	.export __LINKINFO_IMPORT_vo_get_time_from_rtc_hook
__LINKINFO_IMPORT_vo_get_time_from_rtc_hook:
	.bss 0
	.export __LINKINFO_IMPORT_FatFileSystem
__LINKINFO_IMPORT_FatFileSystem:
	.bss 0
	.export __LINKINFO_IMPORT_AutoVoidNull
__LINKINFO_IMPORT_AutoVoidNull:
	.bss 0
	.export __LINKINFO_IMPORT_encVFloorInv
__LINKINFO_IMPORT_encVFloorInv:
	.bss 0
	.export __LINKINFO_IMPORT_EncMInitDct
__LINKINFO_IMPORT_EncMInitDct:
	.bss 0
	.export __LINKINFO_IMPORT_winPtr
__LINKINFO_IMPORT_winPtr:
	.bss 0
	.export __LINKINFO_IMPORT_hcb_sf
__LINKINFO_IMPORT_hcb_sf:
	.bss 0
	.export __LINKINFO_IMPORT_EncMHuff4
__LINKINFO_IMPORT_EncMHuff4:
	.bss 0
	.export __LINKINFO_IMPORT_lpcsin
__LINKINFO_IMPORT_lpcsin:
	.bss 0
	.export __LINKINFO_IMPORT_evAudioMode
__LINKINFO_IMPORT_evAudioMode:
	.bss 0
	.export __LINKINFO_IMPORT_strncmp
__LINKINFO_IMPORT_strncmp:
	.bss 0
	.export __LINKINFO_IMPORT_ISqrt
__LINKINFO_IMPORT_ISqrt:
	.bss 0
	.export __LINKINFO_IMPORT_srandom
__LINKINFO_IMPORT_srandom:
	.bss 0
	.export __LINKINFO_IMPORT_random
__LINKINFO_IMPORT_random:
	.bss 0
	.export __LINKINFO_IMPORT_LongLog2
__LINKINFO_IMPORT_LongLog2:
	.bss 0
	.export __LINKINFO_IMPORT_font16aptrs
__LINKINFO_IMPORT_font16aptrs:
	.bss 0
	.export __LINKINFO_IMPORT_rand
__LINKINFO_IMPORT_rand:
	.bss 0
	.export __LINKINFO_IMPORT_FileParamSeek
__LINKINFO_IMPORT_FileParamSeek:
	.bss 0
	.export __LINKINFO_IMPORT_memcpyXY
__LINKINFO_IMPORT_memcpyXY:
	.bss 0
	.export __LINKINFO_IMPORTASM_divide32signed
__LINKINFO_IMPORTASM_divide32signed:
	.bss 0
	.export __LINKINFO_IMPORTASM_divide16unsigned
__LINKINFO_IMPORTASM_divide16unsigned:
	.bss 0
	.export __LINKINFO_IMPORT_HuffmanMask
__LINKINFO_IMPORT_HuffmanMask:
	.bss 0
	.export __LINKINFO_IMPORT_srand
__LINKINFO_IMPORT_srand:
	.bss 0
	.export __LINKINFO_IMPORT_memcmp
__LINKINFO_IMPORT_memcmp:
	.bss 0
	.export __LINKINFO_IMPORT_SymbolCalcCrc32String
__LINKINFO_IMPORT_SymbolCalcCrc32String:
	.bss 0
	.export __LINKINFO_IMPORT_SymbolCrunchStringCalcCrc32
__LINKINFO_IMPORT_SymbolCrunchStringCalcCrc32:
	.bss 0
	.export __LINKINFO_IMPORT_SymbolFindByCrc
__LINKINFO_IMPORT_SymbolFindByCrc:
	.bss 0
	.export __LINKINFO_IMPORT_SymbolFindRomByCrc
__LINKINFO_IMPORT_SymbolFindRomByCrc:
	.bss 0
	.export __LINKINFO_IMPORT_SymbolDelete
__LINKINFO_IMPORT_SymbolDelete:
	.bss 0
	.export __LINKINFO_IMPORT_SymbolDeleteLib
__LINKINFO_IMPORT_SymbolDeleteLib:
	.bss 0
	.export __LINKINFO_IMPORT_encVOggCrc
__LINKINFO_IMPORT_encVOggCrc:
	.bss 0
	.export __LINKINFO_IMPORT_crc6ToChar
__LINKINFO_IMPORT_crc6ToChar:
	.bss 0
	.export __LINKINFO_IMPORT_strncpy
__LINKINFO_IMPORT_strncpy:
	.bss 0
	.export __LINKINFO_IMPORT_Sine32I
__LINKINFO_IMPORT_Sine32I:
	.bss 0
	.export __LINKINFO_IMPORT_SpiWaitStatus
__LINKINFO_IMPORT_SpiWaitStatus:
	.bss 0
	.export __LINKINFO_IMPORT_TEST_TestMemories
__LINKINFO_IMPORT_TEST_TestMemories:
	.bss 0
	.export __LINKINFO_IMPORT_memseti
__LINKINFO_IMPORT_memseti:
	.bss 0
	.export __LINKINFO_IMPORT_XpFifoRead
__LINKINFO_IMPORT_XpFifoRead:
	.bss 0
	.export __LINKINFO_IMPORT_XpFifoWrite
__LINKINFO_IMPORT_XpFifoWrite:
	.bss 0
	.export __LINKINFO_IMPORT_NandGetOctets
__LINKINFO_IMPORT_NandGetOctets:
	.bss 0
	.export __LINKINFO_IMPORT_NandPutOctets
__LINKINFO_IMPORT_NandPutOctets:
	.bss 0
	.export __LINKINFO_IMPORT_NandPutBlockAddress
__LINKINFO_IMPORT_NandPutBlockAddress:
	.bss 0
	.export __LINKINFO_IMPORT_NandPutDataAddress
__LINKINFO_IMPORT_NandPutDataAddress:
	.bss 0
	.export __LINKINFO_IMPORT_NandPutLargePageSpareAddress
__LINKINFO_IMPORT_NandPutLargePageSpareAddress:
	.bss 0
	.export __LINKINFO_IMPORT_NandGetStatus
__LINKINFO_IMPORT_NandGetStatus:
	.bss 0
	.export __LINKINFO_IMPORT_LargePageWrite
__LINKINFO_IMPORT_LargePageWrite:
	.bss 0
	.export __LINKINFO_IMPORT_LargePageRead
__LINKINFO_IMPORT_LargePageRead:
	.bss 0
	.export __LINKINFO_IMPORT_NandPutPage
__LINKINFO_IMPORT_NandPutPage:
	.bss 0
	.export __LINKINFO_IMPORT_FsPhNandRead
__LINKINFO_IMPORT_FsPhNandRead:
	.bss 0
	.export __LINKINFO_IMPORT_FsPhNandWrite
__LINKINFO_IMPORT_FsPhNandWrite:
	.bss 0
	.export __LINKINFO_IMPORT_FsPhNandErase
__LINKINFO_IMPORT_FsPhNandErase:
	.bss 0
	.export __LINKINFO_IMPORT_fsNandPhys
__LINKINFO_IMPORT_fsNandPhys:
	.bss 0
	.export __LINKINFO_IMPORT_NandWaitIdle
__LINKINFO_IMPORT_NandWaitIdle:
	.bss 0
	.export __LINKINFO_IMPORT_NandPutAddressOctet
__LINKINFO_IMPORT_NandPutAddressOctet:
	.bss 0
	.export __LINKINFO_IMPORT_NandPutCommand
__LINKINFO_IMPORT_NandPutCommand:
	.bss 0
	.export __LINKINFO_IMPORT_NandSetWaits
__LINKINFO_IMPORT_NandSetWaits:
	.bss 0
	.export __LINKINFO_IMPORT_Swap16
__LINKINFO_IMPORT_Swap16:
	.bss 0
	.export __LINKINFO_IMPORT_CountBitsLong
__LINKINFO_IMPORT_CountBitsLong:
	.bss 0
	.export __LINKINFO_IMPORT_NandMingle
__LINKINFO_IMPORT_NandMingle:
	.bss 0
	.export __LINKINFO_IMPORT_FsPhNullOk
__LINKINFO_IMPORT_FsPhNullOk:
	.bss 0
	.export __LINKINFO_IMPORT_DevNullWrite
__LINKINFO_IMPORT_DevNullWrite:
	.bss 0
	.export __LINKINFO_IMPORT_MyDelayHook
__LINKINFO_IMPORT_MyDelayHook:
	.bss 0
	.export __LINKINFO_IMPORT_SetNextApp
__LINKINFO_IMPORT_SetNextApp:
	.bss 0
	.export __LINKINFO_IMPORT_Init0
__LINKINFO_IMPORT_Init0:
	.bss 0
	.export __LINKINFO_IMPORT_PrintTasks
__LINKINFO_IMPORT_PrintTasks:
	.bss 0
	.export __LINKINFO_IMPORT_PrintInt
__LINKINFO_IMPORT_PrintInt:
	.bss 0
	.export __LINKINFO_IMPORT_LoadDrivers
__LINKINFO_IMPORT_LoadDrivers:
	.bss 0
	.export __LINKINFO_IMPORT_audioDevice
__LINKINFO_IMPORT_audioDevice:
	.bss 0
	.export __LINKINFO_IMPORT_sysTasks
__LINKINFO_IMPORT_sysTasks:
	.bss 0
	.export __LINKINFO_IMPORT_romSysTasks
__LINKINFO_IMPORT_romSysTasks:
	.bss 0
	.export __LINKINFO_IMPORT_vo_fprintf
__LINKINFO_IMPORT_vo_fprintf:
	.bss 0
	.export __LINKINFO_IMPORT_strcpy
__LINKINFO_IMPORT_strcpy:
	.bss 0
	.export __LINKINFO_IMPORT_GetI6
__LINKINFO_IMPORT_GetI6:
	.bss 0
	.export __LINKINFO_IMPORT_InitHwLocks
__LINKINFO_IMPORT_InitHwLocks:
	.bss 0
	.export __LINKINFO_IMPORT_CreateTask
__LINKINFO_IMPORT_CreateTask:
	.bss 0
	.export __LINKINFO_IMPORT_ReadFromProgramRam
__LINKINFO_IMPORT_ReadFromProgramRam:
	.bss 0
	.export __LINKINFO_IMPORT_strchr
__LINKINFO_IMPORT_strchr:
	.bss 0
	.export __LINKINFO_IMPORT_LoadLibraryP
__LINKINFO_IMPORT_LoadLibraryP:
	.bss 0
	.export __LINKINFO_IMPORT_CreateCyclic
__LINKINFO_IMPORT_CreateCyclic:
	.bss 0
	.export __LINKINFO_IMPORT_InitBoard
__LINKINFO_IMPORT_InitBoard:
	.bss 0
	.export __LINKINFO_IMPORT_StartOS3
__LINKINFO_IMPORT_StartOS3:
	.bss 0
	.export __LINKINFO_IMPORT_audioout
__LINKINFO_IMPORT_audioout:
	.bss 0
	.export __LINKINFO_IMPORT_sysUiMsg
__LINKINFO_IMPORT_sysUiMsg:
	.bss 0
	.export __LINKINFO_IMPORT_AddCyclic
__LINKINFO_IMPORT_AddCyclic:
	.bss 0
	.export __LINKINFO_IMPORT_RunAppFile3
__LINKINFO_IMPORT_RunAppFile3:
	.bss 0
	.export __LINKINFO_IMPORT_vo_printf
__LINKINFO_IMPORT_vo_printf:
	.bss 0
	.export __LINKINFO_IMPORT_DelayL
__LINKINFO_IMPORT_DelayL:
	.bss 0
	.export __LINKINFO_IMPORT_NextResource
__LINKINFO_IMPORT_NextResource:
	.bss 0
	.export __LINKINFO_IMPORT_ResGet16
__LINKINFO_IMPORT_ResGet16:
	.bss 0
	.export __LINKINFO_IMPORT_ResGet32
__LINKINFO_IMPORT_ResGet32:
	.bss 0
	.export __LINKINFO_IMPORT_RemoveLibFromList
__LINKINFO_IMPORT_RemoveLibFromList:
	.bss 0
	.export __LINKINFO_IMPORT_LoadLibraryFile
__LINKINFO_IMPORT_LoadLibraryFile:
	.bss 0
	.export __LINKINFO_IMPORT_sprintf
__LINKINFO_IMPORT_sprintf:
	.bss 0
	.export __LINKINFO_IMPORT_ObtainMutex
__LINKINFO_IMPORT_ObtainMutex:
	.bss 0
	.export __LINKINFO_IMPORT_ReleaseMutex
__LINKINFO_IMPORT_ReleaseMutex:
	.bss 0
	.export __LINKINFO_IMPORT_WriteToProgramRam
__LINKINFO_IMPORT_WriteToProgramRam:
	.bss 0
	.export __LINKINFO_IMPORT_GetMemory
__LINKINFO_IMPORT_GetMemory:
	.bss 0
	.export __LINKINFO_IMPORT_WriteToProgramRam16Swapped
__LINKINFO_IMPORT_WriteToProgramRam16Swapped:
	.bss 0
	.export __LINKINFO_IMPORT_AttemptMutex
__LINKINFO_IMPORT_AttemptMutex:
	.bss 0
	.export __LINKINFO_IMPORT_StdButtonDefaultRender
__LINKINFO_IMPORT_StdButtonDefaultRender:
	.bss 0
	.export __LINKINFO_IMPORT_lastButtonPressed
__LINKINFO_IMPORT_lastButtonPressed:
	.bss 0
	.export __LINKINFO_IMPORT_virtualWidth
__LINKINFO_IMPORT_virtualWidth:
	.bss 0
	.export __LINKINFO_IMPORT_virtualHeight
__LINKINFO_IMPORT_virtualHeight:
	.bss 0
	.export __LINKINFO_IMPORT_SetStdAudioOutVolume
__LINKINFO_IMPORT_SetStdAudioOutVolume:
	.bss 0
	.export __LINKINFO_IMPORT_SystemUiMessageCyclic
__LINKINFO_IMPORT_SystemUiMessageCyclic:
	.bss 0
	.export __LINKINFO_IMPORT_SystemUiMessageReceiver
__LINKINFO_IMPORT_SystemUiMessageReceiver:
	.bss 0
	.export __LINKINFO_IMPORT_romSysUiMsg
__LINKINFO_IMPORT_romSysUiMsg:
	.bss 0
	.export __LINKINFO_IMPORT_sysUiMsgFilterValues
__LINKINFO_IMPORT_sysUiMsgFilterValues:
	.bss 0
	.export __LINKINFO_IMPORT_SetAddress
__LINKINFO_IMPORT_SetAddress:
	.bss 0
	.export __LINKINFO_IMPORT_ResetDataToggles
__LINKINFO_IMPORT_ResetDataToggles:
	.bss 0
	.export __LINKINFO_IMPORT_ResetUsbHardware
__LINKINFO_IMPORT_ResetUsbHardware:
	.bss 0
	.export __LINKINFO_IMPORT_GetUsbPacket
__LINKINFO_IMPORT_GetUsbPacket:
	.bss 0
	.export __LINKINFO_IMPORT_HandlePacket
__LINKINFO_IMPORT_HandlePacket:
	.bss 0
	.export __LINKINFO_IMPORT_UsbSender
__LINKINFO_IMPORT_UsbSender:
	.bss 0
	.export __LINKINFO_IMPORT_usp
__LINKINFO_IMPORT_usp:
	.bss 0
	.export __LINKINFO_IMPORT_usbsender
__LINKINFO_IMPORT_usbsender:
	.bss 0
	.export __LINKINFO_IMPORT_usb_xmit_bufptr
__LINKINFO_IMPORT_usb_xmit_bufptr:
	.bss 0
	.export __LINKINFO_IMPORT_tenzeros
__LINKINFO_IMPORT_tenzeros:
	.bss 0
	.export __LINKINFO_IMPORT_setAddress
__LINKINFO_IMPORT_setAddress:
	.bss 0
	.export __LINKINFO_IMPORT_resetDataToggles
__LINKINFO_IMPORT_resetDataToggles:
	.bss 0
	.export __LINKINFO_IMPORT_deviceDescriptor
__LINKINFO_IMPORT_deviceDescriptor:
	.bss 0
	.export __LINKINFO_IMPORT_configurationDescriptor
__LINKINFO_IMPORT_configurationDescriptor:
	.bss 0
	.export __LINKINFO_IMPORT_languageDescriptor
__LINKINFO_IMPORT_languageDescriptor:
	.bss 0
	.export __LINKINFO_IMPORT_vendorStringDescriptor
__LINKINFO_IMPORT_vendorStringDescriptor:
	.bss 0
	.export __LINKINFO_IMPORT_productStringDescriptor
__LINKINFO_IMPORT_productStringDescriptor:
	.bss 0
	.export __LINKINFO_IMPORT_serialNumberDescriptor
__LINKINFO_IMPORT_serialNumberDescriptor:
	.bss 0
	.export __LINKINFO_IMPORT_chapter9
__LINKINFO_IMPORT_chapter9:
	.bss 0
	.export __LINKINFO_IMPORT_inquiry1
__LINKINFO_IMPORT_inquiry1:
	.bss 0
	.export __LINKINFO_IMPORT_sense
__LINKINFO_IMPORT_sense:
	.bss 0
	.export __LINKINFO_IMPORT_capacity
__LINKINFO_IMPORT_capacity:
	.bss 0
	.export __LINKINFO_IMPORT_atapiCapacities
__LINKINFO_IMPORT_atapiCapacities:
	.bss 0
	.export __LINKINFO_IMPORT_diskData
__LINKINFO_IMPORT_diskData:
	.bss 0
	.export __LINKINFO_IMPORT_csw1
__LINKINFO_IMPORT_csw1:
	.bss 0
	.export __LINKINFO_IMPORT_scsi
__LINKINFO_IMPORT_scsi:
	.bss 0
	.export __LINKINFO_IMPORT_diskData0Y
__LINKINFO_IMPORT_diskData0Y:
	.bss 0
	.export __LINKINFO_IMPORT_diskData1Y
__LINKINFO_IMPORT_diskData1Y:
	.bss 0
	.export __LINKINFO_IMPORT_diskData2Y
__LINKINFO_IMPORT_diskData2Y:
	.bss 0
	.export __LINKINFO_IMPORT_diskData3Y
__LINKINFO_IMPORT_diskData3Y:
	.bss 0
	.export __LINKINFO_IMPORT_diskInitTab
__LINKINFO_IMPORT_diskInitTab:
	.bss 0
	.export __LINKINFO_IMPORT_usbHwInitTab
__LINKINFO_IMPORT_usbHwInitTab:
	.bss 0
	.export __LINKINFO_IMPORT_csw
__LINKINFO_IMPORT_csw:
	.bss 0
	.export __LINKINFO_IMPORT_RingBufCopyXfromY
__LINKINFO_IMPORT_RingBufCopyXfromY:
	.bss 0
	.export __LINKINFO_IMPORT_ConsoleWrite
__LINKINFO_IMPORT_ConsoleWrite:
	.bss 0
	.export __LINKINFO_IMPORT_ConsoleFileOperations
__LINKINFO_IMPORT_ConsoleFileOperations:
	.bss 0
	.export __LINKINFO_IMPORT_ConsoleIoctl
__LINKINFO_IMPORT_ConsoleIoctl:
	.bss 0
	.export __LINKINFO_IMPORT_NullFileIdentify
__LINKINFO_IMPORT_NullFileIdentify:
	.bss 0
	.export __LINKINFO_IMPORT_Identify
__LINKINFO_IMPORT_Identify:
	.bss 0
	.export __LINKINFO_IMPORT_FreeBuffer
__LINKINFO_IMPORT_FreeBuffer:
	.bss 0
	.export __LINKINFO_IMPORT_GetBuffer
__LINKINFO_IMPORT_GetBuffer:
	.bss 0
	.export __LINKINFO_IMPORT_MakeFileDescriptor
__LINKINFO_IMPORT_MakeFileDescriptor:
	.bss 0
	.export __LINKINFO_IMPORT_BusyWait
__LINKINFO_IMPORT_BusyWait:
	.bss 0
	.export __LINKINFO_IMPORT_RemovedInterface
__LINKINFO_IMPORT_RemovedInterface:
	.bss 0
	.export __LINKINFO_IMPORT_vs3emubreak
__LINKINFO_IMPORT_vs3emubreak:
	.bss 0
	.export __LINKINFO_IMPORT_fopen_retries
__LINKINFO_IMPORT_fopen_retries:
	.bss 0
	.export __LINKINFO_IMPORT_fopenclose_mutex
__LINKINFO_IMPORT_fopenclose_mutex:
	.bss 0
	.export __LINKINFO_IMPORT_fclose_gettime_mutex
__LINKINFO_IMPORT_fclose_gettime_mutex:
	.bss 0
	.export __LINKINFO_IMPORT_vo_simple_files
__LINKINFO_IMPORT_vo_simple_files:
	.bss 0
	.export __LINKINFO_IMPORT_sbsP
__LINKINFO_IMPORT_sbsP:
	.bss 0
	.export __LINKINFO_IMPORT_nSectorBuffers
__LINKINFO_IMPORT_nSectorBuffers:
	.bss 0
	.export __LINKINFO_IMPORT_nullFileOperations
__LINKINFO_IMPORT_nullFileOperations:
	.bss 0
	.export __LINKINFO_IMPORT_nullFile
__LINKINFO_IMPORT_nullFile:
	.bss 0
	.export __LINKINFO_IMPORT_FatImageWriteBytes
__LINKINFO_IMPORT_FatImageWriteBytes:
	.bss 0
	.export __LINKINFO_IMPORT_FatFlush
__LINKINFO_IMPORT_FatFlush:
	.bss 0
	.export __LINKINFO_IMPORT_FatImageSectorRead
__LINKINFO_IMPORT_FatImageSectorRead:
	.bss 0
	.export __LINKINFO_IMPORT_MegaFatGetByte
__LINKINFO_IMPORT_MegaFatGetByte:
	.bss 0
	.export __LINKINFO_IMPORT_MegaFatGetWord
__LINKINFO_IMPORT_MegaFatGetWord:
	.bss 0
	.export __LINKINFO_IMPORT_MegaFatGetLong
__LINKINFO_IMPORT_MegaFatGetLong:
	.bss 0
	.export __LINKINFO_IMPORT_FatCreate
__LINKINFO_IMPORT_FatCreate:
	.bss 0
	.export __LINKINFO_IMPORT_FatGetFragmentFromFAT
__LINKINFO_IMPORT_FatGetFragmentFromFAT:
	.bss 0
	.export __LINKINFO_IMPORT_VoFatClusterPos
__LINKINFO_IMPORT_VoFatClusterPos:
	.bss 0
	.export __LINKINFO_IMPORT_VoFatReadClusterRecord
__LINKINFO_IMPORT_VoFatReadClusterRecord:
	.bss 0
	.export __LINKINFO_IMPORT_VoFatWriteClusterRecord
__LINKINFO_IMPORT_VoFatWriteClusterRecord:
	.bss 0
	.export __LINKINFO_IMPORT_VoFatGetFreeFragment
__LINKINFO_IMPORT_VoFatGetFreeFragment:
	.bss 0
	.export __LINKINFO_IMPORT_WriteClusterChain
__LINKINFO_IMPORT_WriteClusterChain:
	.bss 0
	.export __LINKINFO_IMPORT_VoFatFindSector
__LINKINFO_IMPORT_VoFatFindSector:
	.bss 0
	.export __LINKINFO_IMPORT_VoFatWriteFile
__LINKINFO_IMPORT_VoFatWriteFile:
	.bss 0
	.export __LINKINFO_IMPORT_VoFatCloseFile
__LINKINFO_IMPORT_VoFatCloseFile:
	.bss 0
	.export __LINKINFO_IMPORT_VoFatReadFile
__LINKINFO_IMPORT_VoFatReadFile:
	.bss 0
	.export __LINKINFO_IMPORT_FatNameFromDirEntry
__LINKINFO_IMPORT_FatNameFromDirEntry:
	.bss 0
	.export __LINKINFO_IMPORT_FatOpenEntry
__LINKINFO_IMPORT_FatOpenEntry:
	.bss 0
	.export __LINKINFO_IMPORT_FatExtendDirectory
__LINKINFO_IMPORT_FatExtendDirectory:
	.bss 0
	.export __LINKINFO_IMPORT_FatMakeEntry
__LINKINFO_IMPORT_FatMakeEntry:
	.bss 0
	.export __LINKINFO_IMPORT_FileNameCompare
__LINKINFO_IMPORT_FileNameCompare:
	.bss 0
	.export __LINKINFO_IMPORT_FatFindFile
__LINKINFO_IMPORT_FatFindFile:
	.bss 0
	.export __LINKINFO_IMPORT_VoFatOpenFile
__LINKINFO_IMPORT_VoFatOpenFile:
	.bss 0
	.export __LINKINFO_IMPORT_IdentifyFat
__LINKINFO_IMPORT_IdentifyFat:
	.bss 0
	.export __LINKINFO_IMPORT_FatFileOps
__LINKINFO_IMPORT_FatFileOps:
	.bss 0
	.export __LINKINFO_IMPORT_longFileName
__LINKINFO_IMPORT_longFileName:
	.bss 0
	.export __LINKINFO_IMPORT_lfnStartCluster
__LINKINFO_IMPORT_lfnStartCluster:
	.bss 0
	.export __LINKINFO_IMPORT_MemCopyPackedBigEndian
__LINKINFO_IMPORT_MemCopyPackedBigEndian:
	.bss 0
	.export __LINKINFO_IMPORT_strncasecmp
__LINKINFO_IMPORT_strncasecmp:
	.bss 0
	.export __LINKINFO_IMPORT_atoi
__LINKINFO_IMPORT_atoi:
	.bss 0
	.export __LINKINFO_IMPORT_filtPairs
__LINKINFO_IMPORT_filtPairs:
	.bss 0
	.export __LINKINFO_IMPORT_bassCompand
__LINKINFO_IMPORT_bassCompand:
	.bss 0
	.export __LINKINFO_IMPORT_bTrebleGain
__LINKINFO_IMPORT_bTrebleGain:
	.bss 0
	.export __LINKINFO_IMPORT_bassG
__LINKINFO_IMPORT_bassG:
	.bss 0
	.export __LINKINFO_IMPORT_btmp
__LINKINFO_IMPORT_btmp:
	.bss 0
	.export __LINKINFO_IMPORT_bassCompandMaxGain
__LINKINFO_IMPORT_bassCompandMaxGain:
	.bss 0
	.export __LINKINFO_IMPORT_trebleCoeff
__LINKINFO_IMPORT_trebleCoeff:
	.bss 0
	.export __LINKINFO_IMPORT_trebleFreqs
__LINKINFO_IMPORT_trebleFreqs:
	.bss 0
	.export __LINKINFO_IMPORT_trebleEmph
__LINKINFO_IMPORT_trebleEmph:
	.bss 0
	.export __LINKINFO_IMPORT_lowEmph
__LINKINFO_IMPORT_lowEmph:
	.bss 0
	.export __LINKINFO_IMPORT_trebleIdx
__LINKINFO_IMPORT_trebleIdx:
	.bss 0
	.export __LINKINFO_IMPORT_trebleFiltP
__LINKINFO_IMPORT_trebleFiltP:
	.bss 0
	.export __LINKINFO_IMPORT_trShift
__LINKINFO_IMPORT_trShift:
	.bss 0
	.export __LINKINFO_IMPORTASM_fr_div
__LINKINFO_IMPORTASM_fr_div:
	.bss 0
	.export __LINKINFO_IMPORT_trebleFilt
__LINKINFO_IMPORT_trebleFilt:
	.bss 0
	.export __LINKINFO_IMPORT_trebleCoeffRam
__LINKINFO_IMPORT_trebleCoeffRam:
	.bss 0
	.export __LINKINFO_IMPORT_QueueHwLock
__LINKINFO_IMPORT_QueueHwLock:
	.bss 0
	.export __LINKINFO_IMPORT_ReleaseHwLock
__LINKINFO_IMPORT_ReleaseHwLock:
	.bss 0
	.export __LINKINFO_IMPORT_hwLocks
__LINKINFO_IMPORT_hwLocks:
	.bss 0
	.export __LINKINFO_IMPORT_hwLockOffset
__LINKINFO_IMPORT_hwLockOffset:
	.bss 0
	.export __LINKINFO_IMPORT_hwLockN
__LINKINFO_IMPORT_hwLockN:
	.bss 0
	.export __LINKINFO_IMPORT_MSBSetU32
__LINKINFO_IMPORT_MSBSetU32:
	.bss 0
	.export __LINKINFO_IMPORT_GpioReadInputPin
__LINKINFO_IMPORT_GpioReadInputPin:
	.bss 0
	.export __LINKINFO_IMPORT_vo_gpio_perips
__LINKINFO_IMPORT_vo_gpio_perips:
	.bss 0
	.export __LINKINFO_IMPORT_WritePCL
__LINKINFO_IMPORT_WritePCL:
	.bss 0
	.export __LINKINFO_IMPORT_ResetSdCard
__LINKINFO_IMPORT_ResetSdCard:
	.bss 0
	.export __LINKINFO_IMPORT_SetPWMLevel
__LINKINFO_IMPORT_SetPWMLevel:
	.bss 0
	.export __LINKINFO_IMPORT_powerControlLatchState
__LINKINFO_IMPORT_powerControlLatchState:
	.bss 0
	.export __LINKINFO_IMPORT_HuffmanRLC44ODiff
__LINKINFO_IMPORT_HuffmanRLC44ODiff:
	.bss 0
	.export __LINKINFO_IMPORT_HuffmanRLC16Mono
__LINKINFO_IMPORT_HuffmanRLC16Mono:
	.bss 0
	.export __LINKINFO_IMPORT_kbd_win_128
__LINKINFO_IMPORT_kbd_win_128:
	.bss 0
	.export __LINKINFO_IMPORT_hcb_1
__LINKINFO_IMPORT_hcb_1:
	.bss 0
	.export __LINKINFO_IMPORT_hcb_2
__LINKINFO_IMPORT_hcb_2:
	.bss 0
	.export __LINKINFO_IMPORT_hcb_3
__LINKINFO_IMPORT_hcb_3:
	.bss 0
	.export __LINKINFO_IMPORT_hcb_4
__LINKINFO_IMPORT_hcb_4:
	.bss 0
	.export __LINKINFO_IMPORT_hcb_5
__LINKINFO_IMPORT_hcb_5:
	.bss 0
	.export __LINKINFO_IMPORT_hcb_6
__LINKINFO_IMPORT_hcb_6:
	.bss 0
	.export __LINKINFO_IMPORT_hcb_7
__LINKINFO_IMPORT_hcb_7:
	.bss 0
	.export __LINKINFO_IMPORT_hcb_8
__LINKINFO_IMPORT_hcb_8:
	.bss 0
	.export __LINKINFO_IMPORT_hcb_9
__LINKINFO_IMPORT_hcb_9:
	.bss 0
	.export __LINKINFO_IMPORT_hcb_10
__LINKINFO_IMPORT_hcb_10:
	.bss 0
	.export __LINKINFO_IMPORT_hcb_11
__LINKINFO_IMPORT_hcb_11:
	.bss 0
	.export __LINKINFO_IMPORT_phiFractQmf_cs
__LINKINFO_IMPORT_phiFractQmf_cs:
	.bss 0
	.export __LINKINFO_IMPORT_phiFractSubQmf20_cs
__LINKINFO_IMPORT_phiFractSubQmf20_cs:
	.bss 0
	.export __LINKINFO_IMPORT_phiFractSubQmf34_cs
__LINKINFO_IMPORT_phiFractSubQmf34_cs:
	.bss 0
	.export __LINKINFO_IMPORT_num_swb_960_window
__LINKINFO_IMPORT_num_swb_960_window:
	.bss 0
	.export __LINKINFO_IMPORT_num_swb_1024_window
__LINKINFO_IMPORT_num_swb_1024_window:
	.bss 0
	.export __LINKINFO_IMPORT_num_swb_128_window
__LINKINFO_IMPORT_num_swb_128_window:
	.bss 0
	.export __LINKINFO_IMPORT_swb_offset_1024_96
__LINKINFO_IMPORT_swb_offset_1024_96:
	.bss 0
	.export __LINKINFO_IMPORT_swb_offset_128_96
__LINKINFO_IMPORT_swb_offset_128_96:
	.bss 0
	.export __LINKINFO_IMPORT_swb_offset_1024_64
__LINKINFO_IMPORT_swb_offset_1024_64:
	.bss 0
	.export __LINKINFO_IMPORT_swb_offset_1024_48
__LINKINFO_IMPORT_swb_offset_1024_48:
	.bss 0
	.export __LINKINFO_IMPORT_swb_offset_128_48
__LINKINFO_IMPORT_swb_offset_128_48:
	.bss 0
	.export __LINKINFO_IMPORT_swb_offset_1024_32
__LINKINFO_IMPORT_swb_offset_1024_32:
	.bss 0
	.export __LINKINFO_IMPORT_swb_offset_1024_24
__LINKINFO_IMPORT_swb_offset_1024_24:
	.bss 0
	.export __LINKINFO_IMPORT_swb_offset_128_24
__LINKINFO_IMPORT_swb_offset_128_24:
	.bss 0
	.export __LINKINFO_IMPORT_swb_offset_1024_16
__LINKINFO_IMPORT_swb_offset_1024_16:
	.bss 0
	.export __LINKINFO_IMPORT_swb_offset_128_16
__LINKINFO_IMPORT_swb_offset_128_16:
	.bss 0
	.export __LINKINFO_IMPORT_swb_offset_1024_8
__LINKINFO_IMPORT_swb_offset_1024_8:
	.bss 0
	.export __LINKINFO_IMPORT_swb_offset_128_8
__LINKINFO_IMPORT_swb_offset_128_8:
	.bss 0
	.export __LINKINFO_IMPORT_swb_offset_1024_window
__LINKINFO_IMPORT_swb_offset_1024_window:
	.bss 0
	.export __LINKINFO_IMPORT_swb_offset_128_window
__LINKINFO_IMPORT_swb_offset_128_window:
	.bss 0
	.export __LINKINFO_IMPORT_swb_offset_120_96
__LINKINFO_IMPORT_swb_offset_120_96:
	.bss 0
	.export __LINKINFO_IMPORT_swb_offset_960_48
__LINKINFO_IMPORT_swb_offset_960_48:
	.bss 0
	.export __LINKINFO_IMPORT_swb_offset_120_48
__LINKINFO_IMPORT_swb_offset_120_48:
	.bss 0
	.export __LINKINFO_IMPORT_swb_offset_120_24
__LINKINFO_IMPORT_swb_offset_120_24:
	.bss 0
	.export __LINKINFO_IMPORT_swb_offset_120_16
__LINKINFO_IMPORT_swb_offset_120_16:
	.bss 0
	.export __LINKINFO_IMPORT_swb_offset_960_8
__LINKINFO_IMPORT_swb_offset_960_8:
	.bss 0
	.export __LINKINFO_IMPORT_swb_offset_120_8
__LINKINFO_IMPORT_swb_offset_120_8:
	.bss 0
	.export __LINKINFO_IMPORT_swb_offset_960_window
__LINKINFO_IMPORT_swb_offset_960_window:
	.bss 0
	.export __LINKINFO_IMPORT_swb_offset_120_window
__LINKINFO_IMPORT_swb_offset_120_window:
	.bss 0
	.export __LINKINFO_IMPORT_iq_tablei_x
__LINKINFO_IMPORT_iq_tablei_x:
	.bss 0
	.export __LINKINFO_IMPORT_NoiseRe
__LINKINFO_IMPORT_NoiseRe:
	.bss 0
	.export __LINKINFO_IMPORT_NoiseIm
__LINKINFO_IMPORT_NoiseIm:
	.bss 0
	.export __LINKINFO_IMPORT_hxx_mix_ab32
__LINKINFO_IMPORT_hxx_mix_ab32:
	.bss 0
	.export __LINKINFO_IMPORT_qFractAllpassQmf_cs
__LINKINFO_IMPORT_qFractAllpassQmf_cs:
	.bss 0
	.export __LINKINFO_IMPORT_qFractAllpassSubQmf20_cs
__LINKINFO_IMPORT_qFractAllpassSubQmf20_cs:
	.bss 0
	.export __LINKINFO_IMPORT_qFractAllpassSubQmf34_cs
__LINKINFO_IMPORT_qFractAllpassSubQmf34_cs:
	.bss 0
	.export __LINKINFO_IMPORT_bitReverse
__LINKINFO_IMPORT_bitReverse:
	.bss 0
	.export __LINKINFO_IMPORT_latin1
__LINKINFO_IMPORT_latin1:
	.bss 0
	.export __LINKINFO_IMPORT_font16a
__LINKINFO_IMPORT_font16a:
	.bss 0
	.export __LINKINFO_IMPORT_FileParamInt
__LINKINFO_IMPORT_FileParamInt:
	.bss 0
	.export __LINKINFO_IMPORT_FileParamStr
__LINKINFO_IMPORT_FileParamStr:
	.bss 0
	.export __LINKINFO_IMPORT_strtol
__LINKINFO_IMPORT_strtol:
	.bss 0
	.export __LINKINFO_IMPORT_strrchr
__LINKINFO_IMPORT_strrchr:
	.bss 0
	.export __LINKINFO_IMPORT_TEST_GetSineAdder
__LINKINFO_IMPORT_TEST_GetSineAdder:
	.bss 0
	.export __LINKINFO_IMPORT_CompareXY
__LINKINFO_IMPORT_CompareXY:
	.bss 0
	.export __LINKINFO_IMPORT_CopyXY
__LINKINFO_IMPORT_CopyXY:
	.bss 0
	.export __LINKINFO_IMPORT_FsPhNullFail
__LINKINFO_IMPORT_FsPhNullFail:
	.bss 0
	.export __LINKINFO_IMPORT_WriteToProgramRam16
__LINKINFO_IMPORT_WriteToProgramRam16:
	.bss 0
	.export __LINKINFO_IMPORT_WriteToProgramRamSwapped
__LINKINFO_IMPORT_WriteToProgramRamSwapped:
	.bss 0
	.export __LINKINFO_IMPORT_CyclicMainLoop
__LINKINFO_IMPORT_CyclicMainLoop:
	.bss 0
	.export __LINKINFO_IMPORT_SetInCyclicQueue
__LINKINFO_IMPORT_SetInCyclicQueue:
	.bss 0
	.export __LINKINFO_IMPORT_DropCyclic
__LINKINFO_IMPORT_DropCyclic:
	.bss 0
	.export __LINKINFO_IMPORT_cyclic
__LINKINFO_IMPORT_cyclic:
	.bss 0
	.export __LINKINFO_IMPORT_CreateTaskAndStack
__LINKINFO_IMPORT_CreateTaskAndStack:
	.bss 0
	.export __LINKINFO_IMPORT_ListDevices
__LINKINFO_IMPORT_ListDevices:
	.bss 0
	.export __LINKINFO_IMPORT_devSdSd
__LINKINFO_IMPORT_devSdSd:
	.bss 0
	.export __LINKINFO_IMPORTASM_ushort_to_df
__LINKINFO_IMPORTASM_ushort_to_df:
	.bss 0
	.export __LINKINFO_IMPORT_DevSdSdCreate
__LINKINFO_IMPORT_DevSdSdCreate:
	.bss 0
	.export __LINKINFO_IMPORT_AudioIoctl
__LINKINFO_IMPORT_AudioIoctl:
	.bss 0
	.export __LINKINFO_IMPORT_AudioWrite
__LINKINFO_IMPORT_AudioWrite:
	.bss 0
	.export __LINKINFO_IMPORT_AudioFileOperations
__LINKINFO_IMPORT_AudioFileOperations:
	.bss 0
	.export __LINKINFO_IMPORT_voAudioChannels
__LINKINFO_IMPORT_voAudioChannels:
	.bss 0
	.export __LINKINFO_IMPORT_xp_fiford
__LINKINFO_IMPORT_xp_fiford:
	.bss 0
	.export __LINKINFO_IMPORT_xp_fifowr
__LINKINFO_IMPORT_xp_fifowr:
	.bss 0
	.export __LINKINFO_IMPORT_SDClock32
__LINKINFO_IMPORT_SDClock32:
	.bss 0
	.export __LINKINFO_IMPORT_SDDataRXTX
__LINKINFO_IMPORT_SDDataRXTX:
	.bss 0
	.export __LINKINFO_IMPORT_SDDataRX1
__LINKINFO_IMPORT_SDDataRX1:
	.bss 0
	.export __LINKINFO_IMPORT_DevSdSdDelete
__LINKINFO_IMPORT_DevSdSdDelete:
	.bss 0
	.export __LINKINFO_IMPORT_DevSdSdIdentify
__LINKINFO_IMPORT_DevSdSdIdentify:
	.bss 0
	.export __LINKINFO_IMPORT_DataStop
__LINKINFO_IMPORT_DataStop:
	.bss 0
	.export __LINKINFO_IMPORT_DevSdSdBlockRead
__LINKINFO_IMPORT_DevSdSdBlockRead:
	.bss 0
	.export __LINKINFO_IMPORT_DevSdSdBlockWrite
__LINKINFO_IMPORT_DevSdSdBlockWrite:
	.bss 0
	.export __LINKINFO_IMPORT_DevSdSdIoctl
__LINKINFO_IMPORT_DevSdSdIoctl:
	.bss 0
	.export __LINKINFO_IMPORT_devSdSdDefaults
__LINKINFO_IMPORT_devSdSdDefaults:
	.bss 0
	.export __LINKINFO_IMPORT_devSdSdDefaults1Bit
__LINKINFO_IMPORT_devSdSdDefaults1Bit:
	.bss 0
	.export __LINKINFO_IMPORT_XP_FifoRd8
__LINKINFO_IMPORT_XP_FifoRd8:
	.bss 0
	.export __LINKINFO_IMPORT_XP_FifoWr8
__LINKINFO_IMPORT_XP_FifoWr8:
	.bss 0
	.export __LINKINFO_IMPORT_WaitSdReady
__LINKINFO_IMPORT_WaitSdReady:
	.bss 0
	.export __LINKINFO_IMPORT_SDCmd
__LINKINFO_IMPORT_SDCmd:
	.bss 0
	.export __LINKINFO_IMPORT_IoctlRestart
__LINKINFO_IMPORT_IoctlRestart:
	.bss 0
	.export __LINKINFO_IMPORT_DetectSDCard
__LINKINFO_IMPORT_DetectSDCard:
	.bss 0
	.export __LINKINFO_IMPORT_IDSDCard
__LINKINFO_IMPORT_IDSDCard:
	.bss 0
	.export __LINKINFO_IMPORT_SetupSDData
__LINKINFO_IMPORT_SetupSDData:
	.bss 0
	.export __LINKINFO_IMPORT_SdIdentify
__LINKINFO_IMPORT_SdIdentify:
	.bss 0
	.export __LINKINFO_IMPORT_EncMCountHuff2
__LINKINFO_IMPORT_EncMCountHuff2:
	.bss 0
	.export __LINKINFO_IMPORT_EncMCountHuff4
__LINKINFO_IMPORT_EncMCountHuff4:
	.bss 0
	.export __LINKINFO_IMPORT_EncMHuff2N
__LINKINFO_IMPORT_EncMHuff2N:
	.bss 0
	.export __LINKINFO_IMPORT_EncMCountHuff2Asm
__LINKINFO_IMPORT_EncMCountHuff2Asm:
	.bss 0
	.export __LINKINFO_IMPORT_EncMOutBits32
__LINKINFO_IMPORT_EncMOutBits32:
	.bss 0
	.export __LINKINFO_IMPORT_EncMOutBits16
__LINKINFO_IMPORT_EncMOutBits16:
	.bss 0
	.export __LINKINFO_IMPORT_EncMOutBit
__LINKINFO_IMPORT_EncMOutBit:
	.bss 0
	.export __LINKINFO_IMPORT_EncMDct18
__LINKINFO_IMPORT_EncMDct18:
	.bss 0
	.export __LINKINFO_IMPORT_EncMDct18Asm
__LINKINFO_IMPORT_EncMDct18Asm:
	.bss 0
	.export __LINKINFO_IMPORT_EncMInitBits
__LINKINFO_IMPORT_EncMInitBits:
	.bss 0
	.export __LINKINFO_IMPORT_EncMAlignBitsToByte
__LINKINFO_IMPORT_EncMAlignBitsToByte:
	.bss 0
	.export __LINKINFO_IMPORT_EncMGetBitPtr
__LINKINFO_IMPORT_EncMGetBitPtr:
	.bss 0
	.export __LINKINFO_IMPORT_EncMInsertBit
__LINKINFO_IMPORT_EncMInsertBit:
	.bss 0
	.export __LINKINFO_IMPORT_EncMInsertBits
__LINKINFO_IMPORT_EncMInsertBits:
	.bss 0
	.export __LINKINFO_IMPORT_EncMSetBitBytePtr
__LINKINFO_IMPORT_EncMSetBitBytePtr:
	.bss 0
	.export __LINKINFO_IMPORT_EncMMoveBitBytes
__LINKINFO_IMPORT_EncMMoveBitBytes:
	.bss 0
	.export __LINKINFO_IMPORT_EncMWriteBitBytes
__LINKINFO_IMPORT_EncMWriteBitBytes:
	.bss 0
	.export __LINKINFO_IMPORT_encMBitMasks
__LINKINFO_IMPORT_encMBitMasks:
	.bss 0
	.export __LINKINFO_IMPORT_memmove
__LINKINFO_IMPORT_memmove:
	.bss 0
	.export __LINKINFO_IMPORT_encMCos32
__LINKINFO_IMPORT_encMCos32:
	.bss 0
	.export __LINKINFO_IMPORT_encMDct18
__LINKINFO_IMPORT_encMDct18:
	.bss 0
	.export __LINKINFO_IMPORT_EncMDct32
__LINKINFO_IMPORT_EncMDct32:
	.bss 0
	.export __LINKINFO_IMPORT_huffEnc2
__LINKINFO_IMPORT_huffEnc2:
	.bss 0
	.export __LINKINFO_IMPORT_encMHuff2BitsAndCode00
__LINKINFO_IMPORT_encMHuff2BitsAndCode00:
	.bss 0
	.export __LINKINFO_IMPORT_encMHuff2BitsAndCode01
__LINKINFO_IMPORT_encMHuff2BitsAndCode01:
	.bss 0
	.export __LINKINFO_IMPORT_encMHuff2BitsAndCode02
__LINKINFO_IMPORT_encMHuff2BitsAndCode02:
	.bss 0
	.export __LINKINFO_IMPORT_encMHuff2BitsAndCode03
__LINKINFO_IMPORT_encMHuff2BitsAndCode03:
	.bss 0
	.export __LINKINFO_IMPORT_encMHuff2BitsAndCode04
__LINKINFO_IMPORT_encMHuff2BitsAndCode04:
	.bss 0
	.export __LINKINFO_IMPORT_encMHuff2BitsAndCode05
__LINKINFO_IMPORT_encMHuff2BitsAndCode05:
	.bss 0
	.export __LINKINFO_IMPORT_encMHuff2BitsAndCode06
__LINKINFO_IMPORT_encMHuff2BitsAndCode06:
	.bss 0
	.export __LINKINFO_IMPORT_encMHuff2BitsAndCode07
__LINKINFO_IMPORT_encMHuff2BitsAndCode07:
	.bss 0
	.export __LINKINFO_IMPORT_encMHuff2BitsAndCode08
__LINKINFO_IMPORT_encMHuff2BitsAndCode08:
	.bss 0
	.export __LINKINFO_IMPORT_encMHuff2BitsAndCode09
__LINKINFO_IMPORT_encMHuff2BitsAndCode09:
	.bss 0
	.export __LINKINFO_IMPORT_encMHuff2BitsAndCode10
__LINKINFO_IMPORT_encMHuff2BitsAndCode10:
	.bss 0
	.export __LINKINFO_IMPORT_encMHuff2BitsAndCode11
__LINKINFO_IMPORT_encMHuff2BitsAndCode11:
	.bss 0
	.export __LINKINFO_IMPORT_encMHuff2BitsAndCode12
__LINKINFO_IMPORT_encMHuff2BitsAndCode12:
	.bss 0
	.export __LINKINFO_IMPORT_encMHuff2BitsAndCode13
__LINKINFO_IMPORT_encMHuff2BitsAndCode13:
	.bss 0
	.export __LINKINFO_IMPORT_encMHuff2BitsAndCode14
__LINKINFO_IMPORT_encMHuff2BitsAndCode14:
	.bss 0
	.export __LINKINFO_IMPORT_encMWinCoeffI
__LINKINFO_IMPORT_encMWinCoeffI:
	.bss 0
	.export __LINKINFO_IMPORT_encMHybridWinFuncI
__LINKINFO_IMPORT_encMHybridWinFuncI:
	.bss 0
	.export __LINKINFO_IMPORT_encMPow34
__LINKINFO_IMPORT_encMPow34:
	.bss 0
	.export __LINKINFO_IMPORT_encMButrCSCAI
__LINKINFO_IMPORT_encMButrCSCAI:
	.bss 0
	.export __LINKINFO_IMPORT_encDiv256
__LINKINFO_IMPORT_encDiv256:
	.bss 0
	.export __LINKINFO_IMPORT_encVOnePer
__LINKINFO_IMPORT_encVOnePer:
	.bss 0
	.export __LINKINFO_IMPORT_encVDbRatio
__LINKINFO_IMPORT_encVDbRatio:
	.bss 0
	.export __LINKINFO_IMPORT_evBands08k_64
__LINKINFO_IMPORT_evBands08k_64:
	.bss 0
	.export __LINKINFO_IMPORT_evMean08k_64
__LINKINFO_IMPORT_evMean08k_64:
	.bss 0
	.export __LINKINFO_IMPORT_evBands08k_256
__LINKINFO_IMPORT_evBands08k_256:
	.bss 0
	.export __LINKINFO_IMPORT_evMean08k_256
__LINKINFO_IMPORT_evMean08k_256:
	.bss 0
	.export __LINKINFO_IMPORT_evBands16k_128
__LINKINFO_IMPORT_evBands16k_128:
	.bss 0
	.export __LINKINFO_IMPORT_evMean16k_128
__LINKINFO_IMPORT_evMean16k_128:
	.bss 0
	.export __LINKINFO_IMPORT_evBands16k_512
__LINKINFO_IMPORT_evBands16k_512:
	.bss 0
	.export __LINKINFO_IMPORT_evMean16k_512
__LINKINFO_IMPORT_evMean16k_512:
	.bss 0
	.export __LINKINFO_IMPORT_evBands32k_128
__LINKINFO_IMPORT_evBands32k_128:
	.bss 0
	.export __LINKINFO_IMPORT_evMean32k_128
__LINKINFO_IMPORT_evMean32k_128:
	.bss 0
	.export __LINKINFO_IMPORT_evBands32k_1024
__LINKINFO_IMPORT_evBands32k_1024:
	.bss 0
	.export __LINKINFO_IMPORT_evMean32k_1024
__LINKINFO_IMPORT_evMean32k_1024:
	.bss 0
	.export __LINKINFO_IMPORT_evBands44k_128
__LINKINFO_IMPORT_evBands44k_128:
	.bss 0
	.export __LINKINFO_IMPORT_evMean44k_128
__LINKINFO_IMPORT_evMean44k_128:
	.bss 0
	.export __LINKINFO_IMPORT_evBands44k_1024
__LINKINFO_IMPORT_evBands44k_1024:
	.bss 0
	.export __LINKINFO_IMPORT_evMean44k_1024
__LINKINFO_IMPORT_evMean44k_1024:
	.bss 0
	.export __LINKINFO_IMPORT_evBands48k_256
__LINKINFO_IMPORT_evBands48k_256:
	.bss 0
	.export __LINKINFO_IMPORT_evMean48k_256
__LINKINFO_IMPORT_evMean48k_256:
	.bss 0
	.export __LINKINFO_IMPORT_evBands48k_1024
__LINKINFO_IMPORT_evBands48k_1024:
	.bss 0
	.export __LINKINFO_IMPORT_evMean48k_1024
__LINKINFO_IMPORT_evMean48k_1024:
	.bss 0
	.export __LINKINFO_IMPORT_EncVSampleClear
__LINKINFO_IMPORT_EncVSampleClear:
	.bss 0
	.export __LINKINFO_IMPORT_EncVShiftUpAndCopyToSamp
__LINKINFO_IMPORT_EncVShiftUpAndCopyToSamp:
	.bss 0
	.export __LINKINFO_IMPORT_MemCpySampleT
__LINKINFO_IMPORT_MemCpySampleT:
	.bss 0
	.export __LINKINFO_IMPORT_CodMpgDelete
__LINKINFO_IMPORT_CodMpgDelete:
	.bss 0
	.export __LINKINFO_IMPORT_CodMpgDecode
__LINKINFO_IMPORT_CodMpgDecode:
	.bss 0
	.export __LINKINFO_IMPORT_InitCommon
__LINKINFO_IMPORT_InitCommon:
	.bss 0
	.export __LINKINFO_IMPORT_CodMpgInitReadFrame
__LINKINFO_IMPORT_CodMpgInitReadFrame:
	.bss 0
	.export __LINKINFO_IMPORT_CodMpgReadFrame
__LINKINFO_IMPORT_CodMpgReadFrame:
	.bss 0
	.export __LINKINFO_IMPORT_CodMpgPlayFrame
__LINKINFO_IMPORT_CodMpgPlayFrame:
	.bss 0
	.export __LINKINFO_IMPORT_CalcCrc
__LINKINFO_IMPORT_CalcCrc:
	.bss 0
	.export __LINKINFO_IMPORT_rewindbitsy
__LINKINFO_IMPORT_rewindbitsy:
	.bss 0
	.export __LINKINFO_IMPORT_mpeg_crc_table
__LINKINFO_IMPORT_mpeg_crc_table:
	.bss 0
	.export __LINKINFO_IMPORT_InitLayer3
__LINKINFO_IMPORT_InitLayer3:
	.bss 0
	.export __LINKINFO_IMPORT_DecodeHeader
__LINKINFO_IMPORT_DecodeHeader:
	.bss 0
	.export __LINKINFO_IMPORT_mymem16cpy
__LINKINFO_IMPORT_mymem16cpy:
	.bss 0
	.export __LINKINFO_IMPORT_CodMpgSetPointer
__LINKINFO_IMPORT_CodMpgSetPointer:
	.bss 0
	.export __LINKINFO_IMPORT_codMpgFreqs
__LINKINFO_IMPORT_codMpgFreqs:
	.bss 0
	.export __LINKINFO_IMPORT_codMpgTabsel_123
__LINKINFO_IMPORT_codMpgTabsel_123:
	.bss 0
	.export __LINKINFO_IMPORT_MemCopyPackedBigEndianYY
__LINKINFO_IMPORT_MemCopyPackedBigEndianYY:
	.bss 0
	.export __LINKINFO_IMPORT_getbitsy
__LINKINFO_IMPORT_getbitsy:
	.bss 0
	.export __LINKINFO_IMPORT_MpgLayer3
__LINKINFO_IMPORT_MpgLayer3:
	.bss 0
	.export __LINKINFO_IMPORT_Pow43Gt100
__LINKINFO_IMPORT_Pow43Gt100:
	.bss 0
	.export __LINKINFO_IMPORT_III_get_side_info_1y
__LINKINFO_IMPORT_III_get_side_info_1y:
	.bss 0
	.export __LINKINFO_IMPORT_III_get_side_info_2y
__LINKINFO_IMPORT_III_get_side_info_2y:
	.bss 0
	.export __LINKINFO_IMPORT_III_get_scale_factors_1y
__LINKINFO_IMPORT_III_get_scale_factors_1y:
	.bss 0
	.export __LINKINFO_IMPORT_III_get_scale_factors_2y
__LINKINFO_IMPORT_III_get_scale_factors_2y:
	.bss 0
	.export __LINKINFO_IMPORT_III_huffman_decode_32y
__LINKINFO_IMPORT_III_huffman_decode_32y:
	.bss 0
	.export __LINKINFO_IMPORT_III_check_bands_32
__LINKINFO_IMPORT_III_check_bands_32:
	.bss 0
	.export __LINKINFO_IMPORT_III_dequantize_32
__LINKINFO_IMPORT_III_dequantize_32:
	.bss 0
	.export __LINKINFO_IMPORT_III_reorder_32
__LINKINFO_IMPORT_III_reorder_32:
	.bss 0
	.export __LINKINFO_IMPORT_III_i_stereo_32
__LINKINFO_IMPORT_III_i_stereo_32:
	.bss 0
	.export __LINKINFO_IMPORT_III_hybrid_32
__LINKINFO_IMPORT_III_hybrid_32:
	.bss 0
	.export __LINKINFO_IMPORT_MpgSendSpectrum
__LINKINFO_IMPORT_MpgSendSpectrum:
	.bss 0
	.export __LINKINFO_IMPORT_codMpgBandInfo
__LINKINFO_IMPORT_codMpgBandInfo:
	.bss 0
	.export __LINKINFO_IMPORT_pow43tab
__LINKINFO_IMPORT_pow43tab:
	.bss 0
	.export __LINKINFO_IMPORT_codMpgSlen
__LINKINFO_IMPORT_codMpgSlen:
	.bss 0
	.export __LINKINFO_IMPORT_codMpgPretab1
__LINKINFO_IMPORT_codMpgPretab1:
	.bss 0
	.export __LINKINFO_IMPORT_codMpgPretab2
__LINKINFO_IMPORT_codMpgPretab2:
	.bss 0
	.export __LINKINFO_IMPORT_codMpgNPow2
__LINKINFO_IMPORT_codMpgNPow2:
	.bss 0
	.export __LINKINFO_IMPORT_codMpgNPow1
__LINKINFO_IMPORT_codMpgNPow1:
	.bss 0
	.export __LINKINFO_IMPORT_pow43_2_mant
__LINKINFO_IMPORT_pow43_2_mant:
	.bss 0
	.export __LINKINFO_IMPORT_pow43_2_exp
__LINKINFO_IMPORT_pow43_2_exp:
	.bss 0
	.export __LINKINFO_IMPORT_pow43_4_mant
__LINKINFO_IMPORT_pow43_4_mant:
	.bss 0
	.export __LINKINFO_IMPORT_pow43_4_exp
__LINKINFO_IMPORT_pow43_4_exp:
	.bss 0
	.export __LINKINFO_IMPORT_Pow43
__LINKINFO_IMPORT_Pow43:
	.bss 0
	.export __LINKINFO_IMPORT_get1bity
__LINKINFO_IMPORT_get1bity:
	.bss 0
	.export __LINKINFO_IMPORT_codMpgNSlen2
__LINKINFO_IMPORT_codMpgNSlen2:
	.bss 0
	.export __LINKINFO_IMPORT_codMpgISlen2
__LINKINFO_IMPORT_codMpgISlen2:
	.bss 0
	.export __LINKINFO_IMPORT_codMpgHt
__LINKINFO_IMPORT_codMpgHt:
	.bss 0
	.export __LINKINFO_IMPORT_III_HuffDecodePairsy
__LINKINFO_IMPORT_III_HuffDecodePairsy:
	.bss 0
	.export __LINKINFO_IMPORT_codMpgHtc
__LINKINFO_IMPORT_codMpgHtc:
	.bss 0
	.export __LINKINFO_IMPORT_GetYy
__LINKINFO_IMPORT_GetYy:
	.bss 0
	.export __LINKINFO_IMPORT_III_DequantBand
__LINKINFO_IMPORT_III_DequantBand:
	.bss 0
	.export __LINKINFO_IMPORT_codMpgTan1_1
__LINKINFO_IMPORT_codMpgTan1_1:
	.bss 0
	.export __LINKINFO_IMPORT_codMpgTan2_1
__LINKINFO_IMPORT_codMpgTan2_1:
	.bss 0
	.export __LINKINFO_IMPORT_codMpgTan1_2
__LINKINFO_IMPORT_codMpgTan1_2:
	.bss 0
	.export __LINKINFO_IMPORT_codMpgTan2_2
__LINKINFO_IMPORT_codMpgTan2_2:
	.bss 0
	.export __LINKINFO_IMPORT_dct36_32_linear
__LINKINFO_IMPORT_dct36_32_linear:
	.bss 0
	.export __LINKINFO_IMPORT_III_DctSkipped
__LINKINFO_IMPORT_III_DctSkipped:
	.bss 0
	.export __LINKINFO_IMPORT_codMpgWin
__LINKINFO_IMPORT_codMpgWin:
	.bss 0
	.export __LINKINFO_IMPORT_codMpgWin1
__LINKINFO_IMPORT_codMpgWin1:
	.bss 0
	.export __LINKINFO_IMPORT_dct12_32_linear
__LINKINFO_IMPORT_dct12_32_linear:
	.bss 0
	.export __LINKINFO_IMPORT_logdb32
__LINKINFO_IMPORT_logdb32:
	.bss 0
	.export __LINKINFO_IMPORT_III_matrix_32
__LINKINFO_IMPORT_III_matrix_32:
	.bss 0
	.export __LINKINFO_IMPORT_III_antialias_32
__LINKINFO_IMPORT_III_antialias_32:
	.bss 0
	.export __LINKINFO_IMPORT_III_get_synth_32
__LINKINFO_IMPORT_III_get_synth_32:
	.bss 0
	.export __LINKINFO_IMPORT_SynthesisMono32_2
__LINKINFO_IMPORT_SynthesisMono32_2:
	.bss 0
	.export __LINKINFO_IMPORT_Synthesis32_2
__LINKINFO_IMPORT_Synthesis32_2:
	.bss 0
	.export __LINKINFO_IMPORT_codMpgAaCsca
__LINKINFO_IMPORT_codMpgAaCsca:
	.bss 0
	.export __LINKINFO_IMPORT_codMpgPowQuarter
__LINKINFO_IMPORT_codMpgPowQuarter:
	.bss 0
	.export __LINKINFO_IMPORT_pow43_1_mant
__LINKINFO_IMPORT_pow43_1_mant:
	.bss 0
	.export __LINKINFO_IMPORT_Pow43_32u
__LINKINFO_IMPORT_Pow43_32u:
	.bss 0
	.export __LINKINFO_IMPORT_pow43_1_exp
__LINKINFO_IMPORT_pow43_1_exp:
	.bss 0
	.export __LINKINFO_IMPORT_codMpgDecwin16scaled
__LINKINFO_IMPORT_codMpgDecwin16scaled:
	.bss 0
	.export __LINKINFO_IMPORT_cos12Tab
__LINKINFO_IMPORT_cos12Tab:
	.bss 0
	.export __LINKINFO_IMPORT_cos36Tab
__LINKINFO_IMPORT_cos36Tab:
	.bss 0
	.export __LINKINFO_IMPORT_cos64NewTab
__LINKINFO_IMPORT_cos64NewTab:
	.bss 0
	.export __LINKINFO_IMPORT_codMpgTab0
__LINKINFO_IMPORT_codMpgTab0:
	.bss 0
	.export __LINKINFO_IMPORT_codMpgTab1
__LINKINFO_IMPORT_codMpgTab1:
	.bss 0
	.export __LINKINFO_IMPORT_codMpgTab2
__LINKINFO_IMPORT_codMpgTab2:
	.bss 0
	.export __LINKINFO_IMPORT_codMpgTab3
__LINKINFO_IMPORT_codMpgTab3:
	.bss 0
	.export __LINKINFO_IMPORT_codMpgTab5
__LINKINFO_IMPORT_codMpgTab5:
	.bss 0
	.export __LINKINFO_IMPORT_codMpgTab6
__LINKINFO_IMPORT_codMpgTab6:
	.bss 0
	.export __LINKINFO_IMPORT_codMpgTab7
__LINKINFO_IMPORT_codMpgTab7:
	.bss 0
	.export __LINKINFO_IMPORT_codMpgTab8
__LINKINFO_IMPORT_codMpgTab8:
	.bss 0
	.export __LINKINFO_IMPORT_codMpgTab9
__LINKINFO_IMPORT_codMpgTab9:
	.bss 0
	.export __LINKINFO_IMPORT_codMpgTab10
__LINKINFO_IMPORT_codMpgTab10:
	.bss 0
	.export __LINKINFO_IMPORT_codMpgTab11
__LINKINFO_IMPORT_codMpgTab11:
	.bss 0
	.export __LINKINFO_IMPORT_codMpgTab12
__LINKINFO_IMPORT_codMpgTab12:
	.bss 0
	.export __LINKINFO_IMPORT_codMpgTab13
__LINKINFO_IMPORT_codMpgTab13:
	.bss 0
	.export __LINKINFO_IMPORT_codMpgTab15
__LINKINFO_IMPORT_codMpgTab15:
	.bss 0
	.export __LINKINFO_IMPORT_codMpgTab16
__LINKINFO_IMPORT_codMpgTab16:
	.bss 0
	.export __LINKINFO_IMPORT_codMpgTab24
__LINKINFO_IMPORT_codMpgTab24:
	.bss 0
	.export __LINKINFO_IMPORT_codMpgTab_c0
__LINKINFO_IMPORT_codMpgTab_c0:
	.bss 0
	.export __LINKINFO_IMPORT_codMpgTab_c1
__LINKINFO_IMPORT_codMpgTab_c1:
	.bss 0
	.export __LINKINFO_IMPORT_codMpgDct64skips2
__LINKINFO_IMPORT_codMpgDct64skips2:
	.bss 0
	.export __LINKINFO_IMPORT_dct64_32
__LINKINFO_IMPORT_dct64_32:
	.bss 0
	.export __LINKINFO_IMPORT__divide16signed
__LINKINFO_IMPORT__divide16signed:
	.bss 0
	.export __LINKINFO_IMPORT_strstr
__LINKINFO_IMPORT_strstr:
	.bss 0
	.export __LINKINFO_IMPORT_strncat
__LINKINFO_IMPORT_strncat:
	.bss 0
	.export __LINKINFO_IMPORT_strxfrm
__LINKINFO_IMPORT_strxfrm:
	.bss 0
	.export __LINKINFO_IMPORT_strspn
__LINKINFO_IMPORT_strspn:
	.bss 0
	.export __LINKINFO_IMPORT_strcspn
__LINKINFO_IMPORT_strcspn:
	.bss 0
	.export __LINKINFO_IMPORT_strcat
__LINKINFO_IMPORT_strcat:
	.bss 0
	.export __LINKINFO_IMPORT_strerror
__LINKINFO_IMPORT_strerror:
	.bss 0
	.export __LINKINFO_IMPORT_strpbrk
__LINKINFO_IMPORT_strpbrk:
	.bss 0
	.export __LINKINFO_IMPORT_memchr
__LINKINFO_IMPORT_memchr:
	.bss 0
	.export __LINKINFO_IMPORT_strncpyXX
__LINKINFO_IMPORT_strncpyXX:
	.bss 0
	.export __LINKINFO_IMPORT_strncpyXY
__LINKINFO_IMPORT_strncpyXY:
	.bss 0
	.export __LINKINFO_IMPORT_strncpyYX
__LINKINFO_IMPORT_strncpyYX:
	.bss 0
	.export __LINKINFO_IMPORT_strncpyYY
__LINKINFO_IMPORT_strncpyYY:
	.bss 0
	.export __LINKINFO_IMPORT_div16approx
__LINKINFO_IMPORT_div16approx:
	.bss 0
	.export __LINKINFO_IMPORT__divide16unsigned
__LINKINFO_IMPORT__divide16unsigned:
	.bss 0
	.export __LINKINFO_IMPORTASM_df_to_int
__LINKINFO_IMPORTASM_df_to_int:
	.bss 0
	.export __LINKINFO_IMPORTASM_uint_to_df
__LINKINFO_IMPORTASM_uint_to_df:
	.bss 0
	.export __LINKINFO_IMPORTASM_df_to_uint
__LINKINFO_IMPORTASM_df_to_uint:
	.bss 0
	.export __LINKINFO_IMPORTASM_df_to_ushort
__LINKINFO_IMPORTASM_df_to_ushort:
	.bss 0
	.export __LINKINFO_IMPORT_memmoveXX
__LINKINFO_IMPORT_memmoveXX:
	.bss 0
	.export __LINKINFO_IMPORT_logdb
__LINKINFO_IMPORT_logdb:
	.bss 0
	.export __LINKINFO_IMPORT_win64
__LINKINFO_IMPORT_win64:
	.bss 0
	.export __LINKINFO_IMPORT_win128
__LINKINFO_IMPORT_win128:
	.bss 0
	.export __LINKINFO_IMPORT_win256
__LINKINFO_IMPORT_win256:
	.bss 0
	.export __LINKINFO_IMPORT_win512
__LINKINFO_IMPORT_win512:
	.bss 0
	.export __LINKINFO_IMPORT_win1024
__LINKINFO_IMPORT_win1024:
	.bss 0
	.export __LINKINFO_IMPORT_win2048
__LINKINFO_IMPORT_win2048:
	.bss 0
	.export __LINKINFO_IMPORT_FLOOR1_fromdB_LOOKUP_i
__LINKINFO_IMPORT_FLOOR1_fromdB_LOOKUP_i:
	.bss 0
	.export __LINKINFO_IMPORT_Swap32Words
__LINKINFO_IMPORT_Swap32Words:
	.bss 0
	.export __LINKINFO_IMPORT_Swap32
__LINKINFO_IMPORT_Swap32:
	.bss 0
	.export __LINKINFO_IMPORT_Swap32Mix
__LINKINFO_IMPORT_Swap32Mix:
	.bss 0
	.export __LINKINFO_IMPORTASM_vsstdio
__LINKINFO_IMPORTASM_vsstdio:
	.bss 0
	.export __LINKINFO_IMPORT_iFlist
__LINKINFO_IMPORT_iFlist:
	.bss 0
	.export __LINKINFO_IMPORT_vo_kernel_init
__LINKINFO_IMPORT_vo_kernel_init:
	.bss 0
	.export __LINKINFO_IMPORT_vo_ungetc
__LINKINFO_IMPORT_vo_ungetc:
	.bss 0
	.export __LINKINFO_IMPORT_diskSurfaceY
__LINKINFO_IMPORT_diskSurfaceY:
	.bss 0
	.export __LINKINFO_IMPORT_VoFatNameFromDir
__LINKINFO_IMPORT_VoFatNameFromDir:
	.bss 0
	.export __LINKINFO_IMPORT_ZPC
__LINKINFO_IMPORT_ZPC:
	.bss 0
	.export __LINKINFO_IMPORT_CoarseSine
__LINKINFO_IMPORT_CoarseSine:
	.bss 0
	.export __LINKINFO_IMPORT_GetDivider
__LINKINFO_IMPORT_GetDivider:
	.bss 0
	.export __LINKINFO_IMPORT_timeCountAdd
__LINKINFO_IMPORT_timeCountAdd:
	.bss 0
	.export __LINKINFO_IMPORT_crc_table
__LINKINFO_IMPORT_crc_table:
	.bss 0
	.export __LINKINFO_IMPORT_crc32Tab
__LINKINFO_IMPORT_crc32Tab:
	.bss 0
	.export __LINKINFO_IMPORT_appIXYStart
__LINKINFO_IMPORT_appIXYStart:
	.bss 0
	.export _myBuf
_myBuf:
	.bss 256

//_____________________________________________________________
//
	.sect data_x,const_x	// 1952 words
printblock_1:
	.word "PrintBlock(dev=%p, bl=%ld, v=%d)\n"

	.zero 1
emediac_2:
	.word "E: Media cannot be read\n"

	.zero 1
block0x_3:
	.word "  Block 0x%lx (%ld)\n"

	.zero 1
x_4:
	.word "    %03x:"

	.zero 1
x_5:
	.word " %04x"

	.zero 1
String_6:
	.word " "

	.zero 1
c_7:
	.word "%c"

	.zero 1
String_8:
	.word "\n"

	.zero 1
fat32sect_9:
	.word "FAT32 SECTOR 0:\n"

	.zero 1
jumpc_10:
	.word "    Jump Code + NOP: "

	.zero 1
x_11:
	.word " %02x"

	.zero 1
oemna_12:
	.word "    OEM Name: "

	.zero 1
String_13:
	.word " \""

	.zero 1
String_14:
	.word "\"\n"

	.zero 1
bytes_15:
	.word "    Bytes Per Sector %d\n"

	.zero 1
sector_16:
	.word "    Sectors Per Cluster %d\n"

	.zero 1
reserv_17:
	.word "    Reserved Sectors %d\n"

	.zero 1
number_18:
	.word "    Number Of FATs %d\n"

	.zero 1
c_19:
	.word "      -> CAN'T BE FAT32 (perhaps exFAT?)\n"

	.zero 1
bit_20:
	.word "    16-bit Number of Sectors per FAT %d\n"

	.zero 1
c_21:
	.word "      -> CAN'T BE FAT32\n"

	.zero 1
media_22:
	.word "    Media Descriptor (0xf8 for HDs) 0x%x\n"

	.zero 1
bit_23:
	.word "    16-bit FAT size %d\n"

	.zero 1
sector_24:
	.word "    Sectors Per Track %d\n"

	.zero 1
number_25:
	.word "    Number of Heads %d\n"

	.zero 1
number_26:
	.word "    Number of Hidden Sectors in Partition %ld\n"

	.zero 1
bit_27:
	.word "    32-bit Number of Sectors in Partition %ld\n"

	.zero 1
bit_28:
	.word "    32-bit Number of Sectors per FAT %ld\n"

	.zero 1
flags_29:
	.word "    Flags 0x%x\n"

	.zero 1
versio_30:
	.word "    Version of FAT32 Drive 0x%x\n"

	.zero 1
cluste_31:
	.word "    Cluster Number of the Start of the Root Directory %ld\n"

	.zero 1
sector_32:
	.word "    Sector Number of the FileSystem Information Sector %d\n"

	.zero 1
sector_33:
	.word "    Sector Number of the Backup Boot Sector %d\n"

	.zero 1
logica_34:
	.word "    Logical Drive Number of Partition %d\n"

	.zero 1
extend_35:
	.word "    Extended Signature (0x29) 0x%x\n"

	.zero 1
serial_36:
	.word "    Serial Number of Partition 0x%04lx\n"

	.zero 1
volume_37:
	.word "    Volume name of Partition:"

	.zero 1
bootr_38:
	.word "    Boot Record Signature (0x55 0xaa) 0x%02x 0x%02x\n"

	.zero 1
fat32sect_39:
	.word "FAT32 SECTOR 1:"

	.zero 1
first_40:
	.word "    First Signature (0x52 0x52 0x61 0x41) 0x%02x 0x%02x 0x%02x 0x%02x\n"

	.zero 1
signat_41:
	.word "    Signature of FSInfo Sector (0x72 0x72 0x41 0x61) 0x%02x 0x%02x 0x%02x 0x"
	.word "%02x\n"

	.zero 1
number_42:
	.word "    Number of Free Clusters 0x%08lx\n"

	.zero 1
mostr_43:
	.word "    Most Recently Allocated Cluster 0x%08lx\n"

	.zero 1
fatstart_44:
	.word "fatStart %ld, fatSize %ld, rootStart %ld\n"

	.zero 1
fatroots_45:
	.word "FAT ROOT SECTOR 0x%lx (%ld)\n"

	.zero 1
paramspl_46:
	.word "ParamSpl"

	.zero 1
h_47:
	.word "-h"

	.zero 1
usagefat_48:
	.word "Usage: FatInfo x: [blkNum] [-v|+v|-h]"

	.zero 1
xdriven_49:
	.word "x:\011Drive name"

	.zero 1
blknumpri_50:
	.word "blkNum\011Print contents of a disk block"

	.zero 1
vvverb_51:
	.word "-v|+v\011Verbose on/off"

	.zero 1
hshowth_52:
	.word "-h\011Show this help\n"

	.zero 1
v_53:
	.word "-v"

	.zero 1
v_54:
	.word "+v"

	.zero 1
enodriv_55:
	.word "E: No drive letter specified\n"

	.zero 1
eillegal_56:
	.word "E: Illegal drive name \"%s\"\n"

	.zero 1
enonexi_57:
	.word "E: Non-existing drive \"%s\"\n"

	.zero 1
fatfound_58:
	.word "FAT FOUND IN ROOT BLOCK\n"

	.zero 1
foundpart_59:
	.word "FOUND PARTITION TABLE\n"

	.zero 1
partition_60:
	.word "PARTITION%d = 0x%08lx"

	.zero 1
_partTypes93ab90:
	.word String_65, String_66, String_67, String_68, String_69, String_70, String_71, String_72
	.word String_73, String_74, String_75, String_76, String_77, String_78, String_79, String_80
unknown_61:
	.word "unknown"

	.zero 1
type0x_62:
	.word ", type 0x%02x (%s)\n"

	.zero 1
none_63:
	.word " (none)\n"

	.zero 1
foundnoth_64:
	.word "FOUND NOTHING IN BLOCK 0\n"

	.zero 1
String_65:
	.word "empty"

	.zero 1
String_66:
	.word "FAT12"

	.zero 1
String_67:
	.word "XENIX root"

	.zero 1
String_68:
	.word "XENIX usr"

	.zero 1
String_69:
	.word "FAT16"

	.zero 1
String_70:
	.word "Ext.part. CHS"

	.zero 1
String_71:
	.word "FAT16B"

	.zero 1
String_72:
	.word "IFS/HPFS/NTFS/exFAT/QNX"

	.zero 1
String_73:
	.word "FAT12/FAT16/OS2/AIX/etc"

	.zero 1
String_74:
	.word "QNX/OS9/OS2/etc"

	.zero 1
String_75:
	.word "OS2 Boot/Coherent swap"

	.zero 1
String_76:
	.word "FAT32 CHS"

	.zero 1
String_77:
	.word "FAT32 LBA"

	.zero 1
String_78:
	.word "reserved"

	.zero 1
String_79:
	.word "FAT16B LBA"

	.zero 1
String_80:
	.word "Ext.part. LBA"

	.zero 1

	.end
