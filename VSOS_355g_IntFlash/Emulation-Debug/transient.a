
//_____________________________________________________________
//
	.sect code,TransientAddKernelSymbols	// 778 words
	.export _TransientAddKernelSymbols
_TransientAddKernelSymbols:
	ldx (I6)+1,NULL	// I6 += 1
	stx LR0,(I6)+1
	stx A0,(I6) ; sty C0,(I6)+1
// 	TransientAddKernelSymbolsAsm();
	call _TransientAddKernelSymbolsAsm
	stx I1,(I6) ; sty I2,(I6)
// jumped away
// 	SymbolAdd("_ResetSdCard", (void *)1, (int)ResetSdCard);
	ldc 1,I1	// 1 -> I1
	ldc _ResetSdCard,C0	// ET0
	call _SymbolAdd
	ldc resetsdca_1,I2	// I2
// jumped away
// 	SymbolAdd("_FatOpenEntry", (void *)1, (int)FatOpenEntry);
	ldc 1,I1	// 1 -> I1
	ldc _FatOpenEntry,C0	// ET6
	call _SymbolAdd
	ldc fatopenen_2,I2	// I2
// jumped away
// 	SymbolAdd("_FatNameFromDir", (void *)1, (int)FatNameFromDirEntry);
	ldc 1,I1	// 1 -> I1
	ldc _FatNameFromDirEntry,C0	// ETb
	call _SymbolAdd
	ldc fatnamefr_3,I2	// I2
// jumped away
// 	SymbolAdd("_InitMutexN", (void *)1, (int)InitMutexN);
	ldc 1,I1	// 1 -> I1
	ldc _InitMutexN,C0	// ET10
	call _SymbolAdd
	ldc initmutex_4,I2	// I2
// jumped away
// 	SymbolAdd("_ObtainMutex", (void *)1, (int)ObtainMutex);
	ldc 1,I1	// 1 -> I1
	ldc _ObtainMutex,C0	// ET15
	call _SymbolAdd
	ldc obtainmut_5,I2	// I2
// jumped away
// 	SymbolAdd("_AttemptMutex", (void *)1, (int)AttemptMutex);
	ldc 1,I1	// 1 -> I1
	ldc _AttemptMutex,C0	// ET1a
	call _SymbolAdd
	ldc attemptmu_6,I2	// I2
// jumped away
// 	SymbolAdd("_ReleaseMutex", (void *)1, (int)ReleaseMutex);
	ldc 1,I1	// 1 -> I1
	ldc _ReleaseMutex,C0	// ET1f
	call _SymbolAdd
	ldc releasemu_7,I2	// I2
// jumped away
// 	SymbolAdd("_SetNextApp", (void *)1, (int)SetNextApp);
	ldc 1,I1	// 1 -> I1
	ldc _SetNextApp,C0	// ET24
	call _SymbolAdd
	ldc setnextap_8,I2	// I2
// jumped away
// 	SymbolAdd("_LoadLibraryP", (void *)1, (int)LoadLibraryP);
	ldc 1,I1	// 1 -> I1
	ldc _LoadLibraryP,C0	// ET29
	call _SymbolAdd
	ldc loadlibra_9,I2	// I2
// jumped away
// 	SymbolAdd("_CreateTaskAndStack", (void *)1, (int)CreateTaskAndStack);
	ldc 1,I1	// 1 -> I1
	ldc _CreateTaskAndStack,C0	// ET2e
	call _SymbolAdd
	ldc createtas_10,I2	// I2
// jumped away
// 	SymbolAdd("_AddCyclic", (void *)1, (int)AddCyclic);
	ldc 1,I1	// 1 -> I1
	ldc _AddCyclic,C0	// ET33
	call _SymbolAdd
	ldc addcyclic_11,I2	// I2
// jumped away
// 	SymbolAdd("_DropCyclic", (void *)1, (int)DropCyclic);
	ldc 1,I1	// 1 -> I1
	ldc _DropCyclic,C0	// ET38
	call _SymbolAdd
	ldc dropcycli_12,I2	// I2
// jumped away
// 	SymbolAdd("_SymbolDeleteLib", (void *)1, (int)SymbolDeleteLib);
	ldc 1,I1	// 1 -> I1
	ldc _SymbolDeleteLib,C0	// ET3d
	call _SymbolAdd
	ldc symboldel_13,I2	// I2
// jumped away
// 	SymbolAdd("_SymbolDelete", (void *)1, (int)SymbolDelete);
	ldc 1,I1	// 1 -> I1
	ldc _SymbolDelete,C0	// ET42
	call _SymbolAdd
	ldc symboldel_14,I2	// I2
// jumped away
// 	SymbolAdd("_SymbolFindByCrc", (void *)1, (int)SymbolFindByCrc);
	ldc 1,I1	// 1 -> I1
	ldc _SymbolFindByCrc,C0	// ET47
	call _SymbolAdd
	ldc symbolfin_15,I2	// I2
// jumped away
// 	SymbolAdd("_SymbolCalcCrc32String", (void *)1, (int)SymbolCalcCrc32String);
	ldc 1,I1	// 1 -> I1
	ldc _SymbolCalcCrc32String,C0	// ET4c
	call _SymbolAdd
	ldc symbolcal_16,I2	// I2
// jumped away
// 	SymbolAdd("_Wait",(void *)1, (int)Wait);
	ldc 1,I1	// 1 -> I1
	ldc _Wait,C0	// ET51
	call _SymbolAdd
	ldc wait_17,I2	// I2
// jumped away
// 	SymbolAdd("_Signal",(void *)1, (int)Signal);
	ldc 1,I1	// 1 -> I1
	ldc _Signal,C0	// ET56
	call _SymbolAdd
	ldc signal_18,I2	// I2
// jumped away
// 	SymbolAdd("_ZPC",(void *)1, (int)ZeroPtrCall);
	ldc 1,I1	// 1 -> I1
	ldc _ZeroPtrCall,C0	// ET5b
	call _SymbolAdd
	ldc zpc_19,I2	// I2
// jumped away
// 	SymbolAdd("_CoarseSine",(void *)1, (int)ISine);
	ldc 1,I1	// 1 -> I1
	ldc _ISine,C0	// ET60
	call _SymbolAdd
	ldc coarsesin_20,I2	// I2
// jumped away
// 	SymbolAdd("_clockSpeed",(void *)1, (int)(&clockSpeed));
	ldc 1,I1	// 1 -> I1
	ldc _clockSpeed,C0	// ET65
	call _SymbolAdd
	ldc clockspee_21,I2	// I2
// jumped away
// 	SymbolAdd("_GetDivider",(void *)1, (int)GetDivider);
	ldc 1,I1	// 1 -> I1
	ldc _GetDivider,C0	// ET6a
	call _SymbolAdd
	ldc getdivide_22,I2	// I2
// jumped away
// 	SymbolAdd("_timeCountAdd",(void *)1, (int)(&timeCountAdd));
	ldc 1,I1	// 1 -> I1
	ldc _timeCountAdd,C0	// ET6f
	call _SymbolAdd
	ldc timecount_23,I2	// I2
// jumped away
// 	SymbolAdd("_thisTask",(void *)1, (int)(&thisTask));
	ldc 1,I1	// 1 -> I1
	ldc _thisTask,C0	// ET74
	call _SymbolAdd
	ldc thistask_24,I2	// I2
// jumped away
// 	SymbolAdd("_appIXYStart",(void *)1, (int)(appIXYStart));
	ldc 1,I1	// 1 -> I1
	ldc _appIXYStart,C0	// ET79
	call _SymbolAdd
	ldc appixysta_25,I2	// I2
// jumped away
// 	SymbolAdd("_AddTask",(void *)1, (int)(&AddTask));
	ldc 1,I1	// 1 -> I1
	ldc _AddTask,C0	// ET7e
	call _SymbolAdd
	ldc addtask_26,I2	// I2
// jumped away
// 	SymbolAdd("_atoi",(void *)1, (int)(&atoi));
	ldc 1,I1	// 1 -> I1
	ldc _atoi,C0	// ET83
	call _SymbolAdd
	ldc atoi_27,I2	// I2
// jumped away
// 	SymbolAdd("_BootFromX", (void *)1, (int)BootFromX);
	ldc 1,I1	// 1 -> I1
	ldc _BootFromX,C0	// ET88
	call _SymbolAdd
	ldc bootfromx_28,I2	// I2
// jumped away
// 	SymbolAdd("_CalcClockSpeed", (void *)1, (int)CalcClockSpeed);
	ldc 1,I1	// 1 -> I1
	ldc _CalcClockSpeed,C0	// ET8d
	call _SymbolAdd
	ldc calcclock_29,I2	// I2
// jumped away
// 	SymbolAdd("_crc_table",(void *)1, (int)(&crc_table));
	ldc 1,I1	// 1 -> I1
	ldc _crc_table,C0	// ET92
	call _SymbolAdd
	ldc crctable_30,I2	// I2
// jumped away
// 	SymbolAdd("_dct", (void *)1, (int)dct);
	ldc 1,I1	// 1 -> I1
	ldc _dct,C0	// ET97
	call _SymbolAdd
	ldc dct_31,I2	// I2
// jumped away
// 	SymbolAdd("_Disable", (void *)1, (int)Disable);
	ldc 1,I1	// 1 -> I1
	ldc _Disable,C0	// ET9c
	call _SymbolAdd
	ldc disable_32,I2	// I2
// jumped away
// 	SymbolAdd("_Enable", (void *)1, (int)Enable);
	ldc 1,I1	// 1 -> I1
	ldc _Enable,C0	// ETa1
	call _SymbolAdd
	ldc enable_33,I2	// I2
// jumped away
// 	SymbolAdd("_encDiv256", (void *)1, (int)&encDiv256);
	ldc 1,I1	// 1 -> I1
	ldc _encDiv256,C0	// ETa6
	call _SymbolAdd
	ldc encdiv256_34,I2	// I2
// jumped away
// 	SymbolAdd("_encMAlignBitsToByte", (void *)1, (int)EncMAlignBitsToByte);
	ldc 1,I1	// 1 -> I1
	ldc _EncMAlignBitsToByte,C0	// ETab
	call _SymbolAdd
	ldc encmalign_35,I2	// I2
// jumped away
// 	SymbolAdd("_encMButrCSCAI", (void *)1, (int)&encMButrCSCAI);
	ldc 1,I1	// 1 -> I1
	ldc _encMButrCSCAI,C0	// ETb0
	call _SymbolAdd
	ldc encmbutrc_36,I2	// I2
// jumped away
// 	SymbolAdd("_EncMCountHuff2", (void *)1, (int)EncMCountHuff2);
	ldc 1,I1	// 1 -> I1
	ldc _EncMCountHuff2,C0	// ETb5
	call _SymbolAdd
	ldc encmcount_37,I2	// I2
// jumped away
// 	SymbolAdd("_EncMCountHuff4", (void *)1, (int)EncMCountHuff4);
	ldc 1,I1	// 1 -> I1
	ldc _EncMCountHuff4,C0	// ETba
	call _SymbolAdd
	ldc encmcount_38,I2	// I2
// jumped away
// 	SymbolAdd("_EncMDct18", (void *)1, (int)EncMDct18);
	ldc 1,I1	// 1 -> I1
	ldc _EncMDct18,C0	// ETbf
	call _SymbolAdd
	ldc encmdct18_39,I2	// I2
// jumped away
// 	SymbolAdd("_EncMDct32", (void *)1, (int)EncMDct32);
	ldc 1,I1	// 1 -> I1
	ldc _EncMDct32,C0	// ETc4
	call _SymbolAdd
	ldc encmdct32_40,I2	// I2
// jumped away
// 	SymbolAdd("_EncMGetBitPtr", (void *)1, (int)EncMGetBitPtr);
	ldc 1,I1	// 1 -> I1
	ldc _EncMGetBitPtr,C0	// ETc9
	call _SymbolAdd
	ldc encmgetbi_41,I2	// I2
// jumped away
// 	SymbolAdd("_EncMHuff2N", (void *)1, (int)EncMHuff2N);
	ldc 1,I1	// 1 -> I1
	ldc _EncMHuff2N,C0	// ETce
	call _SymbolAdd
	ldc encmhuff2_42,I2	// I2
// jumped away
// 	SymbolAdd("_EncMHuff4", (void *)1, (int)EncMHuff4);
	ldc 1,I1	// 1 -> I1
	ldc _EncMHuff4,C0	// ETd3
	call _SymbolAdd
	ldc encmhuff4_43,I2	// I2
// jumped away
// 	SymbolAdd("_encMHybridWinFuncI", (void *)1, (int)&encMHybridWinFuncI);
	ldc 1,I1	// 1 -> I1
	ldc _encMHybridWinFuncI,C0	// ETd8
	call _SymbolAdd
	ldc encmhybri_44,I2	// I2
// jumped away
// 	SymbolAdd("_EncMInitBits", (void *)1, (int)EncMInitBits);
	ldc 1,I1	// 1 -> I1
	ldc _EncMInitBits,C0	// ETdd
	call _SymbolAdd
	ldc encminitb_45,I2	// I2
// jumped away
// 	SymbolAdd("_EncMInitDct", (void *)1, (int)EncMInitDct);
	ldc 1,I1	// 1 -> I1
	ldc _EncMInitDct,C0	// ETe2
	call _SymbolAdd
	ldc encminitd_46,I2	// I2
// jumped away
// 	SymbolAdd("_EncMInsertBits", (void *)1, (int)EncMInsertBits);
	ldc 1,I1	// 1 -> I1
	ldc _EncMInsertBits,C0	// ETe7
	call _SymbolAdd
	ldc encminser_47,I2	// I2
// jumped away
// 	SymbolAdd("_EncMMoveBitBytes", (void *)1, (int)EncMMoveBitBytes);
	ldc 1,I1	// 1 -> I1
	ldc _EncMMoveBitBytes,C0	// ETec
	call _SymbolAdd
	ldc encmmoveb_48,I2	// I2
// jumped away
// 	SymbolAdd("_EncMOutBits16", (void *)1, (int)EncMOutBits16);
	ldc 1,I1	// 1 -> I1
	ldc _EncMOutBits16,C0	// ETf1
	call _SymbolAdd
	ldc encmoutbi_49,I2	// I2
// jumped away
// 	SymbolAdd("_encMPow34", (void *)1, (int)&encMPow34);
	ldc 1,I1	// 1 -> I1
	ldc _encMPow34,C0	// ETf6
	call _SymbolAdd
	ldc encmpow34_50,I2	// I2
// jumped away
// 	SymbolAdd("_EncMSetBitBytePtr", (void *)1, (int)EncMSetBitBytePtr);
	ldc 1,I1	// 1 -> I1
	ldc _EncMSetBitBytePtr,C0	// ETfb
	call _SymbolAdd
	ldc encmsetbi_51,I2	// I2
// jumped away
// 	SymbolAdd("_encMWinCoeffI", (void *)1, (int)&encMWinCoeffI);
	ldc 1,I1	// 1 -> I1
	ldc _encMWinCoeffI,C0	// ET100
	call _SymbolAdd
	ldc encmwinco_52,I2	// I2
// jumped away
// 	SymbolAdd("_EncMWriteBitBytes", (void *)1, (int)EncMWriteBitBytes);
	ldc 1,I1	// 1 -> I1
	ldc _EncMWriteBitBytes,C0	// ET105
	call _SymbolAdd
	ldc encmwrite_53,I2	// I2
// jumped away
// 	SymbolAdd("_encVDbRatio", (void *)1, (int)&encVDbRatio);
	ldc 1,I1	// 1 -> I1
	ldc _encVDbRatio,C0	// ET10a
	call _SymbolAdd
	ldc encvdbrat_54,I2	// I2
// jumped away
// 	SymbolAdd("_encVFloorInv", (void *)1, (int)&encVFloorInv);
	ldc 1,I1	// 1 -> I1
	ldc _encVFloorInv,C0	// ET10f
	call _SymbolAdd
	ldc encvfloor_55,I2	// I2
// jumped away
// 	SymbolAdd("_encVOggCrc", (void *)1, (int)&encVOggCrc);
	ldc 1,I1	// 1 -> I1
	ldc _encVOggCrc,C0	// ET114
	call _SymbolAdd
	ldc encvoggcr_56,I2	// I2
// jumped away
// 	SymbolAdd("_encVOnePer", (void *)1, (int)&encVOnePer);
	ldc 1,I1	// 1 -> I1
	ldc _encVOnePer,C0	// ET119
	call _SymbolAdd
	ldc encvonepe_57,I2	// I2
// jumped away
// 	SymbolAdd("_EncVSampleClear", (void *)1, (int)EncVSampleClear);
	ldc 1,I1	// 1 -> I1
	ldc _EncVSampleClear,C0	// ET11e
	call _SymbolAdd
	ldc encvsampl_58,I2	// I2
// jumped away
// 	SymbolAdd("_EncVShiftUpAndCopyToSamp", (void *)1, (int)EncVShiftUpAndCopyToSamp);
	ldc 1,I1	// 1 -> I1
	ldc _EncVShiftUpAndCopyToSamp,C0	// ET123
	call _SymbolAdd
	ldc encvshift_59,I2	// I2
// jumped away
// 	SymbolAdd("_evAudioMode", (void *)1, (int)&evAudioMode);
	ldc 1,I1	// 1 -> I1
	ldc _evAudioMode,C0	// ET128
	call _SymbolAdd
	ldc evaudiomo_60,I2	// I2
// jumped away
// 	SymbolAdd("_extSymbolSearchRom", (void *)1, (int)&extSymbolSearchRom);
	ldc 1,I1	// 1 -> I1
	ldc _extSymbolSearchRom,C0	// ET12d
	call _SymbolAdd
	ldc extsymbol_61,I2	// I2
// jumped away
// 	SymbolAdd("_extSymbol", (void *)1, (int)&extSymbol);
	ldc 1,I1	// 1 -> I1
	ldc _extSymbol,C0	// ET132
	call _SymbolAdd
	ldc extsymbol_62,I2	// I2
// jumped away
// 	SymbolAdd("_extSymbolRom", (void *)1, (int)0xFFF0);
	ldc 1,I1	// 1 -> I1
	ldc 65520,C0	// 65520 -> C0
	call _SymbolAdd
	ldc extsymbol_63,I2	// I2
// jumped away
// 	SymbolAdd("_extSymbolRomSize", (void *)1, (int)&extSymbolRomSize);
	ldc 1,I1	// 1 -> I1
	ldc _extSymbolRomSize,C0	// ET13a
	call _SymbolAdd
	ldc extsymbol_64,I2	// I2
// jumped away
// 	SymbolAdd("_FileParamInt", (void *)1, (int)FileParamInt);
	ldc 1,I1	// 1 -> I1
	ldc _FileParamInt,C0	// ET13f
	call _SymbolAdd
	ldc fileparam_65,I2	// I2
// jumped away
// 	SymbolAdd("_FLOOR1_fromdB_LOOKUP_i", (void *)1, (int)&FLOOR1_fromdB_LOOKUP_i);
	ldc 1,I1	// 1 -> I1
	ldc _FLOOR1_fromdB_LOOKUP_i,C0	// ET144
	call _SymbolAdd
	ldc floor1fr_66,I2	// I2
// jumped away
// 	SymbolAdd("_font16a", (void *)1, (int)&font16a);
	ldc 1,I1	// 1 -> I1
	ldc _font16a,C0	// ET149
	call _SymbolAdd
	ldc font16a_67,I2	// I2
// jumped away
// 	SymbolAdd("_font16aptrs", (void *)1, (int)&font16aptrs);
	ldc 1,I1	// 1 -> I1
	ldc _font16aptrs,C0	// ET14e
	call _SymbolAdd
	ldc font16apt_68,I2	// I2
// jumped away
// 	SymbolAdd("_fsNandPhys", (void *)1, (int)&fsNandPhys);
	ldc 1,I1	// 1 -> I1
	ldc _fsNandPhys,C0	// ET153
	call _SymbolAdd
	ldc fsnandphy_69,I2	// I2
// jumped away
// 	SymbolAdd("_FsPhNandCreate", (void *)1, (int)FsPhNandCreate);
	ldc 1,I1	// 1 -> I1
	ldc _FsPhNandCreate,C0	// ET158
	call _SymbolAdd
	ldc fsphnandc_70,I2	// I2
// jumped away
// 	SymbolAdd("_GetI6", (void *)1, (int)GetI6);
	ldc 1,I1	// 1 -> I1
	ldc _GetI6,C0	// ET15d
	call _SymbolAdd
	ldc geti6_71,I2	// I2
// jumped away
// 	SymbolAdd("_GetSizeNodeI", (void *)1, (int)GetSizeNodeI);
	ldc 1,I1	// 1 -> I1
	ldc _GetSizeNodeI,C0	// ET162
	call _SymbolAdd
	ldc getsizeno_72,I2	// I2
// jumped away
// 	SymbolAdd("_HeadNode", (void *)1, (int)HeadNode);
	ldc 1,I1	// 1 -> I1
	ldc _HeadNode,C0	// ET167
	call _SymbolAdd
	ldc headnode_73,I2	// I2
// jumped away
// 	SymbolAdd("_HeadNodeI", (void *)1, (int)HeadNodeI);
	ldc 1,I1	// 1 -> I1
	ldc _HeadNodeI,C0	// ET16c
	call _SymbolAdd
	ldc headnodei_74,I2	// I2
// jumped away
// 	SymbolAdd("_HeadNodeY", (void *)1, (int)HeadNodeY);
	ldc 1,I1	// 1 -> I1
	ldc _HeadNodeY,C0	// ET171
	call _SymbolAdd
	ldc headnodey_75,I2	// I2
// jumped away
// 	SymbolAdd("_huffEnc2", (void *)1, (int)&huffEnc2);
	ldc 1,I1	// 1 -> I1
	ldc _huffEnc2,C0	// ET176
	call _SymbolAdd
	ldc huffenc2_76,I2	// I2
// jumped away
// 	SymbolAdd("_hwLockOffset", (void *)1, (int)&hwLockOffset);
	ldc 1,I1	// 1 -> I1
	ldc _hwLockOffset,C0	// ET17b
	call _SymbolAdd
	ldc hwlockoff_77,I2	// I2
// jumped away
// 	SymbolAdd("_hwLockN", (void *)1, (int)&hwLockN);
	ldc 1,I1	// 1 -> I1
	ldc _hwLockN,C0	// ET180
	call _SymbolAdd
	ldc hwlockn_78,I2	// I2
// jumped away
// 	SymbolAdd("_hwLocks", (void *)1, (int)&hwLocks);
	ldc 1,I1	// 1 -> I1
	ldc _hwLocks,C0	// ET185
	call _SymbolAdd
	ldc hwlocks_79,I2	// I2
// jumped away
// 	SymbolAdd("_isalnum", (void *)1, (int)isalnum);
	ldc 1,I1	// 1 -> I1
	ldc _isalnum,C0	// ET18a
	call _SymbolAdd
	ldc isalnum_80,I2	// I2
// jumped away
// 	SymbolAdd("_isalpha", (void *)1, (int)isalpha);
	ldc 1,I1	// 1 -> I1
	ldc _isalpha,C0	// ET18f
	call _SymbolAdd
	ldc isalpha_81,I2	// I2
// jumped away
// 	SymbolAdd("_iscntrl", (void *)1, (int)iscntrl);
	ldc 1,I1	// 1 -> I1
	ldc _iscntrl,C0	// ET194
	call _SymbolAdd
	ldc iscntrl_82,I2	// I2
// jumped away
// 	SymbolAdd("_isdigit", (void *)1, (int)isdigit);
	ldc 1,I1	// 1 -> I1
	ldc _isdigit,C0	// ET199
	call _SymbolAdd
	ldc isdigit_83,I2	// I2
// jumped away
// 	SymbolAdd("_isgraph", (void *)1, (int)isgraph);
	ldc 1,I1	// 1 -> I1
	ldc _isgraph,C0	// ET19e
	call _SymbolAdd
	ldc isgraph_84,I2	// I2
// jumped away
// 	SymbolAdd("_islower", (void *)1, (int)islower);
	ldc 1,I1	// 1 -> I1
	ldc _islower,C0	// ET1a3
	call _SymbolAdd
	ldc islower_85,I2	// I2
// jumped away
// 	SymbolAdd("_isprint", (void *)1, (int)isprint);
	ldc 1,I1	// 1 -> I1
	ldc _isprint,C0	// ET1a8
	call _SymbolAdd
	ldc isprint_86,I2	// I2
// jumped away
// 	SymbolAdd("_ispunct", (void *)1, (int)ispunct);
	ldc 1,I1	// 1 -> I1
	ldc _ispunct,C0	// ET1ad
	call _SymbolAdd
	ldc ispunct_87,I2	// I2
// jumped away
// 	SymbolAdd("_isspace", (void *)1, (int)isspace);
	ldc 1,I1	// 1 -> I1
	ldc _isspace,C0	// ET1b2
	call _SymbolAdd
	ldc isspace_88,I2	// I2
// jumped away
// 	SymbolAdd("_isupper", (void *)1, (int)isupper);
	ldc 1,I1	// 1 -> I1
	ldc _isupper,C0	// ET1b7
	call _SymbolAdd
	ldc isupper_89,I2	// I2
// jumped away
// 	SymbolAdd("_isxdigit", (void *)1, (int)isxdigit);
	ldc 1,I1	// 1 -> I1
	ldc _isxdigit,C0	// ET1bc
	call _SymbolAdd
	ldc isxdigit_90,I2	// I2
// jumped away
// 	SymbolAdd("_latin1", (void *)1, (int)&latin1);
	ldc 1,I1	// 1 -> I1
	ldc _latin1,C0	// ET1c1
	call _SymbolAdd
	ldc latin1_91,I2	// I2
// jumped away
// 	SymbolAdd("_MegaFatGetByte", (void *)1, (int)MegaFatGetByte);
	ldc 1,I1	// 1 -> I1
	ldc _MegaFatGetByte,C0	// ET1c6
	call _SymbolAdd
	ldc megafatge_92,I2	// I2
// jumped away
// 	SymbolAdd("_MegaFatGetLong", (void *)1, (int)MegaFatGetLong);
	ldc 1,I1	// 1 -> I1
	ldc _MegaFatGetLong,C0	// ET1cb
	call _SymbolAdd
	ldc megafatge_93,I2	// I2
// jumped away
// 	SymbolAdd("_MegaFatGetWord", (void *)1, (int)MegaFatGetWord);
	ldc 1,I1	// 1 -> I1
	ldc _MegaFatGetWord,C0	// ET1d0
	call _SymbolAdd
	ldc megafatge_94,I2	// I2
// jumped away
// 	SymbolAdd("_memcmp", (void *)1, (int)memcmp);
	ldc 1,I1	// 1 -> I1
	ldc _memcmp,C0	// ET1d5
	call _SymbolAdd
	ldc memcmp_95,I2	// I2
// jumped away
// 	SymbolAdd("_MemCopyPackedBigEndian", (void *)1, (int)MemCopyPackedBigEndian);
	ldc 1,I1	// 1 -> I1
	ldc _MemCopyPackedBigEndian,C0	// ET1da
	call _SymbolAdd
	ldc memcopypa_96,I2	// I2
// jumped away
// 	SymbolAdd("_memcpy", (void *)1, (int)memcpy);
	ldc 1,I1	// 1 -> I1
	ldc _memcpy,C0	// ET1df
	call _SymbolAdd
	ldc memcpy_97,I2	// I2
// jumped away
// 	SymbolAdd("_MemCpySampleT", (void *)1, (int)MemCpySampleT);
	ldc 1,I1	// 1 -> I1
	ldc _MemCpySampleT,C0	// ET1e4
	call _SymbolAdd
	ldc memcpysam_98,I2	// I2
// jumped away
// 	SymbolAdd("_memcpyXY", (void *)1, (int)memcpyXY);
	ldc 1,I1	// 1 -> I1
	ldc _memcpyXY,C0	// ET1e9
	call _SymbolAdd
	ldc memcpyxy_99,I2	// I2
// jumped away
// 	SymbolAdd("_memcpyYX", (void *)1, (int)memcpyYX);
	ldc 1,I1	// 1 -> I1
	ldc _memcpyYX,C0	// ET1ee
	call _SymbolAdd
	ldc memcpyyx_100,I2	// I2
// jumped away
// 	SymbolAdd("_memcpyYY", (void *)1, (int)memcpyYY);
	ldc 1,I1	// 1 -> I1
	ldc _memcpyYY,C0	// ET1f3
	call _SymbolAdd
	ldc memcpyyy_101,I2	// I2
// jumped away
// 	SymbolAdd("_memmove", (void *)1, (int)memmove);
	ldc 1,I1	// 1 -> I1
	ldc _memmove,C0	// ET1f8
	call _SymbolAdd
	ldc memmove_102,I2	// I2
// jumped away
// 	SymbolAdd("_memset", (void *)1, (int)memset);
	ldc 1,I1	// 1 -> I1
	ldc _memset,C0	// ET1fd
	call _SymbolAdd
	ldc memset_103,I2	// I2
// jumped away
// 	SymbolAdd("_memsetY", (void *)1, (int)memsetY);
	ldc 1,I1	// 1 -> I1
	ldc _memsetY,C0	// ET202
	call _SymbolAdd
	ldc memsety_104,I2	// I2
// jumped away
// 	SymbolAdd("__modf", (void *)1, (int)_modf);
	ldc 1,I1	// 1 -> I1
	ldc __modf,C0	// ET207
	call _SymbolAdd
	ldc modf_105,I2	// I2
// jumped away
// 	SymbolAdd("_NandGetOctets", (void *)1, (int)NandGetOctets);
	ldc 1,I1	// 1 -> I1
	ldc _NandGetOctets,C0	// ET20c
	call _SymbolAdd
	ldc nandgetoc_106,I2	// I2
// jumped away
// 	SymbolAdd("_NandGetStatus", (void *)1, (int)NandGetStatus);
	ldc 1,I1	// 1 -> I1
	ldc _NandGetStatus,C0	// ET211
	call _SymbolAdd
	ldc nandgetst_107,I2	// I2
// jumped away
// 	SymbolAdd("_NandPutAddressOctet", (void *)1, (int)NandPutAddressOctet);
	ldc 1,I1	// 1 -> I1
	ldc _NandPutAddressOctet,C0	// ET216
	call _SymbolAdd
	ldc nandputad_108,I2	// I2
// jumped away
// 	SymbolAdd("_NandPutCommand", (void *)1, (int)NandPutCommand);
	ldc 1,I1	// 1 -> I1
	ldc _NandPutCommand,C0	// ET21b
	call _SymbolAdd
	ldc nandputco_109,I2	// I2
// jumped away
// 	SymbolAdd("_NandPutOctets", (void *)1, (int)NandPutOctets);
	ldc 1,I1	// 1 -> I1
	ldc _NandPutOctets,C0	// ET220
	call _SymbolAdd
	ldc nandputoc_110,I2	// I2
// jumped away
// 	SymbolAdd("_NandWaitIdle", (void *)1, (int)NandWaitIdle);
	ldc 1,I1	// 1 -> I1
	ldc _NandWaitIdle,C0	// ET225
	call _SymbolAdd
	ldc nandwaiti_111,I2	// I2
// jumped away
// 	SymbolAdd("_NextNode", (void *)1, (int)NextNode);
	ldc 1,I1	// 1 -> I1
	ldc _NextNode,C0	// ET22a
	call _SymbolAdd
	ldc nextnode_112,I2	// I2
// jumped away
// 	SymbolAdd("_NextNodeI", (void *)1, (int)NextNodeI);
	ldc 1,I1	// 1 -> I1
	ldc _NextNodeI,C0	// ET22f
	call _SymbolAdd
	ldc nextnodei_113,I2	// I2
// jumped away
// 	SymbolAdd("_NextNodeY", (void *)1, (int)NextNodeY);
	ldc 1,I1	// 1 -> I1
	ldc _NextNodeY,C0	// ET234
	call _SymbolAdd
	ldc nextnodey_114,I2	// I2
// jumped away
// 	SymbolAdd("_oldClockX", (void *)1, (int)&oldClockX);
	ldc 1,I1	// 1 -> I1
	ldc _oldClockX,C0	// ET239
	call _SymbolAdd
	ldc oldclockx_115,I2	// I2
// jumped away
// 	SymbolAdd("_oldExtClock4KHz", (void *)1, (int)&oldExtClock4KHz);
	ldc 1,I1	// 1 -> I1
	ldc _oldExtClock4KHz,C0	// ET23e
	call _SymbolAdd
	ldc oldextclo_116,I2	// I2
// jumped away
// 	SymbolAdd("_ph", (void *)1, (int)&ph);
	ldc 1,I1	// 1 -> I1
	ldc _ph,C0	// ET243
	call _SymbolAdd
	ldc ph_117,I2	// I2
// jumped away
// 	SymbolAdd("_random", (void *)1, (int)random);
	ldc 1,I1	// 1 -> I1
	ldc _random,C0	// ET248
	call _SymbolAdd
	ldc random_118,I2	// I2
// jumped away
// 	SymbolAdd("_ReadIMem", (void *)1, (int)ReadIMem);
	ldc 1,I1	// 1 -> I1
	ldc _ReadIMem,C0	// ET24d
	call _SymbolAdd
	ldc readimem_119,I2	// I2
// jumped away
// 	SymbolAdd("_readyQueue", (void *)1, (int)&readyQueue);
	ldc 1,I1	// 1 -> I1
	ldc _readyQueue,C0	// ET252
	call _SymbolAdd
	ldc readyqueu_120,I2	// I2
// jumped away
// 	SymbolAdd("_SpiSendReceive", (void *)1, (int)SpiSendReceive);
	ldc 1,I1	// 1 -> I1
	ldc _SpiSendReceive,C0	// ET257
	call _SymbolAdd
	ldc spisendre_121,I2	// I2
// jumped away
// 	SymbolAdd("_sprintf", (void *)1, (int)sprintf);
	ldc 1,I1	// 1 -> I1
	ldc _sprintf,C0	// ET25c
	call _SymbolAdd
	ldc sprintf_122,I2	// I2
// jumped away
// 	SymbolAdd("_srandom", (void *)1, (int)srandom);
	ldc 1,I1	// 1 -> I1
	ldc _srandom,C0	// ET261
	call _SymbolAdd
	ldc srandom_123,I2	// I2
// jumped away
// 	SymbolAdd("_strcat", (void *)1, (int)strcat);
	ldc 1,I1	// 1 -> I1
	ldc _strcat,C0	// ET266
	call _SymbolAdd
	ldc strcat_124,I2	// I2
// jumped away
// 	SymbolAdd("_strchr", (void *)1, (int)strchr);
	ldc 1,I1	// 1 -> I1
	ldc _strchr,C0	// ET26b
	call _SymbolAdd
	ldc strchr_125,I2	// I2
// jumped away
// 	SymbolAdd("_strcpy", (void *)1, (int)strcpy);
	ldc 1,I1	// 1 -> I1
	ldc _strcpy,C0	// ET270
	call _SymbolAdd
	ldc strcpy_126,I2	// I2
// jumped away
// 	SymbolAdd("_strlen", (void *)1, (int)strlen);
	ldc 1,I1	// 1 -> I1
	ldc _strlen,C0	// ET275
	call _SymbolAdd
	ldc strlen_127,I2	// I2
// jumped away
// 	SymbolAdd("_strncasecmp", (void *)1, (int)strncasecmp);
	ldc 1,I1	// 1 -> I1
	ldc _strncasecmp,C0	// ET27a
	call _SymbolAdd
	ldc strncasec_128,I2	// I2
// jumped away
// 	SymbolAdd("_strncat", (void *)1, (int)strncat);
	ldc 1,I1	// 1 -> I1
	ldc _strncat,C0	// ET27f
	call _SymbolAdd
	ldc strncat_129,I2	// I2
// jumped away
// 	SymbolAdd("_strncmp", (void *)1, (int)strncmp);
	ldc 1,I1	// 1 -> I1
	ldc _strncmp,C0	// ET284
	call _SymbolAdd
	ldc strncmp_130,I2	// I2
// jumped away
// 	SymbolAdd("_strncpy", (void *)1, (int)strncpy);
	ldc 1,I1	// 1 -> I1
	ldc _strncpy,C0	// ET289
	call _SymbolAdd
	ldc strncpy_131,I2	// I2
// jumped away
// 	SymbolAdd("_strrchr", (void *)1, (int)strrchr);
	ldc 1,I1	// 1 -> I1
	ldc _strrchr,C0	// ET28e
	call _SymbolAdd
	ldc strrchr_132,I2	// I2
// jumped away
// 	SymbolAdd("_strspn", (void *)1, (int)strspn);
	ldc 1,I1	// 1 -> I1
	ldc _strspn,C0	// ET293
	call _SymbolAdd
	ldc strspn_133,I2	// I2
// jumped away
// 	SymbolAdd("_strstr", (void *)1, (int)strstr);
	ldc 1,I1	// 1 -> I1
	ldc _strstr,C0	// ET298
	call _SymbolAdd
	ldc strstr_134,I2	// I2
// jumped away
// 	SymbolAdd("_strtol", (void *)1, (int)strtol);
	ldc 1,I1	// 1 -> I1
	ldc _strtol,C0	// ET29d
	call _SymbolAdd
	ldc strtol_135,I2	// I2
// jumped away
// 	SymbolAdd("_Swap16", (void *)1, (int)Swap16);
	ldc 1,I1	// 1 -> I1
	ldc _Swap16,C0	// ET2a2
	call _SymbolAdd
	ldc swap16_136,I2	// I2
// jumped away
// 	SymbolAdd("_Swap32", (void *)1, (int)Swap32);
	ldc 1,I1	// 1 -> I1
	ldc _Swap32,C0	// ET2a7
	call _SymbolAdd
	ldc swap32_137,I2	// I2
// jumped away
// 	SymbolAdd("_Swap32Mix", (void *)1, (int)Swap32Mix);
	ldc 1,I1	// 1 -> I1
	ldc _Swap32Mix,C0	// ET2ac
	call _SymbolAdd
	ldc swap32mix_138,I2	// I2
// jumped away
// 	SymbolAdd("_SymbolCrunchStringCalcCrc32", (void *)1, (int)SymbolCrunchStringCalcCrc32);
	ldc 1,I1	// 1 -> I1
	ldc _SymbolCrunchStringCalcCrc32,C0	// ET2b1
	call _SymbolAdd
	ldc symbolcru_139,I2	// I2
// jumped away
// 	SymbolAdd("_SymbolFindRomByCrc", (void *)1, (int)CommonOkResultFunction);
	ldc 1,I1	// 1 -> I1
	ldc _CommonOkResultFunction,C0	// ET2b6
	call _SymbolAdd
	ldc symbolfin_140,I2	// I2
// jumped away
// 	SymbolAdd("_timeCount", (void *)1, (int)&timeCount);
	ldc 1,I1	// 1 -> I1
	ldc _timeCount,C0	// ET2bb
	call _SymbolAdd
	ldc timecount_141,I2	// I2
// jumped away
// 	SymbolAdd("_timerQueue", (void *)1, (int)&timerQueue);
	ldc 1,I1	// 1 -> I1
	ldc _timerQueue,C0	// ET2c0
	call _SymbolAdd
	ldc timerqueu_142,I2	// I2
// jumped away
// 	SymbolAdd("_tolower", (void *)1, (int)tolower);
	ldc 1,I1	// 1 -> I1
	ldc _tolower,C0	// ET2c5
	call _SymbolAdd
	ldc tolower_143,I2	// I2
// jumped away
// 	SymbolAdd("_toupper", (void *)1, (int)toupper);
	ldc 1,I1	// 1 -> I1
	ldc _toupper,C0	// ET2ca
	call _SymbolAdd
	ldc toupper_144,I2	// I2
// jumped away
// 	SymbolAdd("_UartDivider", (void *)1, (int)UartDivider);
	ldc 1,I1	// 1 -> I1
	ldc _UartDivider,C0	// ET2cf
	call _SymbolAdd
	ldc uartdivid_145,I2	// I2
// jumped away
// 	SymbolAdd("_VoFatClusterPos", (void *)1, (int)VoFatClusterPos);
	ldc 1,I1	// 1 -> I1
	ldc _VoFatClusterPos,C0	// ET2d4
	call _SymbolAdd
	ldc vofatclus_146,I2	// I2
// jumped away
// 	SymbolAdd("_VoFatReadClusterRecord", (void *)1, (int)VoFatReadClusterRecord);
	ldc 1,I1	// 1 -> I1
	ldc _VoFatReadClusterRecord,C0	// ET2d9
	call _SymbolAdd
	ldc vofatread_147,I2	// I2
// jumped away
// 	SymbolAdd("_vo_fprintf", (void *)1, (int)vo_fprintf);
	ldc 1,I1	// 1 -> I1
	ldc _vo_fprintf,C0	// ET2de
	call _SymbolAdd
	ldc vofprint_148,I2	// I2
// jumped away
// 	SymbolAdd("_volumeReg", (void *)1, (int)&volumeReg);
	ldc 1,I1	// 1 -> I1
	ldc _volumeReg,C0	// ET2e3
	call _SymbolAdd
	ldc volumereg_149,I2	// I2
// jumped away
// 	SymbolAdd("_vo_printf", (void *)1, (int)vo_printf);
	ldc 1,I1	// 1 -> I1
	ldc _vo_printf,C0	// ET2e8
	call _SymbolAdd
	ldc voprintf_150,I2	// I2
// jumped away
// 	SymbolAdd("_waitQueue", (void *)1, (int)&waitQueue);
	ldc 1,I1	// 1 -> I1
	ldc _waitQueue,C0	// ET2ed
	call _SymbolAdd
	ldc waitqueue_151,I2	// I2
// jumped away
// 	SymbolAdd("_winPtr", (void *)1, (int)&winPtr);
	ldc 1,I1	// 1 -> I1
	ldc _winPtr,C0	// ET2f2
	call _SymbolAdd
	ldc winptr_152,I2	// I2
// jumped away
// 	SymbolAdd("_WriteIMem", (void *)1, (int)WriteIMem);
	ldc 1,I1	// 1 -> I1
	ldc _WriteIMem,C0	// ET2f7
	call _SymbolAdd
	ldc writeimem_153,I2	// I2
// jumped away
// 	SymbolAdd("_xFlist", (void *)1, (int)&xFlist);
	ldc 1,I1	// 1 -> I1
	ldc _xFlist,C0	// ET2fc
	call _SymbolAdd
	ldc xflist_154,I2	// I2
// jumped away
// 	SymbolAdd("_XpFifoRead", (void *)1, (int)XpFifoRead);
	ldc 1,I1	// 1 -> I1
	ldc _XpFifoRead,C0	// ET301
	call _SymbolAdd
	ldc xpfiforea_155,I2	// I2
// jumped away
// 	SymbolAdd("_XpFifoWrite", (void *)1, (int)XpFifoWrite);
	ldc 1,I1	// 1 -> I1
	ldc _XpFifoWrite,C0	// ET306
	call _SymbolAdd
	ldc xpfifowri_156,I2	// I2
// jumped away
// 	SymbolAdd("_yFlist", (void *)1, (int)&yFlist);
	ldc 1,I1	// 1 -> I1
	ldc _yFlist,C0	// ET30b
	call _SymbolAdd
	ldc yflist_157,I2	// I2
// jumped away
// 	SymbolAdd("_CountBitsLong", (void *)1, (int)CountBitsLong);
	ldc 1,I1	// 1 -> I1
	ldc _CountBitsLong,C0	// ET310
	call _SymbolAdd
	ldc countbits_158,I2	// I2
// jumped away
// 	SymbolAdd("___malloc", (void *)1, (int)__malloc);
	ldc 1,I1	// 1 -> I1
	ldc ___malloc,C0	// ET315
	call _SymbolAdd
	ldc malloc_159,I2	// I2
// jumped away
// 	SymbolAdd("___calloc", (void *)1, (int)__calloc);
	ldc 1,I1	// 1 -> I1
	ldc ___calloc,C0	// ET31a
	call _SymbolAdd
	ldc calloc_160,I2	// I2
// jumped away
// 	SymbolAdd("___realloc", (void *)1, (int)__realloc);
	ldc 1,I1	// 1 -> I1
	ldc ___realloc,C0	// ET31f
	call _SymbolAdd
	ldc realloc_161,I2	// I2
// jumped away
// 	SymbolAdd("___free", (void *)1, (int)__free);
	ldc 1,I1	// 1 -> I1
	ldc ___free,C0	// ET324
	call _SymbolAdd
	ldc free_162,I2	// I2
// jumped away
// 	SymbolAdd("___mallocy", (void *)1, (int)__mallocy);
	ldc 1,I1	// 1 -> I1
	ldc ___mallocy,C0	// ET329
	call _SymbolAdd
	ldc mallocy_163,I2	// I2
// jumped away
// 	SymbolAdd("___callocy", (void *)1, (int)__callocy);
	ldc 1,I1	// 1 -> I1
	ldc ___callocy,C0	// ET32e
	call _SymbolAdd
	ldc callocy_164,I2	// I2
// jumped away
// 	SymbolAdd("___reallocy", (void *)1, (int)__reallocy);
	ldc 1,I1	// 1 -> I1
	ldc ___reallocy,C0	// ET333
	call _SymbolAdd
	ldc realloc_165,I2	// I2
// jumped away
// 	SymbolAdd("___freey", (void *)1, (int)__freey);
	ldc 1,I1	// 1 -> I1
	ldc ___freey,C0	// ET338
	call _SymbolAdd
	ldc freey_166,I2	// I2
// jumped away
// 	SymbolAdd("_memchr", (void *)1, (int)memchr);
	ldc 1,I1	// 1 -> I1
	ldc _memchr,C0	// ET33d
	call _SymbolAdd
	ldc memchr_167,I2	// I2
// jumped away
// 	SymbolAdd("_HuffmanMask", (void *)1, (int)&HuffmanMask);
	ldc 1,I1	// 1 -> I1
	ldc _HuffmanMask,C0	// ET342
	call _SymbolAdd
	ldc huffmanma_168,I2	// I2
// jumped away
// 	SymbolAdd("_HuffmanRLC16Mono", (void *)1, (int)&HuffmanRLC16Mono);
	ldc 1,I1	// 1 -> I1
	ldc _HuffmanRLC16Mono,C0	// ET347
	call _SymbolAdd
	ldc huffmanrl_169,I2	// I2
// jumped away
// 	SymbolAdd("_HuffmanRLC44ODiff", (void *)1, (int)&HuffmanRLC44ODiff);
	ldc 1,I1	// 1 -> I1
	ldc _HuffmanRLC44ODiff,C0	// ET34c
	call _SymbolAdd
	ldc huffmanrl_170,I2	// I2
// jumped away
// 	SymbolAdd("_i_twiddle_iv", (void *)1, (int)&i_twiddle_iv);
	ldc 1,I1	// 1 -> I1
	ldc _i_twiddle_iv,C0	// ET351
	call _SymbolAdd
	ldc itwiddle_171,I2	// I2
// jumped away
// 	SymbolAdd("_lpcsin", (void *)1, (int)&lpcsin);
	ldc 1,I1	// 1 -> I1
	ldc _lpcsin,C0	// ET356
	call _SymbolAdd
	ldc lpcsin_172,I2	// I2
// jumped away
// 	SymbolAdd("_evBands08k_64", (void *)1, (int)evBands08k_64);
	ldc 1,I1	// 1 -> I1
	ldc _evBands08k_64,C0	// ET35b
	call _SymbolAdd
	ldc evbands08_173,I2	// I2
// jumped away
// 	SymbolAdd("_evMean08k_64", (void *)1, (int)evMean08k_64);
	ldc 1,I1	// 1 -> I1
	ldc _evMean08k_64,C0	// ET360
	call _SymbolAdd
	ldc evmean08k_174,I2	// I2
// jumped away
// 	SymbolAdd("_evBands08k_256", (void *)1, (int)evBands08k_256);
	ldc 1,I1	// 1 -> I1
	ldc _evBands08k_256,C0	// ET365
	call _SymbolAdd
	ldc evbands08_175,I2	// I2
// jumped away
// 	SymbolAdd("_evMean08k_256", (void *)1, (int)evMean08k_256);
	ldc 1,I1	// 1 -> I1
	ldc _evMean08k_256,C0	// ET36a
	call _SymbolAdd
	ldc evmean08k_176,I2	// I2
// jumped away
// 	SymbolAdd("_evBands16k_128", (void *)1, (int)evBands16k_128);
	ldc 1,I1	// 1 -> I1
	ldc _evBands16k_128,C0	// ET36f
	call _SymbolAdd
	ldc evbands16_177,I2	// I2
// jumped away
// 	SymbolAdd("_evMean16k_128", (void *)1, (int)evMean16k_128);
	ldc 1,I1	// 1 -> I1
	ldc _evMean16k_128,C0	// ET374
	call _SymbolAdd
	ldc evmean16k_178,I2	// I2
// jumped away
// 	SymbolAdd("_evBands16k_512", (void *)1, (int)evBands16k_512);
	ldc 1,I1	// 1 -> I1
	ldc _evBands16k_512,C0	// ET379
	call _SymbolAdd
	ldc evbands16_179,I2	// I2
// jumped away
// 	SymbolAdd("_evMean16k_512", (void *)1, (int)evMean16k_512);
	ldc 1,I1	// 1 -> I1
	ldc _evMean16k_512,C0	// ET37e
	call _SymbolAdd
	ldc evmean16k_180,I2	// I2
// jumped away
// 	SymbolAdd("_evBands32k_128", (void *)1, (int)evBands32k_128);
	ldc 1,I1	// 1 -> I1
	ldc _evBands32k_128,C0	// ET383
	call _SymbolAdd
	ldc evbands32_181,I2	// I2
// jumped away
// 	SymbolAdd("_evMean32k_128", (void *)1, (int)evMean32k_128);
	ldc 1,I1	// 1 -> I1
	ldc _evMean32k_128,C0	// ET388
	call _SymbolAdd
	ldc evmean32k_182,I2	// I2
// jumped away
// 	SymbolAdd("_evBands32k_1024", (void *)1, (int)evBands32k_1024);
	ldc 1,I1	// 1 -> I1
	ldc _evBands32k_1024,C0	// ET38d
	call _SymbolAdd
	ldc evbands32_183,I2	// I2
// jumped away
// 	SymbolAdd("_evMean32k_1024", (void *)1, (int)evMean32k_1024);
	ldc 1,I1	// 1 -> I1
	ldc _evMean32k_1024,C0	// ET392
	call _SymbolAdd
	ldc evmean32k_184,I2	// I2
// jumped away
// 	SymbolAdd("_evBands44k_128", (void *)1, (int)evBands44k_128);
	ldc 1,I1	// 1 -> I1
	ldc _evBands44k_128,C0	// ET397
	call _SymbolAdd
	ldc evbands44_185,I2	// I2
// jumped away
// 	SymbolAdd("_evMean44k_128", (void *)1, (int)evMean44k_128);
	ldc 1,I1	// 1 -> I1
	ldc _evMean44k_128,C0	// ET39c
	call _SymbolAdd
	ldc evmean44k_186,I2	// I2
// jumped away
// 	SymbolAdd("_evBands44k_1024", (void *)1, (int)evBands44k_1024);
	ldc 1,I1	// 1 -> I1
	ldc _evBands44k_1024,C0	// ET3a1
	call _SymbolAdd
	ldc evbands44_187,I2	// I2
// jumped away
// 	SymbolAdd("_evMean44k_1024", (void *)1, (int)evMean44k_1024);
	ldc 1,I1	// 1 -> I1
	ldc _evMean44k_1024,C0	// ET3a6
	call _SymbolAdd
	ldc evmean44k_188,I2	// I2
// jumped away
// 	SymbolAdd("_evBands48k_256", (void *)1, (int)evBands48k_256);
	ldc 1,I1	// 1 -> I1
	ldc _evBands48k_256,C0	// ET3ab
	call _SymbolAdd
	ldc evbands48_189,I2	// I2
// jumped away
// 	SymbolAdd("_evMean48k_256", (void *)1, (int)evMean48k_256);
	ldc 1,I1	// 1 -> I1
	ldc _evMean48k_256,C0	// ET3b0
	call _SymbolAdd
	ldc evmean48k_190,I2	// I2
// jumped away
// 	SymbolAdd("_evBands48k_1024", (void *)1, (int)evBands48k_1024);
	ldc 1,I1	// 1 -> I1
	ldc _evBands48k_1024,C0	// ET3b5
	call _SymbolAdd
	ldc evbands48_191,I2	// I2
// jumped away
// 	SymbolAdd("_evMean48k_1024", (void *)1, (int)evMean48k_1024);
	ldc 1,I1	// 1 -> I1
	ldc _evMean48k_1024,C0	// ET3ba
	call _SymbolAdd
	ldc evmean48k_192,I2	// I2
// jumped away
	ldy (I6),I2 ; ldx (I6)-1,I1
	ldy (I6),C0 ; ldx (I6)-1,A0
	ldx (I6)-1,LR0
	jr
	nop
// jumped away

//_____________________________________________________________
//
	.sect data_x,transientconst_x	// 2425 words
resetsdca_1:
	.word "_ResetSdCard"

	.zero 1
fatopenen_2:
	.word "_FatOpenEntry"

	.zero 1
fatnamefr_3:
	.word "_FatNameFromDir"

	.zero 1
initmutex_4:
	.word "_InitMutexN"

	.zero 1
obtainmut_5:
	.word "_ObtainMutex"

	.zero 1
attemptmu_6:
	.word "_AttemptMutex"

	.zero 1
releasemu_7:
	.word "_ReleaseMutex"

	.zero 1
setnextap_8:
	.word "_SetNextApp"

	.zero 1
loadlibra_9:
	.word "_LoadLibraryP"

	.zero 1
createtas_10:
	.word "_CreateTaskAndStack"

	.zero 1
addcyclic_11:
	.word "_AddCyclic"

	.zero 1
dropcycli_12:
	.word "_DropCyclic"

	.zero 1
symboldel_13:
	.word "_SymbolDeleteLib"

	.zero 1
symboldel_14:
	.word "_SymbolDelete"

	.zero 1
symbolfin_15:
	.word "_SymbolFindByCrc"

	.zero 1
symbolcal_16:
	.word "_SymbolCalcCrc32String"

	.zero 1
wait_17:
	.word "_Wait"

	.zero 1
signal_18:
	.word "_Signal"

	.zero 1
zpc_19:
	.word "_ZPC"

	.zero 1
coarsesin_20:
	.word "_CoarseSine"

	.zero 1
clockspee_21:
	.word "_clockSpeed"

	.zero 1
getdivide_22:
	.word "_GetDivider"

	.zero 1
timecount_23:
	.word "_timeCountAdd"

	.zero 1
thistask_24:
	.word "_thisTask"

	.zero 1
appixysta_25:
	.word "_appIXYStart"

	.zero 1
addtask_26:
	.word "_AddTask"

	.zero 1
atoi_27:
	.word "_atoi"

	.zero 1
bootfromx_28:
	.word "_BootFromX"

	.zero 1
calcclock_29:
	.word "_CalcClockSpeed"

	.zero 1
crctable_30:
	.word "_crc_table"

	.zero 1
dct_31:
	.word "_dct"

	.zero 1
disable_32:
	.word "_Disable"

	.zero 1
enable_33:
	.word "_Enable"

	.zero 1
encdiv256_34:
	.word "_encDiv256"

	.zero 1
encmalign_35:
	.word "_encMAlignBitsToByte"

	.zero 1
encmbutrc_36:
	.word "_encMButrCSCAI"

	.zero 1
encmcount_37:
	.word "_EncMCountHuff2"

	.zero 1
encmcount_38:
	.word "_EncMCountHuff4"

	.zero 1
encmdct18_39:
	.word "_EncMDct18"

	.zero 1
encmdct32_40:
	.word "_EncMDct32"

	.zero 1
encmgetbi_41:
	.word "_EncMGetBitPtr"

	.zero 1
encmhuff2_42:
	.word "_EncMHuff2N"

	.zero 1
encmhuff4_43:
	.word "_EncMHuff4"

	.zero 1
encmhybri_44:
	.word "_encMHybridWinFuncI"

	.zero 1
encminitb_45:
	.word "_EncMInitBits"

	.zero 1
encminitd_46:
	.word "_EncMInitDct"

	.zero 1
encminser_47:
	.word "_EncMInsertBits"

	.zero 1
encmmoveb_48:
	.word "_EncMMoveBitBytes"

	.zero 1
encmoutbi_49:
	.word "_EncMOutBits16"

	.zero 1
encmpow34_50:
	.word "_encMPow34"

	.zero 1
encmsetbi_51:
	.word "_EncMSetBitBytePtr"

	.zero 1
encmwinco_52:
	.word "_encMWinCoeffI"

	.zero 1
encmwrite_53:
	.word "_EncMWriteBitBytes"

	.zero 1
encvdbrat_54:
	.word "_encVDbRatio"

	.zero 1
encvfloor_55:
	.word "_encVFloorInv"

	.zero 1
encvoggcr_56:
	.word "_encVOggCrc"

	.zero 1
encvonepe_57:
	.word "_encVOnePer"

	.zero 1
encvsampl_58:
	.word "_EncVSampleClear"

	.zero 1
encvshift_59:
	.word "_EncVShiftUpAndCopyToSamp"

	.zero 1
evaudiomo_60:
	.word "_evAudioMode"

	.zero 1
extsymbol_61:
	.word "_extSymbolSearchRom"

	.zero 1
extsymbol_62:
	.word "_extSymbol"

	.zero 1
extsymbol_63:
	.word "_extSymbolRom"

	.zero 1
extsymbol_64:
	.word "_extSymbolRomSize"

	.zero 1
fileparam_65:
	.word "_FileParamInt"

	.zero 1
floor1fr_66:
	.word "_FLOOR1_fromdB_LOOKUP_i"

	.zero 1
font16a_67:
	.word "_font16a"

	.zero 1
font16apt_68:
	.word "_font16aptrs"

	.zero 1
fsnandphy_69:
	.word "_fsNandPhys"

	.zero 1
fsphnandc_70:
	.word "_FsPhNandCreate"

	.zero 1
geti6_71:
	.word "_GetI6"

	.zero 1
getsizeno_72:
	.word "_GetSizeNodeI"

	.zero 1
headnode_73:
	.word "_HeadNode"

	.zero 1
headnodei_74:
	.word "_HeadNodeI"

	.zero 1
headnodey_75:
	.word "_HeadNodeY"

	.zero 1
huffenc2_76:
	.word "_huffEnc2"

	.zero 1
hwlockoff_77:
	.word "_hwLockOffset"

	.zero 1
hwlockn_78:
	.word "_hwLockN"

	.zero 1
hwlocks_79:
	.word "_hwLocks"

	.zero 1
isalnum_80:
	.word "_isalnum"

	.zero 1
isalpha_81:
	.word "_isalpha"

	.zero 1
iscntrl_82:
	.word "_iscntrl"

	.zero 1
isdigit_83:
	.word "_isdigit"

	.zero 1
isgraph_84:
	.word "_isgraph"

	.zero 1
islower_85:
	.word "_islower"

	.zero 1
isprint_86:
	.word "_isprint"

	.zero 1
ispunct_87:
	.word "_ispunct"

	.zero 1
isspace_88:
	.word "_isspace"

	.zero 1
isupper_89:
	.word "_isupper"

	.zero 1
isxdigit_90:
	.word "_isxdigit"

	.zero 1
latin1_91:
	.word "_latin1"

	.zero 1
megafatge_92:
	.word "_MegaFatGetByte"

	.zero 1
megafatge_93:
	.word "_MegaFatGetLong"

	.zero 1
megafatge_94:
	.word "_MegaFatGetWord"

	.zero 1
memcmp_95:
	.word "_memcmp"

	.zero 1
memcopypa_96:
	.word "_MemCopyPackedBigEndian"

	.zero 1
memcpy_97:
	.word "_memcpy"

	.zero 1
memcpysam_98:
	.word "_MemCpySampleT"

	.zero 1
memcpyxy_99:
	.word "_memcpyXY"

	.zero 1
memcpyyx_100:
	.word "_memcpyYX"

	.zero 1
memcpyyy_101:
	.word "_memcpyYY"

	.zero 1
memmove_102:
	.word "_memmove"

	.zero 1
memset_103:
	.word "_memset"

	.zero 1
memsety_104:
	.word "_memsetY"

	.zero 1
modf_105:
	.word "__modf"

	.zero 1
nandgetoc_106:
	.word "_NandGetOctets"

	.zero 1
nandgetst_107:
	.word "_NandGetStatus"

	.zero 1
nandputad_108:
	.word "_NandPutAddressOctet"

	.zero 1
nandputco_109:
	.word "_NandPutCommand"

	.zero 1
nandputoc_110:
	.word "_NandPutOctets"

	.zero 1
nandwaiti_111:
	.word "_NandWaitIdle"

	.zero 1
nextnode_112:
	.word "_NextNode"

	.zero 1
nextnodei_113:
	.word "_NextNodeI"

	.zero 1
nextnodey_114:
	.word "_NextNodeY"

	.zero 1
oldclockx_115:
	.word "_oldClockX"

	.zero 1
oldextclo_116:
	.word "_oldExtClock4KHz"

	.zero 1
ph_117:
	.word "_ph"

	.zero 1
random_118:
	.word "_random"

	.zero 1
readimem_119:
	.word "_ReadIMem"

	.zero 1
readyqueu_120:
	.word "_readyQueue"

	.zero 1
spisendre_121:
	.word "_SpiSendReceive"

	.zero 1
sprintf_122:
	.word "_sprintf"

	.zero 1
srandom_123:
	.word "_srandom"

	.zero 1
strcat_124:
	.word "_strcat"

	.zero 1
strchr_125:
	.word "_strchr"

	.zero 1
strcpy_126:
	.word "_strcpy"

	.zero 1
strlen_127:
	.word "_strlen"

	.zero 1
strncasec_128:
	.word "_strncasecmp"

	.zero 1
strncat_129:
	.word "_strncat"

	.zero 1
strncmp_130:
	.word "_strncmp"

	.zero 1
strncpy_131:
	.word "_strncpy"

	.zero 1
strrchr_132:
	.word "_strrchr"

	.zero 1
strspn_133:
	.word "_strspn"

	.zero 1
strstr_134:
	.word "_strstr"

	.zero 1
strtol_135:
	.word "_strtol"

	.zero 1
swap16_136:
	.word "_Swap16"

	.zero 1
swap32_137:
	.word "_Swap32"

	.zero 1
swap32mix_138:
	.word "_Swap32Mix"

	.zero 1
symbolcru_139:
	.word "_SymbolCrunchStringCalcCrc32"

	.zero 1
symbolfin_140:
	.word "_SymbolFindRomByCrc"

	.zero 1
timecount_141:
	.word "_timeCount"

	.zero 1
timerqueu_142:
	.word "_timerQueue"

	.zero 1
tolower_143:
	.word "_tolower"

	.zero 1
toupper_144:
	.word "_toupper"

	.zero 1
uartdivid_145:
	.word "_UartDivider"

	.zero 1
vofatclus_146:
	.word "_VoFatClusterPos"

	.zero 1
vofatread_147:
	.word "_VoFatReadClusterRecord"

	.zero 1
vofprint_148:
	.word "_vo_fprintf"

	.zero 1
volumereg_149:
	.word "_volumeReg"

	.zero 1
voprintf_150:
	.word "_vo_printf"

	.zero 1
waitqueue_151:
	.word "_waitQueue"

	.zero 1
winptr_152:
	.word "_winPtr"

	.zero 1
writeimem_153:
	.word "_WriteIMem"

	.zero 1
xflist_154:
	.word "_xFlist"

	.zero 1
xpfiforea_155:
	.word "_XpFifoRead"

	.zero 1
xpfifowri_156:
	.word "_XpFifoWrite"

	.zero 1
yflist_157:
	.word "_yFlist"

	.zero 1
countbits_158:
	.word "_CountBitsLong"

	.zero 1
malloc_159:
	.word "___malloc"

	.zero 1
calloc_160:
	.word "___calloc"

	.zero 1
realloc_161:
	.word "___realloc"

	.zero 1
free_162:
	.word "___free"

	.zero 1
mallocy_163:
	.word "___mallocy"

	.zero 1
callocy_164:
	.word "___callocy"

	.zero 1
realloc_165:
	.word "___reallocy"

	.zero 1
freey_166:
	.word "___freey"

	.zero 1
memchr_167:
	.word "_memchr"

	.zero 1
huffmanma_168:
	.word "_HuffmanMask"

	.zero 1
huffmanrl_169:
	.word "_HuffmanRLC16Mono"

	.zero 1
huffmanrl_170:
	.word "_HuffmanRLC44ODiff"

	.zero 1
itwiddle_171:
	.word "_i_twiddle_iv"

	.zero 1
lpcsin_172:
	.word "_lpcsin"

	.zero 1
evbands08_173:
	.word "_evBands08k_64"

	.zero 1
evmean08k_174:
	.word "_evMean08k_64"

	.zero 1
evbands08_175:
	.word "_evBands08k_256"

	.zero 1
evmean08k_176:
	.word "_evMean08k_256"

	.zero 1
evbands16_177:
	.word "_evBands16k_128"

	.zero 1
evmean16k_178:
	.word "_evMean16k_128"

	.zero 1
evbands16_179:
	.word "_evBands16k_512"

	.zero 1
evmean16k_180:
	.word "_evMean16k_512"

	.zero 1
evbands32_181:
	.word "_evBands32k_128"

	.zero 1
evmean32k_182:
	.word "_evMean32k_128"

	.zero 1
evbands32_183:
	.word "_evBands32k_1024"

	.zero 1
evmean32k_184:
	.word "_evMean32k_1024"

	.zero 1
evbands44_185:
	.word "_evBands44k_128"

	.zero 1
evmean44k_186:
	.word "_evMean44k_128"

	.zero 1
evbands44_187:
	.word "_evBands44k_1024"

	.zero 1
evmean44k_188:
	.word "_evMean44k_1024"

	.zero 1
evbands48_189:
	.word "_evBands48k_256"

	.zero 1
evmean48k_190:
	.word "_evMean48k_256"

	.zero 1
evbands48_191:
	.word "_evBands48k_1024"

	.zero 1
evmean48k_192:
	.word "_evMean48k_1024"

	.zero 1

	.end
