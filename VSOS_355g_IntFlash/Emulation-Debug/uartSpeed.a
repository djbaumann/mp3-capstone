
//_____________________________________________________________
//
	.sect code,SetUartSpeed	// 50 words
	.export _SetUartSpeed
_SetUartSpeed:
	stx LR0,(I6)+1
	stx I6,(I6) ; sty I4,(I6)
	ldx (I6)+1,I4
	stx A0,(I6) ; sty A1,(I6)+1
	stx B0,(I6) ; sty B1,(I6)+1
	ldc 3,B0	// 3 -> 0 -> ETb
	stx C0,(I6) ; sty C1,(I6)+1
	stx D0,(I6) ; sty D1,(I6)+1
	stx I0,(I6) ; ldy (I4)-3,NULL
	ldc _clockSpeed+7,I0	// ET2
// shiftRight
	ldx (I0)+2,A1 ; and NULL,NULL,B1	// ET2 ==> 7 -> ET3
	ldx (I0)-1,A0	// ET2 ==> 9 -> ET6
	add A1,A0,A0 ; ldx (I0)-2,A1	// ET3 + ET6 -> ET7
	ashl A1,B0,A1	// ETa << ETb -> ETc
	ldc 5,B0	// 5 -> 3 -> B0
	ldx (I0),A0 ; add A0,A1,C1	// ET7 + ETc -> 'shiftRight'
// extClock4KHz
	lsr A0,A0	// ET11 << (-1) -> AT14
	lsr A0,C0 ; ldx (I4)+1,A0	// AT14 << (-1) -> 'extClock4KHz'
// uartByteSpeed
	ldx (I4)+2,A1	// 0 -> B1
	add A,B,B	// 'bitsPerSecond' + ET16 -> ET17
	ldc 10,A0	// 10 -> 3 -> A0
	call divide32unsigned
	and NULL,NULL,A1	// 0 -> A1
// jumped away
	ldc 65535,B0	// 65535 -> 3 -> B0
	ldc 0,B1	// 0 -> B1
// (uartByteSpeed > 65535UL)
	j F0B7
	ashl A,C1,A	// ET19 << 'shiftRight' -> 'uartByteSpeed'
// jumped away
F0B4:	// (loop lvl 2)
	lsr C0,C0 ; ldx (I6)-1,NULL
	lsr A,A	// 'uartByteSpeed' << (-1) -> 'uartByteSpeed'
//   }
// {
//     extClock4KHz >>= 1;
//     uartByteSpeed >>= 1;
F0B7:	// (loop lvl 2)
	ldc 0,A2	// update guard bits (cmp)
	ldc 0,B2	// update guard bits (cmp)
	sub B,A,D ; ldx (I6)+1,NULL	// ET1b > 'uartByteSpeed' -> AT27
	// clear guard bits
	nop	// I6 += 1
	jcc F0B4	// unsigned compare
	nop
// jumped away
// (*(__y volatile u_int16 *)(u_int16)(0xFE03)) = UartDivider(extClock4KHz, (u_int16)uartByteSpeed);
	stx A0,(I6)+1	// ET20
	call _UartDivider
	stx C0,(I6)	// 'extClock4KHz'
// jumped away
	ldc 65027,I0	// 65027 -> ET22
	ldx (I6)-2,NULL ; sty A0,(I0)/*V*/	// I6 += -2
	ldx (I6)-1,I0
	ldy (I6),D1 ; ldx (I6)-1,D0
	ldy (I6),C1 ; ldx (I6)-1,C0
	ldy (I6),B1 ; ldx (I6)-1,B0
	ldy (I6),A1 ; ldx (I6)-1,A0
	ldx (I4),I6 ; ldy (I4),I4
	ldx (I6)-1,NULL	// I6 += -1
	ldx (I6)-1,LR0
	jr
	nop
// jumped away

	.end
