
//_____________________________________________________________
//
	.sect code,ListDevices	// 81 words
	.export _ListDevices
_ListDevices:
	ldx (I6)+1,NULL	// I6 += 1
	stx LR0,(I6)+1
	stx I6,(I6) ; sty I4,(I6)
	ldx (I6)+1,I4
	stx A0,(I6) ; sty A1,(I6)+1
	ldc installed_1,A0	// ET0
	stx B0,(I6) ; sty B1,(I6)+1
	stx C0,(I6) ; sty C1,(I6)+1
	stx D0,(I6) ; sty D1,(I6)+1
	stx I0,(I6) ; sty I1,(I6)+1
	stx I2,(I6) ; sty LC,(I6)+1
	stx LS,(I6)+1 ; sty LE,(I6)
// ("\nInstalled system devices:\n");
	call _vo_printf
	stx A0,(I6)	// ET0
// jumped away
	ldc 0,B1	// 0 -> 0 -> ET7
	ldc handled_3,D1	// ET16
	ldc cs_2,C1	// ETe
	ldc 65,C0	// 65 -> 1 -> ETc
	ldc String_4,D0	// ET18
	ldc 25,LC	// loop 26 iterations
	ldx (I6)-1,NULL ; and NULL,NULL,B0	// 0 -> 1 -> ET2
// 	for (i=0; i<26; i++)
	loop LC,F0B5-1
	ldc 0,A1	// I6 += -1
//loop resumes
// 	}
// {
// 		if (vo_pdevices[i])
	ldc _vo_pdevices,A0	// ET4
	add A0,A1,A0	// ET4 + 'i' -> AT1f
	mv A0,I2	// AT1f -> ET5
	ldx (I2),A0	// ET5 ==> ET6
	sub A0,NULL,A0	// ET6 == (0) -> (0)
	nop
	jzs F0B9	// signed compare
	sub A0,ONES,A0 ; mv A0,I0	// ET6 -> I0
// jumped away
	mv A0,I1	// AT20 -> ET9
	ldx (I6)+1,NULL	// I6 += 1
// 		}
// {
//  vo_printf("%c: %s",'A'+i, vo_pdevices[i]->Identify(vo_pdevices[i],0,0));
	stx B0,(I6)+1	// ET2
	stx B1,(I6)	// ET7
	ldx (I1),A0	// ET9 ==> ETa
	mv A0,LR0
	jr
	ldc lo(F0B10),LR0	// (return address)
// jumped away
F0B10:	// (loop lvl 2)
	ldx (I6)-1,NULL	// I6 += 1
	stx A0,(I6)+1 ; add C0,A1,A0	// ETb
	stx A0,(I6)+1	// ETd
	call _vo_printf
	stx C1,(I6)	// ETe
// jumped away
	ldx (I2),I0 ; ldy (I6)-2,NULL	// I6 += -3
// 			if (vo_pdevices[i]->fs)
	ldx (I0)+7,NULL	// ET11 += 9
	ldx (I0)+2,NULL	// ...
	ldx (I0),A0	// ET11 ==> ET12
	sub A0,NULL,A0	// ET12 == (0) -> (0)
	nop
	jzs F0B13	// signed compare
	nop
// jumped away
	stx B0,(I6)+1
	mv A0,I0 ; sub A0,ONES,A0	// ET12 -> I0
	mv A0,I2	// AT21 -> ET13
// 			}
// {
//  vo_printf(", handled by %s",vo_pdevices[i]->fs->Identify(vo_pdevices[i]->fs,0,0));
	stx B1,(I6)	// ET7
	ldx (I2),A0	// ET13 ==> ET14
	mv A0,LR0
	jr
	ldc lo(F0B14),LR0	// (return address)
// jumped away
F0B14:	// (loop lvl 2)
	ldx (I6)-1,NULL	// I6 += 1
	stx A0,(I6)+1	// ET15
	call _vo_printf
	stx D1,(I6)	// ET16
// jumped away
	ldx (I6)-1,NULL	// I6 += -2
F0B13:	// (loop lvl 2)
//  vo_printf(".\n");
	call _vo_printf
	stx D0,(I6)	// ET18
// jumped away
	ldx (I6)-1,NULL	// I6 += -1
F0B9:	// (loop lvl 2)
	sub A1,ONES,A1	// 'i' - (-1) -> 'i'
//	(0 nop's needed)
// loop end
F0B5:	// loop exit
	ldy (I6),LE ; ldx (I6)-1,LS
	ldy (I6),LC ; ldx (I6)-1,I2
	ldy (I6),I1 ; ldx (I6)-1,I0
	ldy (I6),D1 ; ldx (I6)-1,D0
	ldy (I6),C1 ; ldx (I6)-1,C0
	ldy (I6),B1 ; ldx (I6)-1,B0
	ldy (I6),A1 ; ldx (I6)-1,A0
	ldx (I4),I6 ; ldy (I4),I4
	ldx (I6)-1,NULL	// I6 += -1
	ldx (I6)-1,LR0
	jr
	nop
// jumped away

//_____________________________________________________________
//
	.sect code,StartOS3	// 61 words
	.export _StartOS3
_StartOS3:
	ldx (I6)+1,NULL	// I6 += 1
	stx LR0,(I6)+1
	stx I6,(I6) ; sty I4,(I6)
	ldx (I6)+1,I4
	stx A0,(I6) ; sty A1,(I6)+1
	stx B0,(I6) ; sty C0,(I6)+1
	stx C1,(I6) ; sty D0,(I6)+1
	stx I0,(I6)
// 	vo_printf("VSOS %0.2f build " "Jul 23 2018" " " "10:24:07" "\nVLSI Solution Oy 2012-2018 - www.vlsi.fi\n\n", (float)osVersion/100);
	ldc _osVersion,I0	// ET0
	call ushort_to_df
	ldx (I0),A0/*V*/	// ET0 ==> 'osVersion'
// jumped away
	ldc 7,D0	//  -> D0
	and NULL,NULL,C0	//  -> C0
	call df_div
	ldc 25600,C1	//  -> C1
// jumped away
	ldx (I6)+1,NULL	// I6 += 1
	stx A0,(I6)+1	// A0
	ldc vsos02f_5,A0	// ET4
	stx A1,(I6)+1	// A1
	stx B0,(I6)+1	// B0
	call _vo_printf
	stx A0,(I6)	// ET4
// jumped away
	ldc startingt_6,A0	// ET6
	ldx (I6)-3,NULL	// I6 += 1
// 	SysReport("Starting the kernel..");
	call _SysReport
	stx A0,(I6)	// ET6
// jumped away
// 	vo_kernel_init();
	call _vo_kernel_init
	ldx (I6)-1,NULL	// I6 += -1
// jumped away
	ldc startingd_7,A0	// ET9
	ldx (I6)+1,NULL	// I6 += 1
// 	SysReport("Starting Devices... ");
	call _SysReport
	stx A0,(I6)	// ET9
// jumped away
	ldc internalf_8,A0	// ETb
// 	}
// ("Internal Flash");
	call _SysReport
	stx A0,(I6)	// I6 += 1
// jumped away
	ldc _spi703348,I0	// I0
	and NULL,NULL,A0	// I6 += 1
// 		DevHwSpiCreate (&spi, &hwInfo, 0);
	stx A0,(I6)+1	// ETd
	ldc _hwInfo703348,A0	// ETe
	call _DevHwSpiCreate
	stx A0,(I6)	// ETe
// jumped away
	ldc _spiFlash703348,I0	// I0
	ldc 1024,A0	// 1024 -> 1 -> ET11
	ldx (I6)-1,NULL	// I6 += 1
// 		DevSpiFlashCreate(&spiFlash, &spi, 1024);
	stx A0,(I6)+1	// ET11
	ldc _spi703348,A0	// ETf
	call _DevSpiFlashCreate
	stx A0,(I6)	// ETf
// jumped away
	ldc _vo_pdevices+18,I0	// ET16
	ldc _spiFlash703348,A0	// ET12
// 		vo_pdevices['S'-'A'] = &spiFlash;
// 	ListDevices();
	call _ListDevices
	ldy (I6)-2,NULL ; stx A0,(I0)	// I6 += -2
// jumped away
	ldx (I6)-1,I0
	ldy (I6),D0 ; ldx (I6)-1,C1
	ldy (I6),C0 ; ldx (I6)-1,B0
	ldy (I6),A1 ; ldx (I6)-1,A0
	ldx (I4),I6 ; ldy (I4),I4
	ldx (I6)-1,NULL	// I6 += -1
	ldx (I6)-1,LR0
	jr
	nop
// jumped away

//_____________________________________________________________
//
	.sect code,AllocMemYPatch	// 21 words
	.export _AllocMemYPatch
_AllocMemYPatch:
	ldx (I6)+1,NULL	// I6 += 1
	stx LR0,(I6)+1
	stx I6,(I6) ; sty I4,(I6)
	ldx (I6)+1,I4
// ();
	call _Forbid
	stx A1,(I6) ; sty I0,(I6)
// jumped away
	ldc _forbidCount,I0	// ET0
	ldx (I0),A1/*V*/ ; ldy (I4)-3,NULL	// I4 += -3
//   oldForbidCount = forbidCount;
//   retVal = __AllocMemY(size, align);
	ldx (I4)+1,A0 ; ldy (I6)+1,NULL	// unspill 'align' from #0
	stx A0,(I6)+1	// 'align'
	ldx (I4)+2,A0	// unspill 'size' from #0
	call ___AllocMemY
	stx A0,(I6)	// 'size'
// jumped away
//   forbidCount = oldForbidCount;
//   Permit();
	call _Permit
	ldy (I6)-2,NULL ; stx A1,(I0)/*V*/	// I6 += -2
// jumped away
	ldy (I6),I0 ; ldx (I6)-1,A1
	ldx (I4),I6 ; ldy (I4),I4
	ldx (I6)-1,NULL	// I6 += -1
	ldx (I6)-1,LR0
	jr
	nop
// jumped away

//_____________________________________________________________
//
	.sect code,ApplyGFixes	// 49 words
	.export _ApplyGFixes
_ApplyGFixes:
	ldx (I6)+1,NULL	// I6 += 1
	stx LR0,(I6)+1
	stx A0,(I6) ; sty A1,(I6)+1
	ldc 6,A0	// 6 -> 0 -> ET3
	stx B0,(I6) ; sty B1,(I6)+1
	ldc _intOSgfix,B0	// ET1
	stx C0,(I6) ; and B1,NULL,B1
	ldc 14,C0	// 14 -> 0 -> ETa
	sty C1,(I6)+1 ; ashl B,A0,A
	ldc 10752,B1	// 10752 -> B1
	stx D0,(I6) ; add C0,ONES,C1
	sty D1,(I6)+1 ; add C0,NULL,B0
	stx I0,(I6) ; sty LC,(I6)+1
	ldc 31,LC	// loop 32 iterations
	stx LS,(I6) ; sty LE,(I6)
// intOSfixVal
	add B,A,D	// ET0 + ET4 -> 'intOSfixVal'
	ldc 0,B0	// 0 -> 'i'
// (i=0; i<32; i++)
	loop LC,F3B4-1
	ldc 32,B1	// 32 -> 0 -> ET7
//loop resumes
// 	}
// {
// 		if (i>1 && i!=13 && i!=14)
	add B0,ONES,A0	// 'i' <= (-1) -> AT17
	nop
	jle F3B8	// signed compare
	sub B0,C1,A0	// 'i' == ET9 -> AT19
// jumped away
	nop
	jzs F3B8	// signed compare
	sub B0,C0,A0	// 'i' == ETa -> AT18
// jumped away
	nop
	jzs F3B8	// signed compare
	add B0,B1,A0	// 'i' + ET7 -> ETb
// jumped away
// 		}
// {
// 			WriteIMem((void *)(i+32), intOSfixVal);
	call _WriteIMem
	mv A0,I0 ; add D,NULL,A	// ETb -> ETc
// jumped away
F3B8:	// (loop lvl 2)
	sub B0,ONES,B0	// 'i' - (-1) -> 'i'
//	(0 nop's needed)
// loop end
F3B4:	// loop exit
// 	WriteIMem((void *)(AllocMemY), 0x2a000000+((u_int32)((u_int16)AllocMemYPatch) << 6));
	ldc _AllocMemYPatch,B0	// ET10
	ldc 6,A0	// 6 -> 0 -> ET3
	ldc 0,B1
	ldc _AllocMemY,I0	// I0
	mv B1,B0 ; ashl B,A0,A
	ldc 10752,B1	// 10752 -> B1
	call _WriteIMem
	add B,A,A	// ETf + ET13 -> ET14
// jumped away
	ldy (I6),LE ; ldx (I6)-1,LS
	ldy (I6),LC ; ldx (I6)-1,I0
	ldy (I6),D1 ; ldx (I6)-1,D0
	ldy (I6),C1 ; ldx (I6)-1,C0
	ldy (I6),B1 ; ldx (I6)-1,B0
	ldy (I6),A1 ; ldx (I6)-1,A0
	ldx (I6)-1,LR0
	jr
	nop
// jumped away

//_____________________________________________________________
//
	.sect data_x,vsosvsgconst_x	// 202 words
installed_1:
	.word "\nInstalled system devices:\n"

	.zero 1
cs_2:
	.word "%c: %s"

	.zero 1
handled_3:
	.word ", handled by %s"

	.zero 1
String_4:
	.word ".\n"

	.zero 1
vsos02f_5:
	.word "VSOS %0.2f build Jul 23 2018 10:24:07\nVLSI Solution Oy 2012-2018 - www.vlsi"
	.word ".fi\n\n"

	.zero 1
startingt_6:
	.word "Starting the kernel.."

	.zero 1
startingd_7:
	.word "Starting Devices... "

	.zero 1
_hwInfo703348:
	.word 64576, 4095, 0, 24576
	.zero 2
	.zero 2
	.zero 1
internalf_8:
	.word "Internal Flash"

	.zero 1

//_____________________________________________________________
//
	.sect data_x,vsosvsgbss_x	// 66 words
_spiFlash703348:
	.bss 33
_spi703348:
	.bss 33

	.end
